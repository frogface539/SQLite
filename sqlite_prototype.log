2025-05-03 15:19:00,799 - compiler.tokenizer - ERROR - Invalid token at 0: &
2025-05-03 15:19:00,799 - __main__ - ERROR - Error: Invalid token at 0: &
2025-05-03 15:23:08,461 - compiler.tokenizer - ERROR - Invalid token at 0: &
2025-05-03 15:23:08,461 - __main__ - ERROR - Error: Invalid token at 0: &
2025-05-03 15:23:20,655 - compiler.tokenizer - DEBUG - KEYWORD -> <re.Match object; span=(0, 6), match='select'> at position 0
2025-05-03 15:23:20,656 - compiler.tokenizer - DEBUG - ASTERISK -> <re.Match object; span=(7, 8), match='*'> at position 7
2025-05-03 15:23:20,656 - compiler.tokenizer - DEBUG - KEYWORD -> <re.Match object; span=(9, 13), match='from'> at position 9
2025-05-03 15:23:20,656 - compiler.tokenizer - DEBUG - IDENTIFIER -> <re.Match object; span=(14, 20), match='pinchu'> at position 14
2025-05-03 15:23:20,656 - compiler.tokenizer - ERROR - Invalid token at 20: @
2025-05-03 15:23:20,657 - __main__ - ERROR - Error: Invalid token at 20: @
2025-05-03 15:24:20,794 - compiler.tokenizer - ERROR - Invalid token at 0: &
2025-05-03 15:24:20,794 - __main__ - ERROR - Error: Invalid token at 0: &
2025-05-03 15:24:33,655 - compiler.tokenizer - DEBUG - KEYWORD -> <re.Match object; span=(0, 6), match='select'> at position 0
2025-05-03 15:24:33,656 - compiler.tokenizer - DEBUG - ASTERISK -> <re.Match object; span=(7, 8), match='*'> at position 7
2025-05-03 15:24:33,657 - compiler.tokenizer - DEBUG - KEYWORD -> <re.Match object; span=(9, 13), match='from'> at position 9
2025-05-03 15:24:33,657 - compiler.tokenizer - DEBUG - NUMBER -> <re.Match object; span=(14, 16), match='77'> at position 14
2025-05-03 15:24:33,657 - compiler.tokenizer - DEBUG - IDENTIFIER -> <re.Match object; span=(16, 22), match='kibund'> at position 16
2025-05-03 15:24:33,657 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD 
 
        value = SELECT) 
 
        position = 0, Token(type = ASTERISK 
 
        value = *) 
 
        position = 7, Token(type = KEYWORD 
 
        value = FROM) 
 
        position = 9, Token(type = NUMBER 
 
        value = 77) 
 
        position = 14, Token(type = IDENTIFIER 
 
        value = kibund) 
 
        position = 16]
2025-05-03 15:25:24,335 - compiler.tokenizer - DEBUG - KEYWORD -> <re.Match object; span=(0, 6), match='select'> at position 0
2025-05-03 15:25:24,336 - compiler.tokenizer - DEBUG - ASTERISK -> <re.Match object; span=(7, 8), match='*'> at position 7
2025-05-03 15:25:24,336 - compiler.tokenizer - DEBUG - KEYWORD -> <re.Match object; span=(9, 13), match='from'> at position 9
2025-05-03 15:25:24,336 - compiler.tokenizer - DEBUG - IDENTIFIER -> <re.Match object; span=(14, 20), match='pinchu'> at position 14
2025-05-03 15:25:24,336 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD,
        value = SELECT),
        position = 0, Token(type = ASTERISK,
        value = *),
        position = 7, Token(type = KEYWORD,
        value = FROM),
        position = 9, Token(type = IDENTIFIER,
        value = pinchu),
        position = 14]
2025-05-03 15:28:06,040 - compiler.tokenizer - DEBUG - Matched KEYWORD: 'SELECT' at position 0
2025-05-03 15:28:06,041 - compiler.tokenizer - DEBUG - Matched ASTERISK: '*' at position 7
2025-05-03 15:28:06,041 - compiler.tokenizer - DEBUG - Matched KEYWORD: 'FROM' at position 9
2025-05-03 15:28:06,041 - compiler.tokenizer - DEBUG - Matched IDENTIFIER: 'pinchiu' at position 14
2025-05-03 15:28:06,041 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT), position = 0, Token(type = ASTERISK, value = *), position = 7, Token(type = KEYWORD, value = FROM), position = 9, Token(type = IDENTIFIER, value = pinchiu), position = 14]
2025-05-03 15:28:52,558 - compiler.tokenizer - ERROR - Invalid token at 0: &
2025-05-03 15:28:52,558 - __main__ - ERROR - Error: Invalid token at 0: &
2025-05-03 15:29:00,771 - compiler.tokenizer - DEBUG - Matched IDENTIFIER: 'create' at position 0
2025-05-03 15:29:00,771 - compiler.tokenizer - DEBUG - Matched IDENTIFIER: 'table' at position 7
2025-05-03 15:29:00,771 - compiler.tokenizer - DEBUG - Matched IDENTIFIER: 'me' at position 13
2025-05-03 15:29:00,771 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = IDENTIFIER, value = create), position = 0, Token(type = IDENTIFIER, value = table), position = 7, Token(type = IDENTIFIER, value = me), position = 13]
2025-05-03 15:29:22,576 - compiler.tokenizer - DEBUG - Matched KEYWORD: 'SELECT' at position 0
2025-05-03 15:29:22,577 - compiler.tokenizer - DEBUG - Matched ASTERISK: '*' at position 7
2025-05-03 15:29:22,577 - compiler.tokenizer - DEBUG - Matched KEYWORD: 'FROM' at position 9
2025-05-03 15:29:22,578 - compiler.tokenizer - DEBUG - Matched IDENTIFIER: 'table' at position 14
2025-05-03 15:29:22,578 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT), position = 0, Token(type = ASTERISK, value = *), position = 7, Token(type = KEYWORD, value = FROM), position = 9, Token(type = IDENTIFIER, value = table), position = 14]
2025-05-03 16:47:24,034 - __main__ - INFO - 
Processing query: SELECT * FROM users
2025-05-03 16:47:24,035 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT), position = 0, Token(type = ASTERISK, value = *), position = 7, Token(type = KEYWORD, value = FROM), position = 9, Token(type = IDENTIFIER, value = users), position = 14]
2025-05-03 16:47:24,035 - __main__ - DEBUG - Tokens: [Token(type = KEYWORD, value = SELECT), position = 0, Token(type = ASTERISK, value = *), position = 7, Token(type = KEYWORD, value = FROM), position = 9, Token(type = IDENTIFIER, value = users), position = 14]
2025-05-03 16:47:24,035 - __main__ - ERROR - Unexpected error: 'Token' object is not subscriptable
Traceback (most recent call last):
  File "c:\Users\LAKSHAY JAIN\Downloads\CODING\DATA SCIENCE\SQLite Project\main.py", line 23, in main
    word = parser.parse()
  File "c:\Users\LAKSHAY JAIN\Downloads\CODING\DATA SCIENCE\SQLite Project\compiler\parser.py", line 16, in parse
    return self.sql_statement()
           ~~~~~~~~~~~~~~~~~~^^
  File "c:\Users\LAKSHAY JAIN\Downloads\CODING\DATA SCIENCE\SQLite Project\compiler\parser.py", line 37, in sql_statement
    if current and current[0] == "KEYWORD" and current[1] == "SELECT":
                   ~~~~~~~^^^
TypeError: 'Token' object is not subscriptable
2025-05-03 16:47:24,050 - __main__ - INFO - 
Processing query: SELECT name, age FROM employees
2025-05-03 16:47:24,050 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT), position = 0, Token(type = IDENTIFIER, value = name), position = 7, Token(type = COMMA, value = ,), position = 11, Token(type = IDENTIFIER, value = age), position = 13, Token(type = KEYWORD, value = FROM), position = 17, Token(type = IDENTIFIER, value = employees), position = 22]
2025-05-03 16:47:24,050 - __main__ - DEBUG - Tokens: [Token(type = KEYWORD, value = SELECT), position = 0, Token(type = IDENTIFIER, value = name), position = 7, Token(type = COMMA, value = ,), position = 11, Token(type = IDENTIFIER, value = age), position = 13, Token(type = KEYWORD, value = FROM), position = 17, Token(type = IDENTIFIER, value = employees), position = 22]
2025-05-03 16:47:24,050 - __main__ - ERROR - Unexpected error: 'Token' object is not subscriptable
Traceback (most recent call last):
  File "c:\Users\LAKSHAY JAIN\Downloads\CODING\DATA SCIENCE\SQLite Project\main.py", line 23, in main
    word = parser.parse()
  File "c:\Users\LAKSHAY JAIN\Downloads\CODING\DATA SCIENCE\SQLite Project\compiler\parser.py", line 16, in parse
    return self.sql_statement()
           ~~~~~~~~~~~~~~~~~~^^
  File "c:\Users\LAKSHAY JAIN\Downloads\CODING\DATA SCIENCE\SQLite Project\compiler\parser.py", line 37, in sql_statement
    if current and current[0] == "KEYWORD" and current[1] == "SELECT":
                   ~~~~~~~^^^
TypeError: 'Token' object is not subscriptable
2025-05-03 16:47:28,283 - __main__ - INFO - 
Processing query: SELECT * FROM users
2025-05-03 16:47:28,284 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT), position = 0, Token(type = ASTERISK, value = *), position = 7, Token(type = KEYWORD, value = FROM), position = 9, Token(type = IDENTIFIER, value = users), position = 14]
2025-05-03 16:47:28,284 - __main__ - DEBUG - Tokens: [Token(type = KEYWORD, value = SELECT), position = 0, Token(type = ASTERISK, value = *), position = 7, Token(type = KEYWORD, value = FROM), position = 9, Token(type = IDENTIFIER, value = users), position = 14]
2025-05-03 16:47:28,284 - __main__ - ERROR - Unexpected error: 'Token' object is not subscriptable
Traceback (most recent call last):
  File "c:\Users\LAKSHAY JAIN\Downloads\CODING\DATA SCIENCE\SQLite Project\main.py", line 23, in main
    word = parser.parse()
  File "c:\Users\LAKSHAY JAIN\Downloads\CODING\DATA SCIENCE\SQLite Project\compiler\parser.py", line 16, in parse
    return self.sql_statement()
           ~~~~~~~~~~~~~~~~~~^^
  File "c:\Users\LAKSHAY JAIN\Downloads\CODING\DATA SCIENCE\SQLite Project\compiler\parser.py", line 37, in sql_statement
    if current and current[0] == "KEYWORD" and current[1] == "SELECT":
                   ~~~~~~~^^^
TypeError: 'Token' object is not subscriptable
2025-05-03 16:47:28,292 - __main__ - INFO - 
Processing query: SELECT name, age FROM employees
2025-05-03 16:47:28,293 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT), position = 0, Token(type = IDENTIFIER, value = name), position = 7, Token(type = COMMA, value = ,), position = 11, Token(type = IDENTIFIER, value = age), position = 13, Token(type = KEYWORD, value = FROM), position = 17, Token(type = IDENTIFIER, value = employees), position = 22]
2025-05-03 16:47:28,293 - __main__ - DEBUG - Tokens: [Token(type = KEYWORD, value = SELECT), position = 0, Token(type = IDENTIFIER, value = name), position = 7, Token(type = COMMA, value = ,), position = 11, Token(type = IDENTIFIER, value = age), position = 13, Token(type = KEYWORD, value = FROM), position = 17, Token(type = IDENTIFIER, value = employees), position = 22]
2025-05-03 16:47:28,293 - __main__ - ERROR - Unexpected error: 'Token' object is not subscriptable
Traceback (most recent call last):
  File "c:\Users\LAKSHAY JAIN\Downloads\CODING\DATA SCIENCE\SQLite Project\main.py", line 23, in main
    word = parser.parse()
  File "c:\Users\LAKSHAY JAIN\Downloads\CODING\DATA SCIENCE\SQLite Project\compiler\parser.py", line 16, in parse
    return self.sql_statement()
           ~~~~~~~~~~~~~~~~~~^^
  File "c:\Users\LAKSHAY JAIN\Downloads\CODING\DATA SCIENCE\SQLite Project\compiler\parser.py", line 37, in sql_statement
    if current and current[0] == "KEYWORD" and current[1] == "SELECT":
                   ~~~~~~~^^^
TypeError: 'Token' object is not subscriptable
2025-05-03 16:48:53,647 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT), position = 0, Token(type = ASTERISK, value = *), position = 7, Token(type = KEYWORD, value = FROM), position = 9, Token(type = IDENTIFIER, value = pinchi), position = 14]
2025-05-03 16:48:53,647 - __main__ - DEBUG - Tokens: [Token(type = KEYWORD, value = SELECT), position = 0, Token(type = ASTERISK, value = *), position = 7, Token(type = KEYWORD, value = FROM), position = 9, Token(type = IDENTIFIER, value = pinchi), position = 14]
2025-05-03 16:48:53,648 - __main__ - ERROR - Unexpected Error: 'Token' object is not subscriptable
Traceback (most recent call last):
  File "c:\Users\LAKSHAY JAIN\Downloads\CODING\DATA SCIENCE\SQLite Project\main.py", line 28, in main
    ast = parser.parse()
  File "c:\Users\LAKSHAY JAIN\Downloads\CODING\DATA SCIENCE\SQLite Project\compiler\parser.py", line 16, in parse
    return self.sql_statement()
           ~~~~~~~~~~~~~~~~~~^^
  File "c:\Users\LAKSHAY JAIN\Downloads\CODING\DATA SCIENCE\SQLite Project\compiler\parser.py", line 37, in sql_statement
    if current and current[0] == "KEYWORD" and current[1] == "SELECT":
                   ~~~~~~~^^^
TypeError: 'Token' object is not subscriptable
2025-05-03 16:49:28,388 - compiler.tokenizer - ERROR - Invalid token at 20: ;
2025-05-03 16:49:28,389 - __main__ - ERROR - Tokenization Error: Invalid token at 20: ;
2025-05-03 16:49:33,223 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT), position = 0, Token(type = ASTERISK, value = *), position = 7, Token(type = KEYWORD, value = FROM), position = 9]
2025-05-03 16:49:33,223 - __main__ - DEBUG - Tokens: [Token(type = KEYWORD, value = SELECT), position = 0, Token(type = ASTERISK, value = *), position = 7, Token(type = KEYWORD, value = FROM), position = 9]
2025-05-03 16:49:33,223 - __main__ - ERROR - Unexpected Error: 'Token' object is not subscriptable
Traceback (most recent call last):
  File "c:\Users\LAKSHAY JAIN\Downloads\CODING\DATA SCIENCE\SQLite Project\main.py", line 28, in main
    ast = parser.parse()
  File "c:\Users\LAKSHAY JAIN\Downloads\CODING\DATA SCIENCE\SQLite Project\compiler\parser.py", line 16, in parse
    return self.sql_statement()
           ~~~~~~~~~~~~~~~~~~^^
  File "c:\Users\LAKSHAY JAIN\Downloads\CODING\DATA SCIENCE\SQLite Project\compiler\parser.py", line 37, in sql_statement
    if current and current[0] == "KEYWORD" and current[1] == "SELECT":
                   ~~~~~~~^^^
TypeError: 'Token' object is not subscriptable
2025-05-03 16:50:12,534 - compiler.tokenizer - ERROR - Invalid token at 0: &
2025-05-03 16:50:12,534 - __main__ - ERROR - Tokenization Error: Invalid token at 0: &
2025-05-03 16:50:21,085 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT), position = 0, Token(type = ASTERISK, value = *), position = 7, Token(type = KEYWORD, value = FROM), position = 9]
2025-05-03 16:50:21,085 - __main__ - DEBUG - Tokens: [Token(type = KEYWORD, value = SELECT), position = 0, Token(type = ASTERISK, value = *), position = 7, Token(type = KEYWORD, value = FROM), position = 9]
2025-05-03 16:50:21,085 - __main__ - ERROR - Unexpected Error: 'Token' object is not subscriptable
Traceback (most recent call last):
  File "c:\Users\LAKSHAY JAIN\Downloads\CODING\DATA SCIENCE\SQLite Project\main.py", line 28, in main
    ast = parser.parse()
  File "c:\Users\LAKSHAY JAIN\Downloads\CODING\DATA SCIENCE\SQLite Project\compiler\parser.py", line 16, in parse
    return self.sql_statement()
           ~~~~~~~~~~~~~~~~~~^^
  File "c:\Users\LAKSHAY JAIN\Downloads\CODING\DATA SCIENCE\SQLite Project\compiler\parser.py", line 37, in sql_statement
    if current and current[0] == "KEYWORD" and current[1] == "SELECT":
                   ~~~~~~~^^^
TypeError: 'Token' object is not subscriptable
2025-05-03 16:50:28,210 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT), position = 0, Token(type = ASTERISK, value = *), position = 7, Token(type = KEYWORD, value = FROM), position = 9, Token(type = IDENTIFIER, value = pinchu), position = 14]
2025-05-03 16:50:28,210 - __main__ - DEBUG - Tokens: [Token(type = KEYWORD, value = SELECT), position = 0, Token(type = ASTERISK, value = *), position = 7, Token(type = KEYWORD, value = FROM), position = 9, Token(type = IDENTIFIER, value = pinchu), position = 14]
2025-05-03 16:50:28,210 - __main__ - ERROR - Unexpected Error: 'Token' object is not subscriptable
Traceback (most recent call last):
  File "c:\Users\LAKSHAY JAIN\Downloads\CODING\DATA SCIENCE\SQLite Project\main.py", line 28, in main
    ast = parser.parse()
  File "c:\Users\LAKSHAY JAIN\Downloads\CODING\DATA SCIENCE\SQLite Project\compiler\parser.py", line 16, in parse
    return self.sql_statement()
           ~~~~~~~~~~~~~~~~~~^^
  File "c:\Users\LAKSHAY JAIN\Downloads\CODING\DATA SCIENCE\SQLite Project\compiler\parser.py", line 37, in sql_statement
    if current and current[0] == "KEYWORD" and current[1] == "SELECT":
                   ~~~~~~~^^^
TypeError: 'Token' object is not subscriptable
2025-05-03 16:53:40,212 - compiler.tokenizer - ERROR - Invalid token at 0: &
2025-05-03 16:53:40,212 - __main__ - ERROR - Tokenization Error: Invalid token at 0: &
2025-05-03 16:53:48,468 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT), position = 0, Token(type = ASTERISK, value = *), position = 7, Token(type = KEYWORD, value = FROM), position = 9, Token(type = IDENTIFIER, value = pinchu), position = 14]
2025-05-03 16:53:48,468 - __main__ - DEBUG - Tokens: [Token(type = KEYWORD, value = SELECT), position = 0, Token(type = ASTERISK, value = *), position = 7, Token(type = KEYWORD, value = FROM), position = 9, Token(type = IDENTIFIER, value = pinchu), position = 14]
2025-05-03 16:53:48,468 - __main__ - ERROR - Unexpected Error: 'Token' object is not subscriptable
Traceback (most recent call last):
  File "c:\Users\LAKSHAY JAIN\Downloads\CODING\DATA SCIENCE\SQLite Project\main.py", line 28, in main
    ast = parser.parse()
  File "c:\Users\LAKSHAY JAIN\Downloads\CODING\DATA SCIENCE\SQLite Project\compiler\parser.py", line 16, in parse
    return self.sql_statement()
           ~~~~~~~~~~~~~~~~~~^^
  File "c:\Users\LAKSHAY JAIN\Downloads\CODING\DATA SCIENCE\SQLite Project\compiler\parser.py", line 37, in sql_statement
    return self.select_statement()
               ^^^^^^^^^^
TypeError: 'Token' object is not subscriptable
2025-05-03 16:54:25,878 - compiler.tokenizer - ERROR - Invalid token at 0: &
2025-05-03 16:54:25,879 - __main__ - ERROR - Tokenization Error: Invalid token at 0: &
2025-05-03 16:54:31,997 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT), position = 0, Token(type = ASTERISK, value = *), position = 6, Token(type = KEYWORD, value = FROM), position = 8, Token(type = IDENTIFIER, value = g), position = 13]
2025-05-03 16:54:31,997 - __main__ - DEBUG - Tokens: [Token(type = KEYWORD, value = SELECT), position = 0, Token(type = ASTERISK, value = *), position = 6, Token(type = KEYWORD, value = FROM), position = 8, Token(type = IDENTIFIER, value = g), position = 13]
2025-05-03 16:54:31,997 - __main__ - ERROR - Unexpected Error: 'Token' object is not subscriptable
Traceback (most recent call last):
  File "c:\Users\LAKSHAY JAIN\Downloads\CODING\DATA SCIENCE\SQLite Project\main.py", line 28, in main
  File "c:\Users\LAKSHAY JAIN\Downloads\CODING\DATA SCIENCE\SQLite Project\compiler\parser.py", line 16, in parse
    return self.sql_statement()
           ~~~~~~~~~~~~~~~~~~^^
  File "c:\Users\LAKSHAY JAIN\Downloads\CODING\DATA SCIENCE\SQLite Project\compiler\parser.py", line 37, in sql_statement
    return self.select_statement()
               ^^^^^^^^^^
TypeError: 'Token' object is not subscriptable
2025-05-03 16:54:37,492 - compiler.tokenizer - ERROR - Invalid token at 24: ;
2025-05-03 16:54:37,492 - compiler.tokenizer - ERROR - Invalid token at 39: ;
2025-05-03 16:54:37,492 - compiler.tokenizer - ERROR - Invalid token at 55: ;
2025-05-03 16:55:33,534 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT), position = 0, Token(type = ASTERISK, value = *), position = 7, Token(type = KEYWORD, value = FROM), position = 9, Token(type = IDENTIFIER, value = table_name), position = 14, Token(type = SEMICOLON, value = ;), position = 24]
2025-05-03 16:55:33,534 - compiler.parser - INFO - Parsing SELECT statement
2025-05-03 16:55:33,534 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT), position = 0
2025-05-03 16:55:33,534 - compiler.parser - DEBUG - Found '*' , selecting all columns....
2025-05-03 16:55:33,534 - compiler.parser - DEBUG - Processed token: Token(type = ASTERISK, value = *), position = 7
2025-05-03 16:55:33,534 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM), position = 9
2025-05-03 16:55:33,534 - compiler.parser - DEBUG - Found table name: table_name
2025-05-03 16:55:33,534 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = table_name), position = 14
2025-05-03 16:55:33,534 - compiler.parser - INFO - SELECT parsed: columns = ['*'] , table = table_name
2025-05-03 16:55:33,535 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT), position = 0, Token(type = IDENTIFIER, value = column1), position = 7, Token(type = COMMA, value = ,), position = 14, Token(type = IDENTIFIER, value = column2), position = 16, Token(type = KEYWORD, value = FROM), position = 24, Token(type = IDENTIFIER, value = table_name), position = 29, Token(type = SEMICOLON, value = ;), position = 39]
2025-05-03 16:55:33,535 - compiler.parser - INFO - Parsing SELECT statement
2025-05-03 16:55:33,535 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT), position = 0
2025-05-03 16:55:33,535 - compiler.parser - DEBUG - Found Column: column1
2025-05-03 16:55:33,535 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = column1), position = 7
2025-05-03 16:55:33,535 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,), position = 14
2025-05-03 16:55:33,535 - compiler.parser - DEBUG - Found Column: column2
2025-05-03 16:55:33,535 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = column2), position = 16
2025-05-03 16:55:33,535 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM), position = 24
2025-05-03 16:55:33,535 - compiler.parser - DEBUG - Found table name: table_name
2025-05-03 16:55:33,535 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = table_name), position = 29
2025-05-03 16:55:33,535 - compiler.parser - INFO - SELECT parsed: columns = ['column1', 'column2'] , table = table_name
2025-05-03 16:55:33,536 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT), position = 0, Token(type = KEYWORD, value = INTO), position = 7, Token(type = IDENTIFIER, value = table_name), position = 12, Token(type = KEYWORD, value = VALUES), position = 23, Token(type = LPAREN, value = (), position = 30, Token(type = QUOTE, value = '), position = 31, Token(type = IDENTIFIER, value = value1), position = 32, Token(type = QUOTE, value = '), position = 38, Token(type = COMMA, value = ,), position = 39, Token(type = NUMBER, value = 123), position = 41, Token(type = COMMA, value = ,), position = 44, Token(type = QUOTE, value = '), position = 46, Token(type = IDENTIFIER, value = value2), position = 47, Token(type = QUOTE, value = '), position = 53, Token(type = RPAREN, value = )), position = 54, Token(type = SEMICOLON, value = ;), position = 55]
2025-05-03 16:55:33,536 - compiler.parser - INFO - Parsing INSERT statement.
2025-05-03 16:55:33,536 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT), position = 0
2025-05-03 16:55:33,536 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO), position = 7
2025-05-03 16:55:33,536 - compiler.parser - DEBUG - Found table name: table_name
2025-05-03 16:55:33,536 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = table_name), position = 12
2025-05-03 16:55:33,536 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = VALUES), position = 23
2025-05-03 16:55:33,536 - compiler.parser - ERROR - Expected at least one value in INSERT statement.
2025-05-03 16:55:41,408 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT), position = 0, Token(type = ASTERISK, value = *), position = 7, Token(type = KEYWORD, value = FROM), position = 9, Token(type = IDENTIFIER, value = table_name), position = 14, Token(type = SEMICOLON, value = ;), position = 24]
2025-05-03 16:55:41,409 - compiler.parser - INFO - Parsing SELECT statement
2025-05-03 16:55:41,409 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT), position = 0
2025-05-03 16:55:41,409 - compiler.parser - DEBUG - Found '*' , selecting all columns....
2025-05-03 16:55:41,409 - compiler.parser - DEBUG - Processed token: Token(type = ASTERISK, value = *), position = 7
2025-05-03 16:55:41,409 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM), position = 9
2025-05-03 16:55:41,409 - compiler.parser - DEBUG - Found table name: table_name
2025-05-03 16:55:41,409 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = table_name), position = 14
2025-05-03 16:55:41,409 - compiler.parser - INFO - SELECT parsed: columns = ['*'] , table = table_name
2025-05-03 16:55:41,409 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT), position = 0, Token(type = IDENTIFIER, value = column1), position = 7, Token(type = COMMA, value = ,), position = 14, Token(type = IDENTIFIER, value = column2), position = 16, Token(type = KEYWORD, value = FROM), position = 24, Token(type = IDENTIFIER, value = table_name), position = 29, Token(type = SEMICOLON, value = ;), position = 39]
2025-05-03 16:55:41,409 - compiler.parser - INFO - Parsing SELECT statement
2025-05-03 16:55:41,409 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT), position = 0
2025-05-03 16:55:41,409 - compiler.parser - DEBUG - Found Column: column1
2025-05-03 16:55:41,409 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = column1), position = 7
2025-05-03 16:55:41,409 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,), position = 14
2025-05-03 16:55:41,409 - compiler.parser - DEBUG - Found Column: column2
2025-05-03 16:55:41,409 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = column2), position = 16
2025-05-03 16:55:41,409 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM), position = 24
2025-05-03 16:55:41,409 - compiler.parser - DEBUG - Found table name: table_name
2025-05-03 16:55:41,409 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = table_name), position = 29
2025-05-03 16:55:41,409 - compiler.parser - INFO - SELECT parsed: columns = ['column1', 'column2'] , table = table_name
2025-05-03 16:55:41,410 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT), position = 0, Token(type = KEYWORD, value = INTO), position = 7, Token(type = IDENTIFIER, value = table_name), position = 12, Token(type = KEYWORD, value = VALUES), position = 23, Token(type = LPAREN, value = (), position = 30, Token(type = QUOTE, value = '), position = 31, Token(type = IDENTIFIER, value = value1), position = 32, Token(type = QUOTE, value = '), position = 38, Token(type = COMMA, value = ,), position = 39, Token(type = NUMBER, value = 123), position = 41, Token(type = COMMA, value = ,), position = 44, Token(type = QUOTE, value = '), position = 46, Token(type = IDENTIFIER, value = value2), position = 47, Token(type = QUOTE, value = '), position = 53, Token(type = RPAREN, value = )), position = 54, Token(type = SEMICOLON, value = ;), position = 55]
2025-05-03 16:55:41,410 - compiler.parser - INFO - Parsing INSERT statement.
2025-05-03 16:55:41,410 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT), position = 0
2025-05-03 16:55:41,410 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO), position = 7
2025-05-03 16:55:41,410 - compiler.parser - DEBUG - Found table name: table_name
2025-05-03 16:55:41,410 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = table_name), position = 12
2025-05-03 16:55:41,410 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = VALUES), position = 23
2025-05-03 16:55:41,410 - compiler.parser - ERROR - Expected at least one value in INSERT statement.
2025-05-03 16:58:49,553 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT), position = 0, Token(type = ASTERISK, value = *), position = 7, Token(type = KEYWORD, value = FROM), position = 9, Token(type = IDENTIFIER, value = table), position = 14]
2025-05-03 16:59:50,872 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT), position = 0, Token(type = ASTERISK, value = *), position = 7, Token(type = KEYWORD, value = FROM), position = 9, Token(type = IDENTIFIER, value = table), position = 14]
2025-05-03 17:00:17,915 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT), position = 0, Token(type = KEYWORD, value = INTO), position = 7, Token(type = IDENTIFIER, value = table), position = 12]
2025-05-03 17:07:32,142 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = ASTERISK, value = *, position = 7), Token(type = KEYWORD, value = FROM, position = 9), Token(type = IDENTIFIER, value = table, position = 14), Token(type = SEMICOLON, value = ;, position = 19)]
2025-05-03 17:07:32,142 - compiler.parser - INFO - Parsing SELECT statement
2025-05-03 17:07:32,143 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-03 17:07:32,143 - compiler.parser - DEBUG - Found '*' , selecting all columns....
2025-05-03 17:07:32,143 - compiler.parser - DEBUG - Processed token: Token(type = ASTERISK, value = *, position = 7)
2025-05-03 17:07:32,143 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 9)
2025-05-03 17:07:32,143 - compiler.parser - DEBUG - Found table name: table
2025-05-03 17:07:32,143 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = table, position = 14)
2025-05-03 17:07:32,143 - compiler.parser - INFO - SELECT parsed: columns = ['*'], table = table
2025-05-03 17:08:33,547 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = ASTERISK, value = *, position = 7), Token(type = KEYWORD, value = FROM, position = 9), Token(type = IDENTIFIER, value = table, position = 14), Token(type = COMMA, value = ,, position = 19)]
2025-05-03 17:08:33,548 - compiler.parser - INFO - Parsing SELECT statement
2025-05-03 17:08:33,548 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-03 17:08:33,548 - compiler.parser - DEBUG - Found '*' , selecting all columns....
2025-05-03 17:08:33,548 - compiler.parser - DEBUG - Processed token: Token(type = ASTERISK, value = *, position = 7)
2025-05-03 17:08:33,548 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 9)
2025-05-03 17:08:33,548 - compiler.parser - DEBUG - Found table name: table
2025-05-03 17:08:33,548 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = table, position = 14)
2025-05-03 17:08:33,548 - compiler.parser - INFO - SELECT parsed: columns = ['*'], table = table
2025-05-03 17:08:58,829 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = ASTERISK, value = *, position = 7), Token(type = KEYWORD, value = FROM, position = 9), Token(type = IDENTIFIER, value = table, position = 14), Token(type = COMMA, value = ,, position = 20), Token(type = KEYWORD, value = INSERT, position = 22)]
2025-05-03 17:08:58,829 - compiler.parser - INFO - Parsing SELECT statement
2025-05-03 17:08:58,829 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-03 17:08:58,829 - compiler.parser - DEBUG - Found '*' , selecting all columns....
2025-05-03 17:08:58,830 - compiler.parser - DEBUG - Processed token: Token(type = ASTERISK, value = *, position = 7)
2025-05-03 17:08:58,830 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 9)
2025-05-03 17:08:58,830 - compiler.parser - DEBUG - Found table name: table
2025-05-03 17:08:58,830 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = table, position = 14)
2025-05-03 17:08:58,830 - compiler.parser - INFO - SELECT parsed: columns = ['*'], table = table
2025-05-03 17:10:40,373 - compiler.tokenizer - ERROR - Invalid token at 47: .
2025-05-03 17:11:05,223 - compiler.tokenizer - ERROR - Invalid token at 47: .
2025-05-03 17:11:26,841 - compiler.tokenizer - ERROR - Invalid token at 47: .
2025-05-03 17:12:09,819 - compiler.tokenizer - ERROR - Invalid token at 51: =
2025-05-03 17:13:00,569 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = IDENTIFIER, value = column1, position = 7), Token(type = KEYWORD, value = FROM, position = 15), Token(type = IDENTIFIER, value = table1, position = 20), Token(type = COMMA, value = ,, position = 26), Token(type = IDENTIFIER, value = table2, position = 28), Token(type = IDENTIFIER, value = where, position = 35), Token(type = IDENTIFIER, value = table1, position = 41), Token(type = DOT, value = ., position = 47), Token(type = IDENTIFIER, value = id, position = 48), Token(type = EQUALS, value = =, position = 51), Token(type = IDENTIFIER, value = table2, position = 53), Token(type = DOT, value = ., position = 59), Token(type = IDENTIFIER, value = id, position = 60), Token(type = SEMICOLON, value = ;, position = 62)]
2025-05-03 17:13:00,570 - compiler.parser - INFO - Parsing SELECT statement
2025-05-03 17:13:00,570 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-03 17:13:00,570 - compiler.parser - DEBUG - Found Column: column1
2025-05-03 17:13:00,570 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = column1, position = 7)
2025-05-03 17:13:00,570 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 15)
2025-05-03 17:13:00,570 - compiler.parser - DEBUG - Found table name: table1
2025-05-03 17:13:00,570 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = table1, position = 20)
2025-05-03 17:13:00,570 - compiler.parser - INFO - SELECT parsed: columns = ['column1'], table = table1
2025-05-03 17:16:01,676 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = IDENTIFIER, value = column1, position = 7), Token(type = KEYWORD, value = FROM, position = 15), Token(type = IDENTIFIER, value = table1, position = 20), Token(type = COMMA, value = ,, position = 26), Token(type = IDENTIFIER, value = table2, position = 28), Token(type = IDENTIFIER, value = where, position = 35), Token(type = IDENTIFIER, value = table1, position = 41), Token(type = DOT, value = ., position = 47), Token(type = IDENTIFIER, value = id, position = 48), Token(type = EQUALS, value = =, position = 51), Token(type = IDENTIFIER, value = table2, position = 53), Token(type = DOT, value = ., position = 59), Token(type = IDENTIFIER, value = id, position = 60), Token(type = SEMICOLON, value = ;, position = 62)]
2025-05-03 17:16:01,676 - compiler.parser - INFO - Parsing SELECT statement
2025-05-03 17:16:01,677 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-03 17:16:01,677 - compiler.parser - DEBUG - Found Column: column1
2025-05-03 17:16:01,677 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = column1, position = 7)
2025-05-03 17:16:01,677 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 15)
2025-05-03 17:16:01,677 - compiler.parser - DEBUG - Found table name: table1
2025-05-03 17:16:01,677 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = table1, position = 20)
2025-05-03 17:16:01,677 - compiler.parser - INFO - SELECT parsed: columns = ['column1'], table = table1
2025-05-03 17:23:35,616 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = IDENTIFIER, value = column1, position = 7), Token(type = KEYWORD, value = FROM, position = 15), Token(type = IDENTIFIER, value = table1, position = 20), Token(type = COMMA, value = ,, position = 26), Token(type = IDENTIFIER, value = table2, position = 28), Token(type = IDENTIFIER, value = where, position = 35), Token(type = IDENTIFIER, value = table1, position = 41), Token(type = DOT, value = ., position = 47), Token(type = IDENTIFIER, value = id, position = 48), Token(type = EQUALS, value = =, position = 51), Token(type = IDENTIFIER, value = table2, position = 53), Token(type = DOT, value = ., position = 59), Token(type = IDENTIFIER, value = id, position = 60), Token(type = SEMICOLON, value = ;, position = 62)]
2025-05-03 17:23:35,616 - compiler.parser - INFO - Parsing SELECT statement
2025-05-03 17:23:35,616 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-03 17:23:35,616 - compiler.parser - DEBUG - Found Column: column1
2025-05-03 17:23:35,616 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = column1, position = 7)
2025-05-03 17:23:35,616 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 15)
2025-05-03 17:24:36,071 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = IDENTIFIER, value = column1, position = 7), Token(type = KEYWORD, value = FROM, position = 15), Token(type = IDENTIFIER, value = table1, position = 20), Token(type = COMMA, value = ,, position = 26), Token(type = IDENTIFIER, value = table2, position = 28), Token(type = IDENTIFIER, value = where, position = 35), Token(type = IDENTIFIER, value = table1, position = 41), Token(type = DOT, value = ., position = 47), Token(type = IDENTIFIER, value = id, position = 48), Token(type = EQUALS, value = =, position = 51), Token(type = IDENTIFIER, value = table2, position = 53), Token(type = DOT, value = ., position = 59), Token(type = IDENTIFIER, value = id, position = 60), Token(type = SEMICOLON, value = ;, position = 62)]
2025-05-03 17:24:36,071 - compiler.parser - INFO - Parsing SELECT statement
2025-05-03 17:24:36,071 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-03 17:24:36,071 - compiler.parser - DEBUG - Found Column: column1
2025-05-03 17:24:36,071 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = column1, position = 7)
2025-05-03 17:24:36,071 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 15)
2025-05-03 17:25:19,108 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = IDENTIFIER, value = column1, position = 7), Token(type = KEYWORD, value = FROM, position = 15), Token(type = IDENTIFIER, value = table1, position = 20), Token(type = COMMA, value = ,, position = 26), Token(type = IDENTIFIER, value = table2, position = 28), Token(type = IDENTIFIER, value = where, position = 35), Token(type = IDENTIFIER, value = table1, position = 41), Token(type = DOT, value = ., position = 47), Token(type = IDENTIFIER, value = id, position = 48), Token(type = EQUALS, value = =, position = 51), Token(type = IDENTIFIER, value = table2, position = 53), Token(type = DOT, value = ., position = 59), Token(type = IDENTIFIER, value = id, position = 60), Token(type = SEMICOLON, value = ;, position = 62)]
2025-05-03 17:25:19,108 - compiler.parser - INFO - Parsing SELECT statement
2025-05-03 17:25:19,109 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-03 17:25:19,109 - compiler.parser - DEBUG - Found Column: column1
2025-05-03 17:25:19,109 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = column1, position = 7)
2025-05-03 17:25:19,109 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 15)
2025-05-03 17:27:19,609 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = IDENTIFIER, value = column1, position = 7), Token(type = KEYWORD, value = FROM, position = 15), Token(type = IDENTIFIER, value = table1, position = 20), Token(type = COMMA, value = ,, position = 26), Token(type = IDENTIFIER, value = table2, position = 28), Token(type = IDENTIFIER, value = where, position = 35), Token(type = IDENTIFIER, value = table1, position = 41), Token(type = DOT, value = ., position = 47), Token(type = IDENTIFIER, value = id, position = 48), Token(type = EQUALS, value = =, position = 51), Token(type = IDENTIFIER, value = table2, position = 53), Token(type = DOT, value = ., position = 59), Token(type = IDENTIFIER, value = id, position = 60), Token(type = SEMICOLON, value = ;, position = 62)]
2025-05-03 17:27:56,731 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = IDENTIFIER, value = column1, position = 7), Token(type = KEYWORD, value = FROM, position = 15), Token(type = IDENTIFIER, value = table1, position = 20), Token(type = COMMA, value = ,, position = 26), Token(type = IDENTIFIER, value = table2, position = 28), Token(type = IDENTIFIER, value = where, position = 35), Token(type = IDENTIFIER, value = table1, position = 41), Token(type = DOT, value = ., position = 47), Token(type = IDENTIFIER, value = id, position = 48), Token(type = EQUALS, value = =, position = 51), Token(type = IDENTIFIER, value = table2, position = 53), Token(type = DOT, value = ., position = 59), Token(type = IDENTIFIER, value = id, position = 60), Token(type = SEMICOLON, value = ;, position = 62)]
2025-05-03 17:28:11,351 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = IDENTIFIER, value = column1, position = 7), Token(type = KEYWORD, value = FROM, position = 15), Token(type = IDENTIFIER, value = table1, position = 20), Token(type = COMMA, value = ,, position = 26), Token(type = IDENTIFIER, value = table2, position = 28), Token(type = IDENTIFIER, value = where, position = 35), Token(type = IDENTIFIER, value = table1, position = 41), Token(type = DOT, value = ., position = 47), Token(type = IDENTIFIER, value = id, position = 48), Token(type = EQUALS, value = =, position = 51), Token(type = IDENTIFIER, value = table2, position = 53), Token(type = DOT, value = ., position = 59), Token(type = IDENTIFIER, value = id, position = 60), Token(type = SEMICOLON, value = ;, position = 62)]
2025-05-03 17:28:11,351 - compiler.parser - INFO - Parsing SELECT statement
2025-05-03 17:28:11,352 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-03 17:28:11,352 - compiler.parser - DEBUG - Found Column: column1
2025-05-03 17:28:11,352 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = column1, position = 7)
2025-05-03 17:28:11,352 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 15)
2025-05-03 17:29:37,523 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = IDENTIFIER, value = column1, position = 7), Token(type = KEYWORD, value = FROM, position = 15), Token(type = IDENTIFIER, value = table1, position = 20), Token(type = COMMA, value = ,, position = 26), Token(type = IDENTIFIER, value = table2, position = 28), Token(type = IDENTIFIER, value = where, position = 35), Token(type = IDENTIFIER, value = table1, position = 41), Token(type = DOT, value = ., position = 47), Token(type = IDENTIFIER, value = id, position = 48), Token(type = EQUALS, value = =, position = 51), Token(type = IDENTIFIER, value = table2, position = 53), Token(type = DOT, value = ., position = 59), Token(type = IDENTIFIER, value = id, position = 60), Token(type = SEMICOLON, value = ;, position = 62)]
2025-05-03 17:30:48,959 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = IDENTIFIER, value = column1, position = 7), Token(type = KEYWORD, value = FROM, position = 15), Token(type = IDENTIFIER, value = table1, position = 20), Token(type = COMMA, value = ,, position = 26), Token(type = IDENTIFIER, value = table2, position = 28), Token(type = IDENTIFIER, value = where, position = 35), Token(type = IDENTIFIER, value = table1, position = 41), Token(type = DOT, value = ., position = 47), Token(type = IDENTIFIER, value = id, position = 48), Token(type = EQUALS, value = =, position = 51), Token(type = IDENTIFIER, value = table2, position = 53), Token(type = DOT, value = ., position = 59), Token(type = IDENTIFIER, value = id, position = 60), Token(type = SEMICOLON, value = ;, position = 62)]
2025-05-03 17:30:48,959 - compiler.parser - INFO - Parsing SELECT statement
2025-05-03 17:30:48,959 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-03 17:30:48,959 - compiler.parser - DEBUG - Found Column: column1
2025-05-03 17:30:48,959 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = column1, position = 7)
2025-05-03 17:30:48,959 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 15)
2025-05-03 17:30:48,959 - compiler.parser - DEBUG - Found table name: table1
2025-05-03 17:30:48,959 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = table1, position = 20)
2025-05-03 17:30:48,960 - compiler.parser - INFO - SELECT parsed: columns = ['column1'], table = table1
2025-05-03 17:33:11,183 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = IDENTIFIER, value = column1, position = 7), Token(type = KEYWORD, value = FROM, position = 15), Token(type = IDENTIFIER, value = table1, position = 20), Token(type = COMMA, value = ,, position = 26), Token(type = IDENTIFIER, value = table2, position = 28), Token(type = IDENTIFIER, value = where, position = 35), Token(type = IDENTIFIER, value = table1, position = 41), Token(type = DOT, value = ., position = 47), Token(type = IDENTIFIER, value = id, position = 48), Token(type = EQUALS, value = =, position = 51), Token(type = IDENTIFIER, value = table2, position = 53), Token(type = DOT, value = ., position = 59), Token(type = IDENTIFIER, value = id, position = 60), Token(type = SEMICOLON, value = ;, position = 62)]
2025-05-03 17:33:11,183 - compiler.parser - INFO - Parsing SELECT statement
2025-05-03 17:33:11,184 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-03 17:33:11,184 - compiler.parser - DEBUG - Found Column: column1
2025-05-03 17:33:11,184 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = column1, position = 7)
2025-05-03 17:33:11,184 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 15)
2025-05-03 17:33:11,184 - compiler.parser - DEBUG - Found Table: table1
2025-05-03 17:33:11,184 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = table1, position = 20)
2025-05-03 17:33:11,184 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 26)
2025-05-03 17:33:11,184 - compiler.parser - DEBUG - Found Table: table2
2025-05-03 17:33:11,184 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = table2, position = 28)
2025-05-03 17:33:11,184 - compiler.parser - INFO - SELECT parsed: columns = ['column1'], tables = ['table1', 'table2']
2025-05-03 17:34:40,401 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = IDENTIFIER, value = column1, position = 7), Token(type = KEYWORD, value = FROM, position = 15), Token(type = IDENTIFIER, value = table1, position = 20), Token(type = COMMA, value = ,, position = 26), Token(type = IDENTIFIER, value = table2, position = 28), Token(type = IDENTIFIER, value = where, position = 35), Token(type = IDENTIFIER, value = table1, position = 41), Token(type = DOT, value = ., position = 47), Token(type = IDENTIFIER, value = id, position = 48), Token(type = EQUALS, value = =, position = 51), Token(type = IDENTIFIER, value = table2, position = 53), Token(type = DOT, value = ., position = 59), Token(type = IDENTIFIER, value = id, position = 60), Token(type = SEMICOLON, value = ;, position = 62)]
2025-05-03 17:34:40,401 - compiler.parser - INFO - Parsing SELECT statement
2025-05-03 17:34:40,401 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-03 17:34:40,401 - compiler.parser - DEBUG - Found Column: column1
2025-05-03 17:34:40,401 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = column1, position = 7)
2025-05-03 17:34:40,401 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 15)
2025-05-03 17:34:40,401 - compiler.parser - DEBUG - Found Table: table1
2025-05-03 17:34:40,401 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = table1, position = 20)
2025-05-03 17:34:40,401 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 26)
2025-05-03 17:34:40,401 - compiler.parser - DEBUG - Found Table: table2
2025-05-03 17:34:40,401 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = table2, position = 28)
2025-05-03 17:34:40,401 - compiler.parser - INFO - SELECT parsed: columns = ['column1'], tables = ['table1', 'table2']
2025-05-03 17:38:06,569 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = IDENTIFIER, value = column1, position = 7), Token(type = KEYWORD, value = FROM, position = 15), Token(type = IDENTIFIER, value = table1, position = 20), Token(type = COMMA, value = ,, position = 26), Token(type = IDENTIFIER, value = table2, position = 28), Token(type = IDENTIFIER, value = where, position = 35), Token(type = IDENTIFIER, value = table1, position = 41), Token(type = DOT, value = ., position = 47), Token(type = IDENTIFIER, value = id, position = 48), Token(type = EQUALS, value = =, position = 51), Token(type = IDENTIFIER, value = table2, position = 53), Token(type = DOT, value = ., position = 59), Token(type = IDENTIFIER, value = id, position = 60), Token(type = SEMICOLON, value = ;, position = 62)]
2025-05-03 17:38:06,570 - compiler.parser - INFO - Parsing SELECT statement
2025-05-03 17:38:06,570 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-03 17:38:06,571 - compiler.parser - DEBUG - Found Column: column1
2025-05-03 17:38:06,571 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = column1, position = 7)
2025-05-03 17:38:06,571 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 15)
2025-05-03 17:38:06,571 - compiler.parser - DEBUG - Found Table: table1
2025-05-03 17:38:06,571 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = table1, position = 20)
2025-05-03 17:38:06,571 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 26)
2025-05-03 17:38:06,571 - compiler.parser - DEBUG - Found Table: table2
2025-05-03 17:38:06,571 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = table2, position = 28)
2025-05-03 17:38:06,571 - compiler.parser - INFO - SELECT parsed: columns = ['column1'], tables = ['table1', 'table2']
2025-05-03 17:38:39,066 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = IDENTIFIER, value = column1, position = 7), Token(type = KEYWORD, value = FROM, position = 15), Token(type = IDENTIFIER, value = table1, position = 20), Token(type = COMMA, value = ,, position = 26), Token(type = IDENTIFIER, value = table2, position = 28), Token(type = IDENTIFIER, value = where, position = 35), Token(type = IDENTIFIER, value = table1, position = 41), Token(type = DOT, value = ., position = 47), Token(type = IDENTIFIER, value = id, position = 48), Token(type = EQUALS, value = =, position = 51), Token(type = IDENTIFIER, value = table2, position = 53), Token(type = DOT, value = ., position = 59), Token(type = IDENTIFIER, value = id, position = 60), Token(type = SEMICOLON, value = ;, position = 62)]
2025-05-03 17:38:39,068 - compiler.parser - INFO - Parsing SELECT statement
2025-05-03 17:38:39,068 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-03 17:38:39,068 - compiler.parser - DEBUG - Found Column: column1
2025-05-03 17:38:39,068 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = column1, position = 7)
2025-05-03 17:38:39,068 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 15)
2025-05-03 17:38:39,068 - compiler.parser - DEBUG - Found Table: table1
2025-05-03 17:38:39,068 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = table1, position = 20)
2025-05-03 17:38:39,068 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 26)
2025-05-03 17:38:39,068 - compiler.parser - DEBUG - Found Table: table2
2025-05-03 17:38:39,068 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = table2, position = 28)
2025-05-03 17:38:39,068 - compiler.parser - INFO - SELECT parsed: columns = ['column1'], tables = ['table1', 'table2']
2025-05-03 17:38:57,597 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = IDENTIFIER, value = column1, position = 7), Token(type = KEYWORD, value = FROM, position = 15), Token(type = IDENTIFIER, value = table1, position = 20), Token(type = COMMA, value = ,, position = 26), Token(type = IDENTIFIER, value = table2, position = 28), Token(type = IDENTIFIER, value = where, position = 35), Token(type = IDENTIFIER, value = table1, position = 41), Token(type = DOT, value = ., position = 47), Token(type = IDENTIFIER, value = id, position = 48), Token(type = EQUALS, value = =, position = 51), Token(type = IDENTIFIER, value = table2, position = 53), Token(type = DOT, value = ., position = 59), Token(type = IDENTIFIER, value = id, position = 60), Token(type = SEMICOLON, value = ;, position = 62)]
2025-05-03 17:38:57,598 - compiler.parser - INFO - Parsing INSERT statement.
2025-05-03 17:38:57,598 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-03 17:38:57,598 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = column1, position = 7)
2025-05-03 17:38:57,598 - compiler.parser - ERROR - Expected a table name..
2025-05-03 17:39:37,986 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = IDENTIFIER, value = create, position = 0), Token(type = IDENTIFIER, value = table, position = 7), Token(type = IDENTIFIER, value = huni, position = 13)]
2025-05-03 17:39:37,986 - compiler.parser - ERROR - Invalid SQL statement found: Token(type = IDENTIFIER, value = create, position = 0)
2025-05-04 02:51:42,067 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = ASTERISK, value = *, position = 7), Token(type = KEYWORD, value = FROM, position = 9), Token(type = IDENTIFIER, value = table, position = 14)]
2025-05-04 02:51:42,068 - compiler.parser - INFO - Parsing SELECT statement
2025-05-04 02:51:42,068 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-04 02:51:42,068 - compiler.parser - DEBUG - Found '*' , selecting all columns....
2025-05-04 02:51:42,068 - compiler.parser - DEBUG - Processed token: Token(type = ASTERISK, value = *, position = 7)
2025-05-04 02:51:42,068 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 9)
2025-05-04 02:51:42,068 - compiler.parser - DEBUG - Found Table: table
2025-05-04 02:51:42,068 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = table, position = 14)
2025-05-04 02:51:42,068 - compiler.parser - INFO - SELECT parsed: columns = ['*'], tables = ['table']
2025-05-04 03:31:30,207 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = ASTERISK, value = *, position = 7), Token(type = KEYWORD, value = FROM, position = 9), Token(type = IDENTIFIER, value = pinchi, position = 14)]
2025-05-04 03:31:30,207 - compiler.parser - INFO - Parsing SELECT statement
2025-05-04 03:31:30,207 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-04 03:31:30,207 - compiler.parser - DEBUG - Found '*' , selecting all columns....
2025-05-04 03:31:30,207 - compiler.parser - DEBUG - Processed token: Token(type = ASTERISK, value = *, position = 7)
2025-05-04 03:31:30,207 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 9)
2025-05-04 03:31:30,207 - compiler.parser - DEBUG - Found Table: pinchi
2025-05-04 03:31:30,208 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = pinchi, position = 14)
2025-05-04 03:31:30,208 - compiler.parser - INFO - SELECT parsed: columns = ['*'], tables = ['pinchi']
2025-05-04 03:31:51,726 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = IDENTIFIER, value = fetch, position = 0), Token(type = ASTERISK, value = *, position = 6), Token(type = KEYWORD, value = FROM, position = 8), Token(type = IDENTIFIER, value = sasnkar, position = 13)]
2025-05-04 03:31:51,726 - compiler.parser - ERROR - Invalid SQL statement found: Token(type = IDENTIFIER, value = fetch, position = 0)
2025-05-04 03:32:16,404 - compiler.tokenizer - ERROR - Invalid token at 18: @
2025-05-04 03:33:55,910 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = IDENTIFIER, value = column1, position = 7), Token(type = KEYWORD, value = FROM, position = 15), Token(type = IDENTIFIER, value = table1, position = 20), Token(type = COMMA, value = ,, position = 26), Token(type = IDENTIFIER, value = table2, position = 28), Token(type = IDENTIFIER, value = where, position = 35), Token(type = IDENTIFIER, value = table1, position = 41), Token(type = DOT, value = ., position = 47), Token(type = IDENTIFIER, value = id, position = 48), Token(type = EQUALS, value = =, position = 51), Token(type = IDENTIFIER, value = table2, position = 53), Token(type = DOT, value = ., position = 59), Token(type = IDENTIFIER, value = id, position = 60), Token(type = SEMICOLON, value = ;, position = 62)]
2025-05-04 03:33:55,911 - compiler.parser - INFO - Parsing INSERT statement.
2025-05-04 03:33:55,911 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-04 03:33:55,911 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = column1, position = 7)
2025-05-04 03:33:55,911 - compiler.parser - ERROR - Expected a table name..
2025-05-04 03:34:23,765 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = IDENTIFIER, value = column1, position = 7), Token(type = KEYWORD, value = FROM, position = 15), Token(type = IDENTIFIER, value = table1, position = 20), Token(type = COMMA, value = ,, position = 26), Token(type = IDENTIFIER, value = table2, position = 28), Token(type = IDENTIFIER, value = where, position = 35), Token(type = IDENTIFIER, value = table1, position = 41), Token(type = DOT, value = ., position = 47), Token(type = IDENTIFIER, value = id, position = 48), Token(type = EQUALS, value = =, position = 51), Token(type = IDENTIFIER, value = table2, position = 53), Token(type = DOT, value = ., position = 59), Token(type = IDENTIFIER, value = id, position = 60), Token(type = SEMICOLON, value = ;, position = 62)]
2025-05-04 03:34:23,767 - compiler.parser - INFO - Parsing INSERT statement.
2025-05-04 03:34:23,767 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-04 03:34:23,767 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = column1, position = 7)
2025-05-04 03:34:23,767 - compiler.parser - ERROR - Expected a table name..
2025-05-04 03:34:57,430 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = IDENTIFIER, value = column1, position = 7), Token(type = KEYWORD, value = FROM, position = 15), Token(type = IDENTIFIER, value = table1, position = 20), Token(type = COMMA, value = ,, position = 26), Token(type = IDENTIFIER, value = table2, position = 28), Token(type = IDENTIFIER, value = where, position = 35), Token(type = IDENTIFIER, value = table1, position = 41), Token(type = DOT, value = ., position = 47), Token(type = IDENTIFIER, value = id, position = 48), Token(type = EQUALS, value = =, position = 51), Token(type = IDENTIFIER, value = table2, position = 53), Token(type = DOT, value = ., position = 59), Token(type = IDENTIFIER, value = id, position = 60), Token(type = SEMICOLON, value = ;, position = 62)]
2025-05-04 03:34:57,431 - compiler.parser - INFO - Parsing INSERT statement.
2025-05-04 03:34:57,431 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-04 03:34:57,431 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = column1, position = 7)
2025-05-04 03:34:57,431 - compiler.parser - ERROR - Expected a table name..
2025-05-04 03:36:05,630 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = column1, position = 12), Token(type = KEYWORD, value = FROM, position = 20), Token(type = IDENTIFIER, value = table1, position = 25), Token(type = COMMA, value = ,, position = 31), Token(type = IDENTIFIER, value = table2, position = 33), Token(type = IDENTIFIER, value = where, position = 40), Token(type = IDENTIFIER, value = table1, position = 46), Token(type = DOT, value = ., position = 52), Token(type = IDENTIFIER, value = id, position = 53), Token(type = EQUALS, value = =, position = 56), Token(type = IDENTIFIER, value = table2, position = 58), Token(type = DOT, value = ., position = 64), Token(type = IDENTIFIER, value = id, position = 65), Token(type = SEMICOLON, value = ;, position = 67)]
2025-05-04 03:36:05,631 - compiler.parser - INFO - Parsing INSERT statement.
2025-05-04 03:36:05,631 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-04 03:36:05,631 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-04 03:36:05,631 - compiler.parser - DEBUG - Found table name: column1
2025-05-04 03:36:05,631 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = column1, position = 12)

2025-05-04 03:36:05,631 - compiler.parser - ERROR - Expected 'VALUES' in INSERT statement.
2025-05-04 03:36:18,397 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = IDENTIFIER, value = column1, position = 7), Token(type = KEYWORD, value = FROM, position = 15), Token(type = IDENTIFIER, value = table1, position = 20), Token(type = COMMA, value = ,, position = 26), Token(type = IDENTIFIER, value = table2, position = 28), Token(type = IDENTIFIER, value = where, position = 35), Token(type = IDENTIFIER, value = table1, position = 41), Token(type = DOT, value = ., position = 47), Token(type = IDENTIFIER, value = id, position = 48), Token(type = EQUALS, value = =, position = 51), Token(type = IDENTIFIER, value = table2, position = 53), Token(type = DOT, value = ., position = 59), Token(type = IDENTIFIER, value = id, position = 60), Token(type = SEMICOLON, value = ;, position = 62)]
2025-05-04 03:36:18,397 - compiler.parser - INFO - Parsing SELECT statement
2025-05-04 03:36:18,397 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-04 03:36:18,398 - compiler.parser - DEBUG - Found Column: column1
2025-05-04 03:36:18,398 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = column1, position = 7)
2025-05-04 03:36:18,398 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 15)
2025-05-04 03:36:18,398 - compiler.parser - DEBUG - Found Table: table1
2025-05-04 03:36:18,398 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = table1, position = 20)
2025-05-04 03:36:18,398 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 26)
2025-05-04 03:36:18,398 - compiler.parser - DEBUG - Found Table: table2
2025-05-04 03:36:18,398 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = table2, position = 28)
2025-05-04 03:36:18,398 - compiler.parser - INFO - SELECT parsed: columns = ['column1'], tables = ['table1', 'table2']
2025-05-04 03:36:59,816 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = ASTERISK, value = *, position = 7), Token(type = KEYWORD, value = FROM, position = 9), Token(type = IDENTIFIER, value = table1, position = 14), Token(type = COMMA, value = ,, position = 20), Token(type = IDENTIFIER, value = table2, position = 22), Token(type = IDENTIFIER, value = where, position = 29), Token(type = IDENTIFIER, value = table1, position = 35), Token(type = DOT, value = ., position = 41), Token(type = IDENTIFIER, value = id, position = 42), Token(type = EQUALS, value = =, position = 45), Token(type = IDENTIFIER, value = table2, position = 47), Token(type = DOT, value = ., position = 53), Token(type = IDENTIFIER, value = id, position = 54), Token(type = SEMICOLON, value = ;, position = 56)]
2025-05-04 03:36:59,817 - compiler.parser - INFO - Parsing SELECT statement
2025-05-04 03:36:59,817 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-04 03:36:59,817 - compiler.parser - DEBUG - Found '*' , selecting all columns....
2025-05-04 03:36:59,817 - compiler.parser - DEBUG - Processed token: Token(type = ASTERISK, value = *, position = 7)
2025-05-04 03:36:59,817 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 9)
2025-05-04 03:36:59,817 - compiler.parser - DEBUG - Found Table: table1
2025-05-04 03:36:59,817 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = table1, position = 14)
2025-05-04 03:36:59,817 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 20)
2025-05-04 03:36:59,817 - compiler.parser - DEBUG - Found Table: table2
2025-05-04 03:36:59,817 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = table2, position = 22)
2025-05-04 03:36:59,817 - compiler.parser - INFO - SELECT parsed: columns = ['*'], tables = ['table1', 'table2']
2025-05-04 04:23:11,318 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = IDENTIFIER, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = IDENTIFIER, value = SET, position = 16), Token(type = IDENTIFIER, value = price, position = 20), Token(type = EQUALS, value = =, position = 26), Token(type = NUMBER, value = 799, position = 28), Token(type = DOT, value = ., position = 31), Token(type = NUMBER, value = 99, position = 32), Token(type = IDENTIFIER, value = WHERE, position = 35), Token(type = IDENTIFIER, value = id, position = 41), Token(type = EQUALS, value = =, position = 44), Token(type = NUMBER, value = 5, position = 46), Token(type = SEMICOLON, value = ;, position = 47)]
2025-05-04 04:23:11,318 - compiler.parser - ERROR - Invalid SQL statement: Token(type = IDENTIFIER, value = UPDATE, position = 0)
2025-05-04 04:25:36,265 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = SET, position = 16), Token(type = IDENTIFIER, value = price, position = 20), Token(type = EQUALS, value = =, position = 26), Token(type = NUMBER, value = 799.99, position = 28), Token(type = KEYWORD, value = WHERE, position = 35), Token(type = IDENTIFIER, value = id, position = 41), Token(type = EQUALS, value = =, position = 44), Token(type = NUMBER, value = 5, position = 46), Token(type = SEMICOLON, value = ;, position = 47)]
2025-05-04 04:25:36,266 - compiler.statements.update_parser - INFO - Parsing UPDATE statement...
2025-05-04 04:25:36,266 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-04 04:25:36,266 - compiler.parser - DEBUG - Found table name: products
2025-05-04 04:25:36,266 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 7)
2025-05-04 04:25:36,266 - compiler.statements.update_parser - DEBUG - UPDATE table: products
2025-05-04 04:25:36,266 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SET, position = 16)
2025-05-04 04:26:59,669 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = SET, position = 16), Token(type = IDENTIFIER, value = price, position = 20), Token(type = EQUALS, value = =, position = 26), Token(type = NUMBER, value = 799.99, position = 28), Token(type = KEYWORD, value = WHERE, position = 35), Token(type = IDENTIFIER, value = id, position = 41), Token(type = EQUALS, value = =, position = 44), Token(type = NUMBER, value = 5, position = 46), Token(type = SEMICOLON, value = ;, position = 47)]
2025-05-04 04:26:59,670 - compiler.statements.update_parser - INFO - Parsing UPDATE statement...
2025-05-04 04:26:59,670 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-04 04:26:59,670 - compiler.parser - DEBUG - Found table name: products
2025-05-04 04:26:59,670 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 7)
2025-05-04 04:26:59,670 - compiler.statements.update_parser - DEBUG - UPDATE table: products
2025-05-04 04:26:59,670 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SET, position = 16)
2025-05-04 04:29:14,799 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = SET, position = 16), Token(type = IDENTIFIER, value = price, position = 20), Token(type = EQUALS, value = =, position = 26), Token(type = NUMBER, value = 799.99, position = 28), Token(type = KEYWORD, value = WHERE, position = 35), Token(type = IDENTIFIER, value = id, position = 41), Token(type = EQUALS, value = =, position = 44), Token(type = NUMBER, value = 5, position = 46), Token(type = SEMICOLON, value = ;, position = 47)]
2025-05-04 04:29:14,800 - compiler.statements.update_parser - INFO - Parsing UPDATE statement...
2025-05-04 04:29:14,800 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-04 04:29:14,800 - compiler.parser - DEBUG - Found table name: products
2025-05-04 04:29:14,800 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 7)
2025-05-04 04:29:14,800 - compiler.statements.update_parser - DEBUG - UPDATE table: products
2025-05-04 04:29:14,800 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SET, position = 16)
2025-05-04 04:29:14,800 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = price, position = 20)
2025-05-04 04:29:14,800 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 26)
2025-05-04 04:29:14,800 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 799.99, position = 28)
2025-05-04 04:29:14,800 - compiler.statements.update_parser - DEBUG - SET clause: [('price', '799.99')]
2025-05-04 04:29:14,800 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = WHERE, position = 35)
2025-05-04 04:33:25,139 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = SET, position = 16), Token(type = IDENTIFIER, value = price, position = 20), Token(type = EQUALS, value = =, position = 26), Token(type = NUMBER, value = 799.99, position = 28), Token(type = KEYWORD, value = WHERE, position = 35), Token(type = IDENTIFIER, value = id, position = 41), Token(type = EQUALS, value = =, position = 44), Token(type = NUMBER, value = 5, position = 46), Token(type = SEMICOLON, value = ;, position = 47)]
2025-05-04 04:33:25,140 - compiler.statements.update_parser - INFO - Parsing UPDATE statement...
2025-05-04 04:33:25,140 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-04 04:33:25,140 - compiler.parser - DEBUG - Found table name: products
2025-05-04 04:33:25,140 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 7)
2025-05-04 04:33:25,141 - compiler.statements.update_parser - DEBUG - UPDATE table: products
2025-05-04 04:33:25,141 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SET, position = 16)
2025-05-04 04:33:25,141 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = price, position = 20)
2025-05-04 04:33:25,141 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 26)
2025-05-04 04:33:25,141 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 799.99, position = 28)
2025-05-04 04:33:25,141 - compiler.statements.update_parser - DEBUG - SET clause: [('price', '799.99')]
2025-05-04 04:33:25,141 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = WHERE, position = 35)
2025-05-04 04:34:31,481 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = WHERE, position = 16), Token(type = IDENTIFIER, value = id, position = 22), Token(type = EQUALS, value = =, position = 25), Token(type = NUMBER, value = 5, position = 27), Token(type = SEMICOLON, value = ;, position = 28)]
2025-05-04 04:34:31,481 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-04 04:36:54,541 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = WHERE, position = 16), Token(type = IDENTIFIER, value = id, position = 22), Token(type = EQUALS, value = =, position = 25), Token(type = NUMBER, value = 5, position = 27), Token(type = SEMICOLON, value = ;, position = 28)]
2025-05-04 04:36:54,542 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-04 04:36:54,542 - compiler.parser - DEBUG - Found Column: products
2025-05-04 04:36:54,542 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 7)
2025-05-04 04:36:54,542 - compiler.statements.select_parser - ERROR - Expected 'FROM' in SELECT statement.
2025-05-04 04:37:07,358 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = KEYWORD, value = FROM, position = 7), Token(type = IDENTIFIER, value = products, position = 12), Token(type = KEYWORD, value = WHERE, position = 21), Token(type = IDENTIFIER, value = id, position = 27), Token(type = EQUALS, value = =, position = 30), Token(type = NUMBER, value = 5, position = 32), Token(type = SEMICOLON, value = ;, position = 33)]
2025-05-04 04:37:07,359 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-04 04:37:07,359 - compiler.parser - ERROR - Expected at least one column in SELECT statement.
2025-05-04 04:37:21,772 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = IDENTIFIER, value = column2, position = 7), Token(type = KEYWORD, value = FROM, position = 15), Token(type = IDENTIFIER, value = products, position = 20), Token(type = KEYWORD, value = WHERE, position = 29), Token(type = IDENTIFIER, value = id, position = 35), Token(type = EQUALS, value = =, position = 38), Token(type = NUMBER, value = 5, position = 40), Token(type = SEMICOLON, value = ;, position = 41)]
2025-05-04 04:37:21,773 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-04 04:37:21,773 - compiler.parser - DEBUG - Found Column: column2
2025-05-04 04:37:21,773 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = column2, position = 7)
2025-05-04 04:37:21,773 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 15)
2025-05-04 04:40:26,443 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = IDENTIFIER, value = column2, position = 7), Token(type = KEYWORD, value = FROM, position = 15), Token(type = IDENTIFIER, value = products, position = 20), Token(type = KEYWORD, value = WHERE, position = 29), Token(type = IDENTIFIER, value = id, position = 35), Token(type = EQUALS, value = =, position = 38), Token(type = NUMBER, value = 5, position = 40), Token(type = SEMICOLON, value = ;, position = 41)]
2025-05-04 04:40:26,443 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-04 04:40:26,443 - compiler.parser - DEBUG - Found Column: column2
2025-05-04 04:40:26,444 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = column2, position = 7)
2025-05-04 04:40:26,444 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 15)
2025-05-04 04:40:38,947 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = IDENTIFIER, value = column2, position = 7), Token(type = KEYWORD, value = FROM, position = 15), Token(type = IDENTIFIER, value = products, position = 20), Token(type = SEMICOLON, value = ;, position = 28)]
2025-05-04 04:40:38,948 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-04 04:40:38,948 - compiler.parser - DEBUG - Found Column: column2
2025-05-04 04:40:38,948 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = column2, position = 7)
2025-05-04 04:40:38,948 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 15)
2025-05-04 04:41:02,439 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = IDENTIFIER, value = column2, position = 7), Token(type = KEYWORD, value = FROM, position = 15), Token(type = IDENTIFIER, value = products, position = 20), Token(type = SEMICOLON, value = ;, position = 28)]
2025-05-04 04:41:02,440 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-04 04:41:02,440 - compiler.parser - DEBUG - Found Column: column2
2025-05-04 04:41:02,440 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = column2, position = 7)
2025-05-04 04:41:02,440 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 15)
2025-05-04 04:41:02,440 - compiler.parser - DEBUG - Found Table: products
2025-05-04 04:41:02,440 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 20)
2025-05-04 04:41:02,440 - compiler.statements.select_parser - INFO - SELECT parsed: columns = ['column2'], tables = ['products']
2025-05-04 04:41:08,951 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = IDENTIFIER, value = column2, position = 7), Token(type = KEYWORD, value = FROM, position = 15), Token(type = IDENTIFIER, value = products, position = 20), Token(type = KEYWORD, value = WHERE, position = 29), Token(type = IDENTIFIER, value = id, position = 35), Token(type = EQUALS, value = =, position = 38), Token(type = NUMBER, value = 5, position = 40), Token(type = SEMICOLON, value = ;, position = 41)]
2025-05-04 04:41:08,952 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-04 04:41:08,952 - compiler.parser - DEBUG - Found Column: column2
2025-05-04 04:41:08,952 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = column2, position = 7)
2025-05-04 04:41:08,952 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 15)
2025-05-04 04:41:08,952 - compiler.parser - DEBUG - Found Table: products
2025-05-04 04:41:08,952 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 20)
2025-05-04 04:41:08,952 - compiler.statements.select_parser - INFO - SELECT parsed: columns = ['column2'], tables = ['products']
2025-05-04 04:42:09,521 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = SET, position = 16), Token(type = IDENTIFIER, value = price, position = 20), Token(type = EQUALS, value = =, position = 26), Token(type = NUMBER, value = 799.99, position = 28), Token(type = KEYWORD, value = WHERE, position = 35), Token(type = IDENTIFIER, value = id, position = 41), Token(type = EQUALS, value = =, position = 44), Token(type = NUMBER, value = 5, position = 46), Token(type = SEMICOLON, value = ;, position = 47)]
2025-05-04 04:42:09,522 - compiler.statements.update_parser - INFO - Parsing UPDATE statement...
2025-05-04 04:42:09,522 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-04 04:42:09,522 - compiler.parser - DEBUG - Found table name: products
2025-05-04 04:42:09,522 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 7)
2025-05-04 04:42:09,522 - compiler.statements.update_parser - DEBUG - UPDATE table: products
2025-05-04 04:42:09,523 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SET, position = 16)
2025-05-04 04:42:09,523 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = price, position = 20)
2025-05-04 04:42:09,523 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 26)
2025-05-04 04:42:09,523 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 799.99, position = 28)
2025-05-04 04:42:09,523 - compiler.statements.update_parser - DEBUG - SET clause: [('price', '799.99')]
2025-05-04 04:42:09,523 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = WHERE, position = 35)
2025-05-04 04:42:09,523 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = id, position = 41)
2025-05-04 04:42:09,523 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 44)
2025-05-04 04:42:09,523 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 5, position = 46)
2025-05-04 04:42:09,523 - compiler.statements.update_parser - DEBUG - WHERE condition: {'column': 'id', 'operator': '=', 'value': '5'}
2025-05-04 04:42:09,523 - compiler.statements.update_parser - INFO - UPDATE parsed: table = products, SET = [('price', '799.99')], WHERE = {'column': 'id', 'operator': '=', 'value': '5'}
2025-05-04 15:48:12,670 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = SET, position = 16), Token(type = IDENTIFIER, value = price, position = 20), Token(type = EQUALS, value = =, position = 26), Token(type = NUMBER, value = 799.99, position = 28), Token(type = KEYWORD, value = WHERE, position = 35), Token(type = IDENTIFIER, value = id, position = 41), Token(type = EQUALS, value = =, position = 44), Token(type = NUMBER, value = 5, position = 46), Token(type = SEMICOLON, value = ;, position = 47)]
2025-05-04 15:48:12,670 - compiler.statements.update_parser - INFO - Parsing UPDATE statement...
2025-05-04 15:48:12,671 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-04 15:48:12,671 - compiler.parser - DEBUG - Found table name: products
2025-05-04 15:48:12,671 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 7)
2025-05-04 15:48:12,671 - compiler.statements.update_parser - DEBUG - UPDATE table: products
2025-05-04 15:48:12,671 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SET, position = 16)
2025-05-04 15:48:12,671 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = price, position = 20)
2025-05-04 15:48:12,671 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 26)
2025-05-04 15:48:12,671 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 799.99, position = 28)
2025-05-04 15:48:12,671 - compiler.statements.update_parser - DEBUG - SET clause: [('price', '799.99')]
2025-05-04 15:48:12,671 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = WHERE, position = 35)
2025-05-04 15:48:12,671 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = id, position = 41)
2025-05-04 15:48:12,671 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 44)
2025-05-04 15:48:12,671 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 5, position = 46)
2025-05-04 15:48:12,671 - compiler.statements.update_parser - DEBUG - WHERE condition: {'column': 'id', 'operator': '=', 'value': '5'}
2025-05-04 15:48:12,671 - compiler.statements.update_parser - INFO - UPDATE parsed: table = products, SET = [('price', '799.99')], WHERE = {'column': 'id', 'operator': '=', 'value': '5'}
2025-05-04 15:59:49,933 - compiler.tokenizer - ERROR - Invalid token at 0: &
2025-05-04 20:39:52,957 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = SET, position = 16), Token(type = IDENTIFIER, value = price, position = 20), Token(type = EQUALS, value = =, position = 26), Token(type = NUMBER, value = 799.99, position = 28), Token(type = KEYWORD, value = WHERE, position = 35), Token(type = IDENTIFIER, value = id, position = 41), Token(type = EQUALS, value = =, position = 44), Token(type = NUMBER, value = 5, position = 46), Token(type = SEMICOLON, value = ;, position = 47)]
2025-05-04 20:39:52,958 - compiler.statements.update_parser - INFO - Parsing UPDATE statement...
2025-05-04 20:39:52,958 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-04 20:39:52,959 - compiler.parser - DEBUG - Found table name: products
2025-05-04 20:39:52,959 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 7)
2025-05-04 20:39:52,959 - compiler.statements.update_parser - DEBUG - UPDATE table: products
2025-05-04 20:39:52,959 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SET, position = 16)
2025-05-04 20:39:52,959 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = price, position = 20)
2025-05-04 20:39:52,959 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 26)
2025-05-04 20:39:52,959 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 799.99, position = 28)
2025-05-04 20:39:52,959 - compiler.statements.update_parser - DEBUG - SET clause: [('price', '799.99')]
2025-05-04 20:39:52,959 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = WHERE, position = 35)
2025-05-04 20:39:52,959 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = id, position = 41)
2025-05-04 20:39:52,959 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 44)
2025-05-04 20:39:52,959 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 5, position = 46)
2025-05-04 20:39:52,959 - compiler.statements.update_parser - DEBUG - WHERE condition: {'column': 'id', 'operator': '=', 'value': '5'}
2025-05-04 20:39:52,960 - compiler.statements.update_parser - INFO - UPDATE parsed: table = products, SET = [('price', '799.99')], WHERE = {'column': 'id', 'operator': '=', 'value': '5'}
2025-05-04 20:46:01,092 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = SET, position = 16), Token(type = IDENTIFIER, value = price, position = 20), Token(type = EQUALS, value = =, position = 26), Token(type = NUMBER, value = 799.99, position = 28), Token(type = KEYWORD, value = WHERE, position = 35), Token(type = IDENTIFIER, value = id, position = 41), Token(type = EQUALS, value = =, position = 44), Token(type = NUMBER, value = 5, position = 46), Token(type = SEMICOLON, value = ;, position = 47)]
2025-05-04 20:48:07,538 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = SET, position = 16), Token(type = IDENTIFIER, value = price, position = 20), Token(type = EQUALS, value = =, position = 26), Token(type = NUMBER, value = 799.99, position = 28), Token(type = KEYWORD, value = WHERE, position = 35), Token(type = IDENTIFIER, value = id, position = 41), Token(type = EQUALS, value = =, position = 44), Token(type = NUMBER, value = 5, position = 46), Token(type = SEMICOLON, value = ;, position = 47)]
2025-05-04 20:48:07,539 - compiler.statements.update_parser - INFO - Parsing UPDATE statement...
2025-05-04 20:48:07,539 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-04 20:48:07,539 - compiler.parser - DEBUG - Found table name: products
2025-05-04 20:48:07,539 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 7)
2025-05-04 20:48:07,539 - compiler.statements.update_parser - DEBUG - UPDATE table: products
2025-05-04 20:48:07,539 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SET, position = 16)
2025-05-04 20:48:07,539 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = price, position = 20)
2025-05-04 20:48:07,539 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 26)
2025-05-04 20:48:07,539 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 799.99, position = 28)
2025-05-04 20:48:07,540 - compiler.statements.update_parser - DEBUG - SET clause: [('price', '799.99')]
2025-05-04 20:48:07,540 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = WHERE, position = 35)
2025-05-04 20:48:07,540 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = id, position = 41)
2025-05-04 20:48:07,540 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 44)
2025-05-04 20:48:07,540 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 5, position = 46)
2025-05-04 20:48:07,540 - compiler.statements.update_parser - DEBUG - WHERE condition: {'column': 'id', 'operator': '=', 'value': '5'}
2025-05-04 20:48:07,540 - compiler.statements.update_parser - INFO - UPDATE parsed: table = products, SET = [('price', '799.99')], WHERE = {'column': 'id', 'operator': '=', 'value': '5'}
2025-05-04 20:53:33,633 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = SET, position = 16), Token(type = IDENTIFIER, value = price, position = 20), Token(type = EQUALS, value = =, position = 26), Token(type = NUMBER, value = 799.99, position = 28), Token(type = KEYWORD, value = WHERE, position = 35), Token(type = IDENTIFIER, value = id, position = 41), Token(type = EQUALS, value = =, position = 44), Token(type = NUMBER, value = 5, position = 46), Token(type = SEMICOLON, value = ;, position = 47)]
2025-05-04 20:53:33,634 - compiler.statements.update_parser - INFO - Parsing UPDATE statement...
2025-05-04 20:53:33,634 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-04 20:53:33,634 - compiler.parser - DEBUG - Found table name: products
2025-05-04 20:53:33,634 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 7)
2025-05-04 20:53:33,634 - compiler.statements.update_parser - DEBUG - UPDATE table: products
2025-05-04 20:53:33,634 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SET, position = 16)
2025-05-04 20:53:33,635 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = price, position = 20)
2025-05-04 20:53:33,635 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 26)
2025-05-04 20:53:33,635 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 799.99, position = 28)
2025-05-04 20:53:33,635 - compiler.statements.update_parser - DEBUG - SET clause: [('price', '799.99')]
2025-05-04 20:53:33,635 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = WHERE, position = 35)
2025-05-04 20:53:33,635 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = id, position = 41)
2025-05-04 20:53:33,635 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 44)
2025-05-04 20:53:33,635 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 5, position = 46)
2025-05-04 20:53:33,635 - compiler.statements.update_parser - DEBUG - WHERE condition: {'column': 'id', 'operator': '=', 'value': '5'}
2025-05-04 20:53:33,635 - compiler.statements.update_parser - INFO - UPDATE parsed: table = products, SET = [('price', '799.99')], WHERE = {'column': 'id', 'operator': '=', 'value': '5'}
2025-05-04 21:24:56,852 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = SET, position = 16), Token(type = IDENTIFIER, value = price, position = 20), Token(type = EQUALS, value = =, position = 26), Token(type = NUMBER, value = 799.99, position = 28), Token(type = KEYWORD, value = WHERE, position = 35), Token(type = IDENTIFIER, value = id, position = 41), Token(type = EQUALS, value = =, position = 44), Token(type = NUMBER, value = 5, position = 46), Token(type = SEMICOLON, value = ;, position = 47)]
2025-05-04 21:24:56,856 - compiler.statements.update_parser - INFO - Parsing UPDATE statement...
2025-05-04 21:24:56,856 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-04 21:24:56,856 - compiler.parser - DEBUG - Found table name: products
2025-05-04 21:24:56,856 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 7)
2025-05-04 21:24:56,856 - compiler.statements.update_parser - DEBUG - UPDATE table: products
2025-05-04 21:24:56,856 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SET, position = 16)
2025-05-04 21:24:56,856 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = price, position = 20)
2025-05-04 21:24:56,856 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 26)
2025-05-04 21:24:56,858 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 799.99, position = 28)
2025-05-04 21:24:56,858 - compiler.statements.update_parser - DEBUG - SET clause: [('price', '799.99')]
2025-05-04 21:24:56,858 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = WHERE, position = 35)
2025-05-04 21:24:56,858 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = id, position = 41)
2025-05-04 21:24:56,858 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 44)
2025-05-04 21:24:56,858 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 5, position = 46)
2025-05-04 21:24:56,858 - compiler.statements.update_parser - DEBUG - WHERE condition: {'column': 'id', 'operator': '=', 'value': '5'}
2025-05-04 21:24:56,858 - compiler.statements.update_parser - INFO - UPDATE parsed: table = products, SET = [('price', '799.99')], WHERE = {'column': 'id', 'operator': '=', 'value': '5'}
2025-05-04 21:31:44,503 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = SET, position = 16), Token(type = IDENTIFIER, value = price, position = 20), Token(type = EQUALS, value = =, position = 26), Token(type = NUMBER, value = 799.99, position = 28), Token(type = KEYWORD, value = WHERE, position = 35), Token(type = IDENTIFIER, value = id, position = 41), Token(type = EQUALS, value = =, position = 44), Token(type = NUMBER, value = 5, position = 46), Token(type = SEMICOLON, value = ;, position = 47)]
2025-05-04 21:31:44,507 - compiler.statements.update_parser - INFO - Parsing UPDATE statement...
2025-05-04 21:31:44,507 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-04 21:31:44,507 - compiler.parser - DEBUG - Found table name: products
2025-05-04 21:31:44,507 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 7)
2025-05-04 21:31:44,507 - compiler.statements.update_parser - DEBUG - UPDATE table: products
2025-05-04 21:31:44,507 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SET, position = 16)
2025-05-04 21:31:44,507 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = price, position = 20)
2025-05-04 21:31:44,507 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 26)
2025-05-04 21:31:44,507 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 799.99, position = 28)
2025-05-04 21:31:44,507 - compiler.statements.update_parser - DEBUG - SET clause: [('price', '799.99')]
2025-05-04 21:31:44,507 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = WHERE, position = 35)
2025-05-04 21:31:44,507 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = id, position = 41)
2025-05-04 21:31:44,507 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 44)
2025-05-04 21:31:44,507 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 5, position = 46)
2025-05-04 21:31:44,507 - compiler.statements.update_parser - DEBUG - WHERE condition: {'column': 'id', 'operator': '=', 'value': '5'}
2025-05-04 21:31:44,507 - compiler.statements.update_parser - INFO - UPDATE parsed: table = products, SET = [('price', '799.99')], WHERE = {'column': 'id', 'operator': '=', 'value': '5'}
2025-05-04 21:32:49,271 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = KEYWORD, value = TABLE, position = 12)]
2025-05-04 21:32:49,274 - compiler.statements.insert_parser - INFO - Parsing INSERT statement...
2025-05-04 21:32:49,274 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-04 21:32:49,274 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-04 21:32:49,274 - compiler.parser - ERROR - Expected a table name..
2025-05-04 21:34:34,916 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = ASTERISK, value = *, position = 7), Token(type = KEYWORD, value = FROM, position = 9), Token(type = IDENTIFIER, value = pinchu, position = 14)]
2025-05-04 21:34:34,919 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-04 21:34:34,919 - compiler.parser - DEBUG - Found '*' , selecting all columns....
2025-05-04 21:34:34,919 - compiler.parser - DEBUG - Processed token: Token(type = ASTERISK, value = *, position = 7)
2025-05-04 21:34:34,919 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 9)
2025-05-04 21:34:34,919 - compiler.parser - DEBUG - Found Table: pinchu
2025-05-04 21:34:34,920 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = pinchu, position = 14)
2025-05-04 21:34:34,920 - compiler.statements.select_parser - INFO - SELECT parsed: columns = ['*'], tables = ['pinchu']
2025-05-05 02:21:04,898 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = ASTERISK, value = *, position = 7), Token(type = KEYWORD, value = FROM, position = 9), Token(type = IDENTIFIER, value = marvel, position = 14)]
2025-05-05 02:21:04,910 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-05 02:21:04,910 - compiler.parser - DEBUG - Found '*' , selecting all columns....
2025-05-05 02:21:04,910 - compiler.parser - DEBUG - Processed token: Token(type = ASTERISK, value = *, position = 7)
2025-05-05 02:21:04,910 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 9)
2025-05-05 02:21:04,910 - compiler.parser - DEBUG - Found Table: marvel
2025-05-05 02:21:04,910 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = marvel, position = 14)
2025-05-05 02:21:04,911 - compiler.statements.select_parser - INFO - SELECT parsed: columns = ['*'], tables = ['marvel']
2025-05-05 02:23:16,873 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = ASTERISK, value = *, position = 7), Token(type = KEYWORD, value = FROM, position = 9), Token(type = IDENTIFIER, value = marvel, position = 14)]
2025-05-05 02:23:16,876 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-05 02:23:16,876 - compiler.parser - DEBUG - Found '*' , selecting all columns....
2025-05-05 02:23:16,876 - compiler.parser - DEBUG - Processed token: Token(type = ASTERISK, value = *, position = 7)
2025-05-05 02:23:16,876 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 9)
2025-05-05 02:23:16,876 - compiler.parser - DEBUG - Found Table: marvel
2025-05-05 02:23:16,876 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = marvel, position = 14)
2025-05-05 02:23:16,876 - compiler.statements.select_parser - INFO - SELECT parsed: columns = ['*'], tables = ['marvel']
2025-05-05 02:24:36,811 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = users, position = 12), Token(type = KEYWORD, value = VALUES, position = 18), Token(type = LPAREN, value = (, position = 25), Token(type = NUMBER, value = 1, position = 26), Token(type = COMMA, value = ,, position = 27), Token(type = QUOTE, value = ', position = 29), Token(type = IDENTIFIER, value = John, position = 30), Token(type = QUOTE, value = ', position = 34), Token(type = RPAREN, value = ), position = 35), Token(type = SEMICOLON, value = ;, position = 36)]
2025-05-05 02:24:36,815 - compiler.statements.insert_parser - INFO - Parsing INSERT statement...
2025-05-05 02:24:36,815 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-05 02:24:36,815 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-05 02:24:36,816 - compiler.parser - DEBUG - Found table name: users
2025-05-05 02:24:36,816 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = users, position = 12)
2025-05-05 02:24:36,816 - compiler.statements.insert_parser - DEBUG - INSERT INTO: users
2025-05-05 02:24:36,816 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = VALUES, position = 18)
2025-05-05 02:24:36,816 - compiler.parser - ERROR - Expected at least one value in INSERT statement.
2025-05-05 02:26:00,069 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = IDENTIFIER, value = column1, position = 7), Token(type = COMMA, value = ,, position = 15), Token(type = IDENTIFIER, value = column2, position = 17), Token(type = KEYWORD, value = FROM, position = 25), Token(type = IDENTIFIER, value = tables, position = 30)]
2025-05-05 02:26:00,071 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-05 02:26:00,071 - compiler.parser - DEBUG - Found Column: column1
2025-05-05 02:26:00,071 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = column1, position = 7)
2025-05-05 02:26:00,071 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 15)
2025-05-05 02:26:00,071 - compiler.parser - DEBUG - Found Column: column2
2025-05-05 02:26:00,071 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = column2, position = 17)
2025-05-05 02:26:00,071 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 25)
2025-05-05 02:26:00,071 - compiler.parser - DEBUG - Found Table: tables
2025-05-05 02:26:00,071 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = tables, position = 30)
2025-05-05 02:26:00,071 - compiler.statements.select_parser - INFO - SELECT parsed: columns = ['column1', 'column2'], tables = ['tables']
2025-05-05 02:43:39,142 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = table_name, position = 12)]
2025-05-05 02:43:39,143 - compiler.statements.insert_parser - INFO - Parsing INSERT statement...
2025-05-05 02:43:39,145 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-05 02:43:39,145 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-05 02:43:39,145 - compiler.parser - DEBUG - Found table name: table_name
2025-05-05 02:43:39,145 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = table_name, position = 12)
2025-05-05 02:43:39,145 - compiler.statements.insert_parser - DEBUG - INSERT INTO: table_name
2025-05-05 02:44:09,721 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = table_name, position = 12), Token(type = KEYWORD, value = VALUES, position = 23), Token(type = LPAREN, value = (, position = 30), Token(type = IDENTIFIER, value = value1, position = 31), Token(type = COMMA, value = ,, position = 37), Token(type = IDENTIFIER, value = value2, position = 39), Token(type = COMMA, value = ,, position = 45), Token(type = IDENTIFIER, value = value3, position = 47), Token(type = RPAREN, value = ), position = 53), Token(type = SEMICOLON, value = ;, position = 54)]
2025-05-05 02:44:09,725 - compiler.statements.insert_parser - INFO - Parsing INSERT statement...
2025-05-05 02:44:09,725 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-05 02:44:09,725 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-05 02:44:09,725 - compiler.parser - DEBUG - Found table name: table_name
2025-05-05 02:44:09,725 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = table_name, position = 12)
2025-05-05 02:44:09,725 - compiler.statements.insert_parser - DEBUG - INSERT INTO: table_name
2025-05-05 02:44:09,725 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = VALUES, position = 23)
2025-05-05 02:44:09,725 - compiler.parser - ERROR - Expected at least one value in INSERT statement.
2025-05-05 02:44:24,213 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = table_name, position = 12), Token(type = KEYWORD, value = VALUES, position = 23), Token(type = IDENTIFIER, value = value1, position = 30), Token(type = SEMICOLON, value = ;, position = 36)]
2025-05-05 02:44:24,213 - compiler.statements.insert_parser - INFO - Parsing INSERT statement...
2025-05-05 02:44:24,213 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-05 02:44:24,213 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-05 02:44:24,213 - compiler.parser - DEBUG - Found table name: table_name
2025-05-05 02:44:24,213 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = table_name, position = 12)
2025-05-05 02:44:24,216 - compiler.statements.insert_parser - DEBUG - INSERT INTO: table_name
2025-05-05 02:44:24,216 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = VALUES, position = 23)
2025-05-05 02:44:24,216 - compiler.parser - ERROR - Expected at least one value in INSERT statement.
2025-05-05 02:47:50,452 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = table_name, position = 12), Token(type = KEYWORD, value = VALUES, position = 23), Token(type = LPAREN, value = (, position = 30), Token(type = IDENTIFIER, value = value1, position = 31), Token(type = COMMA, value = ,, position = 37), Token(type = IDENTIFIER, value = value2, position = 39), Token(type = COMMA, value = ,, position = 45), Token(type = IDENTIFIER, value = value3, position = 47), Token(type = RPAREN, value = ), position = 53), Token(type = SEMICOLON, value = ;, position = 54)]
2025-05-05 02:50:39,076 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = table_name, position = 12), Token(type = KEYWORD, value = VALUES, position = 23), Token(type = LPAREN, value = (, position = 30), Token(type = IDENTIFIER, value = value1, position = 31), Token(type = COMMA, value = ,, position = 37), Token(type = IDENTIFIER, value = value2, position = 39), Token(type = COMMA, value = ,, position = 45), Token(type = IDENTIFIER, value = value3, position = 47), Token(type = RPAREN, value = ), position = 53), Token(type = SEMICOLON, value = ;, position = 54)]
2025-05-05 02:52:14,852 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = table_name, position = 12), Token(type = KEYWORD, value = VALUES, position = 23), Token(type = LPAREN, value = (, position = 30), Token(type = IDENTIFIER, value = value1, position = 31), Token(type = COMMA, value = ,, position = 37), Token(type = IDENTIFIER, value = value2, position = 39), Token(type = COMMA, value = ,, position = 45), Token(type = IDENTIFIER, value = value3, position = 47), Token(type = RPAREN, value = ), position = 53), Token(type = SEMICOLON, value = ;, position = 54)]
2025-05-05 02:53:25,540 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = table_name, position = 12), Token(type = KEYWORD, value = VALUES, position = 23), Token(type = LPAREN, value = (, position = 30), Token(type = IDENTIFIER, value = value1, position = 31), Token(type = COMMA, value = ,, position = 37), Token(type = IDENTIFIER, value = value2, position = 39), Token(type = COMMA, value = ,, position = 45), Token(type = IDENTIFIER, value = value3, position = 47), Token(type = RPAREN, value = ), position = 53), Token(type = SEMICOLON, value = ;, position = 54)]
2025-05-05 02:54:32,978 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = table_name, position = 12), Token(type = KEYWORD, value = VALUES, position = 23), Token(type = LPAREN, value = (, position = 30), Token(type = IDENTIFIER, value = value1, position = 31), Token(type = COMMA, value = ,, position = 37), Token(type = IDENTIFIER, value = value2, position = 39), Token(type = COMMA, value = ,, position = 45), Token(type = IDENTIFIER, value = value3, position = 47), Token(type = RPAREN, value = ), position = 53), Token(type = SEMICOLON, value = ;, position = 54)]
2025-05-05 02:54:55,343 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = table_name, position = 12), Token(type = KEYWORD, value = VALUES, position = 23), Token(type = LPAREN, value = (, position = 30), Token(type = IDENTIFIER, value = value1, position = 31), Token(type = COMMA, value = ,, position = 37), Token(type = IDENTIFIER, value = value2, position = 39), Token(type = COMMA, value = ,, position = 45), Token(type = IDENTIFIER, value = value3, position = 47), Token(type = RPAREN, value = ), position = 53), Token(type = SEMICOLON, value = ;, position = 54)]
2025-05-05 02:54:55,348 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-05 02:54:55,348 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-05 02:54:55,349 - compiler.parser - DEBUG - Found table name: table_name
2025-05-05 02:54:55,349 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = table_name, position = 12)
2025-05-05 02:54:55,349 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = VALUES, position = 23)
2025-05-05 02:54:55,349 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 30)
2025-05-05 02:54:55,349 - compiler.parser - ERROR - Expected at least one value in INSERT statement.
2025-05-05 02:55:34,664 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = users, position = 12), Token(type = KEYWORD, value = VALUES, position = 18), Token(type = LPAREN, value = (, position = 25), Token(type = NUMBER, value = 1, position = 26), Token(type = COMMA, value = ,, position = 27), Token(type = QUOTE, value = ', position = 29), Token(type = IDENTIFIER, value = John, position = 30), Token(type = QUOTE, value = ', position = 34), Token(type = RPAREN, value = ), position = 35), Token(type = SEMICOLON, value = ;, position = 36)]
2025-05-05 02:55:34,673 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-05 02:55:34,673 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-05 02:55:34,673 - compiler.parser - DEBUG - Found table name: users
2025-05-05 02:55:34,673 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = users, position = 12)
2025-05-05 02:55:34,673 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = VALUES, position = 18)
2025-05-05 02:55:34,673 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 25)
2025-05-05 02:55:34,673 - compiler.parser - DEBUG - Found value: 1
2025-05-05 02:55:34,673 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 1, position = 26)
2025-05-05 02:55:34,673 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 27)
2025-05-05 02:55:45,179 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = users, position = 12), Token(type = KEYWORD, value = VALUES, position = 18), Token(type = LPAREN, value = (, position = 25), Token(type = NUMBER, value = 1, position = 26), Token(type = COMMA, value = ,, position = 27), Token(type = QUOTE, value = ', position = 29), Token(type = IDENTIFIER, value = John, position = 30), Token(type = QUOTE, value = ', position = 34), Token(type = RPAREN, value = ), position = 35), Token(type = SEMICOLON, value = ;, position = 37)]
2025-05-05 02:55:45,184 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-05 02:55:45,184 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-05 02:55:45,184 - compiler.parser - DEBUG - Found table name: users
2025-05-05 02:55:45,186 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = users, position = 12)
2025-05-05 02:55:45,186 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = VALUES, position = 18)
2025-05-05 02:55:45,186 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 25)
2025-05-05 02:55:45,186 - compiler.parser - DEBUG - Found value: 1
2025-05-05 02:55:45,186 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 1, position = 26)
2025-05-05 02:55:45,186 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 27)
2025-05-05 02:56:33,694 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = users, position = 12), Token(type = KEYWORD, value = VALUES, position = 18), Token(type = LPAREN, value = (, position = 25), Token(type = NUMBER, value = 1, position = 26), Token(type = COMMA, value = ,, position = 27), Token(type = QUOTE, value = ', position = 29), Token(type = IDENTIFIER, value = John, position = 30), Token(type = QUOTE, value = ', position = 34), Token(type = RPAREN, value = ), position = 35), Token(type = SEMICOLON, value = ;, position = 36)]
2025-05-05 02:56:33,703 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-05 02:56:33,703 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-05 02:56:33,703 - compiler.parser - DEBUG - Found table name: users
2025-05-05 02:56:33,703 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = users, position = 12)
2025-05-05 02:56:33,703 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = VALUES, position = 18)
2025-05-05 02:56:33,703 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 25)
2025-05-05 02:57:23,229 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = users, position = 12), Token(type = KEYWORD, value = VALUES, position = 18), Token(type = LPAREN, value = (, position = 25), Token(type = NUMBER, value = 1, position = 26), Token(type = COMMA, value = ,, position = 27), Token(type = QUOTE, value = ', position = 29), Token(type = IDENTIFIER, value = John, position = 30), Token(type = QUOTE, value = ', position = 34), Token(type = RPAREN, value = ), position = 35), Token(type = SEMICOLON, value = ;, position = 36)]
2025-05-05 02:57:23,233 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-05 02:57:23,233 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-05 02:57:23,233 - compiler.parser - DEBUG - Found table name: users
2025-05-05 02:57:23,233 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = users, position = 12)
2025-05-05 02:57:23,233 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = VALUES, position = 18)
2025-05-05 02:57:23,233 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 25)
2025-05-05 02:57:23,233 - compiler.parser - DEBUG - Found value: 1
2025-05-05 02:57:23,233 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 1, position = 26)
2025-05-05 02:57:23,233 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 27)
2025-05-05 02:57:48,057 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = me, position = 7)]
2025-05-05 02:57:48,060 - compiler.statements.update_parser - INFO - Parsing UPDATE statement...
2025-05-05 02:57:48,061 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-05 02:57:48,061 - compiler.parser - DEBUG - Found table name: me
2025-05-05 02:57:48,061 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = me, position = 7)
2025-05-05 02:57:48,061 - compiler.statements.update_parser - DEBUG - UPDATE table: me
2025-05-05 02:58:30,782 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = Customers, position = 7), Token(type = KEYWORD, value = SET, position = 17), Token(type = IDENTIFIER, value = ContactName, position = 21), Token(type = EQUALS, value = =, position = 33), Token(type = QUOTE, value = ', position = 35), Token(type = IDENTIFIER, value = Alfred, position = 36), Token(type = IDENTIFIER, value = Schmidt, position = 43), Token(type = QUOTE, value = ', position = 50), Token(type = COMMA, value = ,, position = 51), Token(type = IDENTIFIER, value = City, position = 53), Token(type = EQUALS, value = =, position = 57), Token(type = QUOTE, value = ', position = 59), Token(type = IDENTIFIER, value = Frankfurt, position = 60), Token(type = QUOTE, value = ', position = 69), Token(type = KEYWORD, value = WHERE, position = 71), Token(type = IDENTIFIER, value = CustomerID, position = 77), Token(type = EQUALS, value = =, position = 88), Token(type = NUMBER, value = 1, position = 90), Token(type = SEMICOLON, value = ;, position = 91)]
2025-05-05 02:58:30,784 - compiler.statements.update_parser - INFO - Parsing UPDATE statement...
2025-05-05 02:58:30,784 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-05 02:58:30,784 - compiler.parser - DEBUG - Found table name: Customers
2025-05-05 02:58:30,784 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = Customers, position = 7)
2025-05-05 02:58:30,784 - compiler.statements.update_parser - DEBUG - UPDATE table: Customers
2025-05-05 02:58:30,784 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SET, position = 17)
2025-05-05 02:58:30,784 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = ContactName, position = 21)
2025-05-05 02:58:30,784 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 33)
2025-05-05 02:58:30,784 - compiler.parser - DEBUG - Processed token: Token(type = QUOTE, value = ', position = 35)
2025-05-05 02:58:30,784 - compiler.statements.update_parser - DEBUG - SET clause: [('ContactName', "'")]
2025-05-05 02:58:30,784 - compiler.statements.update_parser - INFO - UPDATE parsed: table = Customers, SET = [('ContactName', "'")], WHERE = None
2025-05-05 03:19:57,847 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = ASTERISK, value = *, position = 7), Token(type = KEYWORD, value = FROM, position = 9), Token(type = KEYWORD, value = TABLE, position = 14)]
2025-05-05 03:19:57,850 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-05 03:19:57,850 - compiler.parser - DEBUG - Found '*' , selecting all columns....
2025-05-05 03:19:57,850 - compiler.parser - DEBUG - Processed token: Token(type = ASTERISK, value = *, position = 7)
2025-05-05 03:19:57,850 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 9)
2025-05-05 03:19:57,850 - compiler.parser - ERROR - Expected at least one table in SELECT statement.
2025-05-05 03:20:12,260 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = ASTERISK, value = *, position = 7), Token(type = KEYWORD, value = FROM, position = 9), Token(type = IDENTIFIER, value = dffdf, position = 14)]
2025-05-05 03:20:12,261 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-05 03:20:12,261 - compiler.parser - DEBUG - Found '*' , selecting all columns....
2025-05-05 03:20:12,261 - compiler.parser - DEBUG - Processed token: Token(type = ASTERISK, value = *, position = 7)
2025-05-05 03:20:12,261 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 9)
2025-05-05 03:20:12,261 - compiler.parser - DEBUG - Found Table: dffdf
2025-05-05 03:20:12,261 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = dffdf, position = 14)
2025-05-05 03:20:12,261 - compiler.statements.select_parser - INFO - SELECT parsed: columns = ['*'], tables = ['dffdf']
2025-05-05 03:21:27,817 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = ASTERISK, value = *, position = 7), Token(type = KEYWORD, value = FROM, position = 9), Token(type = IDENTIFIER, value = dffdf, position = 14)]
2025-05-05 03:21:27,820 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-05 03:21:27,821 - compiler.parser - DEBUG - Found '*' , selecting all columns....
2025-05-05 03:21:27,821 - compiler.parser - DEBUG - Processed token: Token(type = ASTERISK, value = *, position = 7)
2025-05-05 03:21:27,821 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 9)
2025-05-05 03:21:27,821 - compiler.parser - DEBUG - Found Table: dffdf
2025-05-05 03:21:27,821 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = dffdf, position = 14)
2025-05-05 03:21:27,821 - compiler.statements.select_parser - INFO - SELECT parsed: columns = ['*'], tables = ['dffdf']
2025-05-05 03:24:35,328 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = ASTERISK, value = *, position = 7), Token(type = KEYWORD, value = FROM, position = 9), Token(type = IDENTIFIER, value = dfdfd, position = 14)]
2025-05-05 03:24:35,330 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-05 03:24:35,330 - compiler.parser - DEBUG - Found '*' , selecting all columns....
2025-05-05 03:24:35,330 - compiler.parser - DEBUG - Processed token: Token(type = ASTERISK, value = *, position = 7)
2025-05-05 03:24:35,330 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 9)
2025-05-05 03:24:35,330 - compiler.parser - DEBUG - Found Table: dfdfd
2025-05-05 03:24:35,330 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = dfdfd, position = 14)
2025-05-05 03:24:35,330 - compiler.statements.select_parser - INFO - SELECT parsed: columns = ['*'], tables = ['dfdfd']
2025-05-05 03:27:25,717 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = ASTERISK, value = *, position = 7), Token(type = KEYWORD, value = FROM, position = 9), Token(type = IDENTIFIER, value = fndjdf, position = 14), Token(type = KEYWORD, value = WHERE, position = 21), Token(type = IDENTIFIER, value = id, position = 27), Token(type = EQUALS, value = =, position = 30), Token(type = NUMBER, value = 1, position = 31), Token(type = SEMICOLON, value = ;, position = 32)]
2025-05-05 03:27:25,720 - compiler.statements.select_parser - DEBUG - Parsing SELECT statement...
2025-05-05 03:27:25,720 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-05 03:27:25,720 - compiler.parser - DEBUG - Found '*' , selecting all columns....
2025-05-05 03:27:25,720 - compiler.parser - DEBUG - Processed token: Token(type = ASTERISK, value = *, position = 7)
2025-05-05 03:27:25,720 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 9)
2025-05-05 03:27:25,720 - compiler.parser - DEBUG - Found Table: fndjdf
2025-05-05 03:27:25,720 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = fndjdf, position = 14)
2025-05-05 03:27:25,720 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = WHERE, position = 21)
2025-05-05 03:27:25,720 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = id, position = 27)
2025-05-05 03:27:25,720 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 30)
2025-05-05 03:27:25,720 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 1, position = 31)
2025-05-05 03:28:23,823 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = IDENTIFIER, value = id, position = 7), Token(type = COMMA, value = ,, position = 9), Token(type = IDENTIFIER, value = name, position = 11), Token(type = KEYWORD, value = FROM, position = 16), Token(type = IDENTIFIER, value = employees, position = 21), Token(type = KEYWORD, value = WHERE, position = 31), Token(type = IDENTIFIER, value = age, position = 37), Token(type = EQUALS, value = =, position = 41), Token(type = NUMBER, value = 30, position = 43), Token(type = SEMICOLON, value = ;, position = 45)]
2025-05-05 03:28:23,831 - compiler.statements.select_parser - DEBUG - Parsing SELECT statement...
2025-05-05 03:28:23,831 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-05 03:28:23,831 - compiler.parser - DEBUG - Found Column: id
2025-05-05 03:28:23,831 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = id, position = 7)
2025-05-05 03:28:23,831 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 9)
2025-05-05 03:28:23,831 - compiler.parser - DEBUG - Found Column: name
2025-05-05 03:28:23,831 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = name, position = 11)
2025-05-05 03:28:23,831 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 16)
2025-05-05 03:28:23,831 - compiler.parser - DEBUG - Found Table: employees
2025-05-05 03:28:23,831 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = employees, position = 21)
2025-05-05 03:28:23,831 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = WHERE, position = 31)
2025-05-05 03:28:23,831 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = age, position = 37)
2025-05-05 03:28:23,831 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 41)
2025-05-05 03:28:23,831 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 30, position = 43)
2025-05-05 03:28:41,669 - compiler.tokenizer - ERROR - Invalid token at 33: "
2025-05-05 03:32:26,986 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = products, position = 12), Token(type = KEYWORD, value = VALUES, position = 21), Token(type = NUMBER, value = 101, position = 28), Token(type = COMMA, value = ,, position = 31), Token(type = STRING, value = Laptop, position = 33), Token(type = COMMA, value = ,, position = 41), Token(type = NUMBER, value = 899.99, position = 43), Token(type = SEMICOLON, value = ;, position = 49)]
2025-05-05 03:32:26,992 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-05 03:32:26,992 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-05 03:32:26,992 - compiler.parser - DEBUG - Found table name: products
2025-05-05 03:32:26,992 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 12)
2025-05-05 03:32:26,992 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = VALUES, position = 21)
2025-05-05 03:33:06,491 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = products, position = 12), Token(type = KEYWORD, value = VALUES, position = 21), Token(type = NUMBER, value = 101, position = 28), Token(type = COMMA, value = ,, position = 31), Token(type = STRING, value = Laptop, position = 33), Token(type = COMMA, value = ,, position = 41), Token(type = NUMBER, value = 899.99, position = 43), Token(type = SEMICOLON, value = ;, position = 49), Token(type = KEYWORD, value = INSERT, position = 50), Token(type = KEYWORD, value = INTO, position = 57), Token(type = IDENTIFIER, value = products, position = 62), Token(type = KEYWORD, value = VALUES, position = 71), Token(type = LPAREN, value = (, position = 78), Token(type = NUMBER, value = 101, position = 79), Token(type = COMMA, value = ,, position = 82), Token(type = STRING, value = Laptop, position = 84), Token(type = COMMA, value = ,, position = 92), Token(type = NUMBER, value = 899.99, position = 94), Token(type = RPAREN, value = ), position = 100), Token(type = SEMICOLON, value = ;, position = 101)]
2025-05-05 03:33:06,501 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-05 03:33:06,501 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-05 03:33:06,501 - compiler.parser - DEBUG - Found table name: products
2025-05-05 03:33:06,501 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 12)
2025-05-05 03:33:06,501 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = VALUES, position = 21)
2025-05-05 03:33:10,165 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = products, position = 12), Token(type = KEYWORD, value = VALUES, position = 21), Token(type = LPAREN, value = (, position = 28), Token(type = NUMBER, value = 101, position = 29), Token(type = COMMA, value = ,, position = 32), Token(type = STRING, value = Laptop, position = 34), Token(type = COMMA, value = ,, position = 42), Token(type = NUMBER, value = 899.99, position = 44), Token(type = RPAREN, value = ), position = 50), Token(type = SEMICOLON, value = ;, position = 51)]
2025-05-05 03:33:10,170 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-05 03:33:10,170 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-05 03:33:10,170 - compiler.parser - DEBUG - Found table name: products
2025-05-05 03:33:10,170 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 12)
2025-05-05 03:33:10,170 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = VALUES, position = 21)
2025-05-05 03:33:10,170 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 28)
2025-05-05 03:33:10,170 - compiler.parser - DEBUG - Found value: 101
2025-05-05 03:33:10,170 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 101, position = 29)
2025-05-05 03:33:10,170 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 32)
2025-05-05 03:33:10,170 - compiler.parser - DEBUG - Found value: Laptop
2025-05-05 03:33:10,170 - compiler.parser - DEBUG - Processed token: Token(type = STRING, value = Laptop, position = 34)
2025-05-05 03:33:10,170 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 42)
2025-05-05 03:33:10,170 - compiler.parser - DEBUG - Found value: 899.99
2025-05-05 03:33:10,170 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 899.99, position = 44)
2025-05-05 03:33:10,170 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 50)
2025-05-05 03:33:10,170 - compiler.parser - DEBUG - Processed token: Token(type = SEMICOLON, value = ;, position = 51)
2025-05-05 03:33:10,175 - compiler.code_generator - ERROR - Unsupported statement type: insert
2025-05-05 03:33:26,347 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = products, position = 12), Token(type = KEYWORD, value = VALUES, position = 21), Token(type = LPAREN, value = (, position = 28), Token(type = NUMBER, value = 101, position = 29), Token(type = COMMA, value = ,, position = 32), Token(type = STRING, value = Laptop, position = 34), Token(type = COMMA, value = ,, position = 42), Token(type = NUMBER, value = 899.99, position = 44), Token(type = RPAREN, value = ), position = 50), Token(type = SEMICOLON, value = ;, position = 51)]
2025-05-05 03:33:26,352 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-05 03:33:26,352 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-05 03:33:26,352 - compiler.parser - DEBUG - Found table name: products
2025-05-05 03:33:26,352 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 12)
2025-05-05 03:33:26,352 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = VALUES, position = 21)
2025-05-05 03:33:26,352 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 28)
2025-05-05 03:33:26,352 - compiler.parser - DEBUG - Found value: 101
2025-05-05 03:33:26,352 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 101, position = 29)
2025-05-05 03:33:26,352 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 32)
2025-05-05 03:33:26,352 - compiler.parser - DEBUG - Found value: Laptop
2025-05-05 03:33:26,352 - compiler.parser - DEBUG - Processed token: Token(type = STRING, value = Laptop, position = 34)
2025-05-05 03:33:26,352 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 42)
2025-05-05 03:33:26,352 - compiler.parser - DEBUG - Found value: 899.99
2025-05-05 03:33:26,352 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 899.99, position = 44)
2025-05-05 03:33:26,352 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 50)
2025-05-05 03:33:26,352 - compiler.parser - DEBUG - Processed token: Token(type = SEMICOLON, value = ;, position = 51)
2025-05-05 03:33:26,355 - compiler.code_generator - ERROR - Unsupported statement type: insert
2025-05-05 03:39:00,445 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = products, position = 12), Token(type = KEYWORD, value = VALUES, position = 21), Token(type = LPAREN, value = (, position = 28), Token(type = NUMBER, value = 101, position = 29), Token(type = COMMA, value = ,, position = 32), Token(type = STRING, value = Laptop, position = 34), Token(type = COMMA, value = ,, position = 42), Token(type = NUMBER, value = 899.99, position = 44), Token(type = RPAREN, value = ), position = 50), Token(type = SEMICOLON, value = ;, position = 51)]
2025-05-05 03:39:00,451 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-05 03:39:00,452 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-05 03:39:00,452 - compiler.parser - DEBUG - Found table name: products
2025-05-05 03:39:00,452 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 12)
2025-05-05 03:39:00,452 - compiler.statements.insert_parser - DEBUG - Parsed table name: products
2025-05-05 03:39:00,452 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = VALUES, position = 21)
2025-05-05 03:39:00,452 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 28)
2025-05-05 03:39:00,452 - compiler.parser - DEBUG - Found value: 101
2025-05-05 03:39:00,452 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 101, position = 29)
2025-05-05 03:39:00,452 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 32)
2025-05-05 03:39:00,452 - compiler.parser - DEBUG - Found value: Laptop
2025-05-05 03:39:00,452 - compiler.parser - DEBUG - Processed token: Token(type = STRING, value = Laptop, position = 34)
2025-05-05 03:39:00,452 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 42)
2025-05-05 03:39:00,452 - compiler.parser - DEBUG - Found value: 899.99
2025-05-05 03:39:00,452 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 899.99, position = 44)
2025-05-05 03:39:00,452 - compiler.statements.insert_parser - DEBUG - Parsed values: ['101', 'Laptop', '899.99']
2025-05-05 03:39:00,452 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 50)
2025-05-05 03:39:00,452 - compiler.parser - DEBUG - Processed token: Token(type = SEMICOLON, value = ;, position = 51)
2025-05-05 03:39:00,452 - compiler.code_generator - ERROR - Unsupported statement type: insert
2025-05-05 03:40:48,680 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = products, position = 12), Token(type = KEYWORD, value = VALUES, position = 21), Token(type = LPAREN, value = (, position = 28), Token(type = NUMBER, value = 101, position = 29), Token(type = COMMA, value = ,, position = 32), Token(type = STRING, value = Laptop, position = 34), Token(type = COMMA, value = ,, position = 42), Token(type = NUMBER, value = 899.99, position = 44), Token(type = RPAREN, value = ), position = 50), Token(type = SEMICOLON, value = ;, position = 51)]
2025-05-05 03:40:48,688 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-05 03:40:48,688 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-05 03:40:48,688 - compiler.parser - DEBUG - Found table name: products
2025-05-05 03:40:48,688 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 12)
2025-05-05 03:40:48,688 - compiler.statements.insert_parser - DEBUG - Parsed table name: products
2025-05-05 03:40:48,688 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = VALUES, position = 21)
2025-05-05 03:40:48,688 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 28)
2025-05-05 03:40:48,688 - compiler.parser - DEBUG - Found value: 101
2025-05-05 03:40:48,688 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 101, position = 29)
2025-05-05 03:40:48,688 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 32)
2025-05-05 03:40:48,688 - compiler.parser - DEBUG - Found value: Laptop
2025-05-05 03:40:48,688 - compiler.parser - DEBUG - Processed token: Token(type = STRING, value = Laptop, position = 34)
2025-05-05 03:40:48,688 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 42)
2025-05-05 03:40:48,688 - compiler.parser - DEBUG - Found value: 899.99
2025-05-05 03:40:48,689 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 899.99, position = 44)
2025-05-05 03:40:48,689 - compiler.statements.insert_parser - DEBUG - Parsed values: ['101', 'Laptop', '899.99']
2025-05-05 03:40:48,689 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 50)
2025-05-05 03:40:48,689 - compiler.parser - DEBUG - Processed token: Token(type = SEMICOLON, value = ;, position = 51)
2025-05-05 03:40:48,689 - compiler.parser - INFO - Handling insert for table 'products' with values ['101', 'Laptop', '899.99']
2025-05-05 03:40:48,691 - compiler.code_generator - ERROR - Unsupported statement type: insert
2025-05-05 03:41:57,669 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = products, position = 12), Token(type = KEYWORD, value = VALUES, position = 21), Token(type = LPAREN, value = (, position = 28), Token(type = NUMBER, value = 101, position = 29), Token(type = COMMA, value = ,, position = 32), Token(type = STRING, value = Laptop, position = 34), Token(type = COMMA, value = ,, position = 42), Token(type = NUMBER, value = 899.99, position = 44), Token(type = RPAREN, value = ), position = 50), Token(type = SEMICOLON, value = ;, position = 51)]
2025-05-05 03:43:45,360 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = products, position = 12), Token(type = KEYWORD, value = VALUES, position = 21), Token(type = LPAREN, value = (, position = 28), Token(type = NUMBER, value = 101, position = 29), Token(type = COMMA, value = ,, position = 32), Token(type = STRING, value = Laptop, position = 34), Token(type = COMMA, value = ,, position = 42), Token(type = NUMBER, value = 899.99, position = 44), Token(type = RPAREN, value = ), position = 50), Token(type = SEMICOLON, value = ;, position = 51)]
2025-05-05 03:44:50,490 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = products, position = 12), Token(type = KEYWORD, value = VALUES, position = 21), Token(type = LPAREN, value = (, position = 28), Token(type = NUMBER, value = 101, position = 29), Token(type = COMMA, value = ,, position = 32), Token(type = STRING, value = Laptop, position = 34), Token(type = COMMA, value = ,, position = 42), Token(type = NUMBER, value = 899.99, position = 44), Token(type = RPAREN, value = ), position = 50), Token(type = SEMICOLON, value = ;, position = 51)]
2025-05-05 03:44:50,492 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-05 03:44:50,492 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-05 03:44:50,492 - compiler.parser - DEBUG - Found table name: products
2025-05-05 03:44:50,492 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 12)
2025-05-05 03:44:50,492 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = VALUES, position = 21)
2025-05-05 03:44:50,492 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 28)
2025-05-05 03:44:50,492 - compiler.parser - DEBUG - Found value: 101
2025-05-05 03:44:50,492 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 101, position = 29)
2025-05-05 03:44:50,492 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 32)
2025-05-05 03:44:50,492 - compiler.parser - DEBUG - Found value: Laptop
2025-05-05 03:44:50,492 - compiler.parser - DEBUG - Processed token: Token(type = STRING, value = Laptop, position = 34)
2025-05-05 03:44:50,492 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 42)
2025-05-05 03:44:50,492 - compiler.parser - DEBUG - Found value: 899.99
2025-05-05 03:44:50,492 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 899.99, position = 44)
2025-05-05 03:44:50,492 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 50)
2025-05-05 03:44:50,492 - compiler.parser - DEBUG - Processed token: Token(type = SEMICOLON, value = ;, position = 51)
2025-05-05 03:44:50,492 - compiler.parser - INFO - Handling insert for table 'products' with values ['101', 'Laptop', '899.99']
2025-05-05 03:44:50,498 - compiler.code_generator - ERROR - Unsupported statement type: insert
2025-05-05 03:47:07,632 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = products, position = 12), Token(type = KEYWORD, value = VALUES, position = 21), Token(type = LPAREN, value = (, position = 28), Token(type = NUMBER, value = 101, position = 29), Token(type = COMMA, value = ,, position = 32), Token(type = STRING, value = Laptop, position = 34), Token(type = COMMA, value = ,, position = 42), Token(type = NUMBER, value = 899.99, position = 44), Token(type = RPAREN, value = ), position = 50), Token(type = SEMICOLON, value = ;, position = 51)]
2025-05-05 03:47:07,634 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-05 03:47:07,634 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-05 03:47:07,634 - compiler.parser - DEBUG - Found table name: products
2025-05-05 03:47:07,634 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 12)
2025-05-05 03:47:07,634 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = VALUES, position = 21)
2025-05-05 03:47:07,634 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 28)
2025-05-05 03:47:07,634 - compiler.parser - DEBUG - Found value: 101
2025-05-05 03:47:07,634 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 101, position = 29)
2025-05-05 03:47:07,634 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 32)
2025-05-05 03:47:07,634 - compiler.parser - DEBUG - Found value: Laptop
2025-05-05 03:47:07,634 - compiler.parser - DEBUG - Processed token: Token(type = STRING, value = Laptop, position = 34)
2025-05-05 03:47:07,634 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 42)
2025-05-05 03:47:07,634 - compiler.parser - DEBUG - Found value: 899.99
2025-05-05 03:47:07,634 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 899.99, position = 44)
2025-05-05 03:47:07,634 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 50)
2025-05-05 03:47:07,634 - compiler.parser - DEBUG - Processed token: Token(type = SEMICOLON, value = ;, position = 51)
2025-05-05 03:47:07,634 - compiler.parser - INFO - Handling insert for table 'products' with values ['101', 'Laptop', '899.99']
2025-05-05 03:47:07,641 - compiler.code_generator - ERROR - Unsupported statement type: insert
2025-05-05 03:49:12,008 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = products, position = 12), Token(type = KEYWORD, value = VALUES, position = 21), Token(type = LPAREN, value = (, position = 28), Token(type = NUMBER, value = 101, position = 29), Token(type = COMMA, value = ,, position = 32), Token(type = STRING, value = Laptop, position = 34), Token(type = COMMA, value = ,, position = 42), Token(type = NUMBER, value = 899.99, position = 44), Token(type = RPAREN, value = ), position = 50), Token(type = SEMICOLON, value = ;, position = 51)]
2025-05-05 03:49:12,011 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-05 03:49:12,011 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-05 03:49:12,011 - compiler.parser - DEBUG - Found table name: products
2025-05-05 03:49:12,011 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 12)
2025-05-05 03:49:12,011 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = VALUES, position = 21)
2025-05-05 03:49:12,011 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 28)
2025-05-05 03:49:12,011 - compiler.parser - DEBUG - Found value: 101
2025-05-05 03:49:12,011 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 101, position = 29)
2025-05-05 03:49:12,011 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 32)
2025-05-05 03:49:12,011 - compiler.parser - DEBUG - Found value: Laptop
2025-05-05 03:49:12,011 - compiler.parser - DEBUG - Processed token: Token(type = STRING, value = Laptop, position = 34)
2025-05-05 03:49:12,011 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 42)
2025-05-05 03:49:12,011 - compiler.parser - DEBUG - Found value: 899.99
2025-05-05 03:49:12,011 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 899.99, position = 44)
2025-05-05 03:49:12,011 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 50)
2025-05-05 03:49:12,011 - compiler.parser - DEBUG - Processed token: Token(type = SEMICOLON, value = ;, position = 51)
2025-05-05 03:49:12,011 - compiler.parser - INFO - Handling insert for table 'products' with values ['101', 'Laptop', '899.99']
2025-05-05 03:49:12,011 - compiler.parser - DEBUG - Parsed Insert: {'type': 'insert', 'table_name': 'products', 'values': ['101', 'Laptop', '899.99']}
2025-05-05 03:49:12,011 - compiler.code_generator - ERROR - Unsupported statement type: insert
2025-05-05 03:50:46,030 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = CREATE, position = 0), Token(type = KEYWORD, value = TABLE, position = 7), Token(type = IDENTIFIER, value = naman, position = 13)]
2025-05-05 03:50:46,032 - compiler.statements.create_parser - INFO - Parsing Create Table.... 

2025-05-05 03:50:46,032 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = CREATE, position = 0)
2025-05-05 03:50:46,032 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = TABLE, position = 7)
2025-05-05 03:50:46,032 - compiler.statements.create_parser - DEBUG - Parsing Columns.....

2025-05-05 03:50:46,032 - compiler.statements.create_parser - DEBUG - Column Found: naman
2025-05-05 03:50:46,032 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = naman, position = 13)
2025-05-05 03:51:20,343 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = CREATE, position = 0), Token(type = KEYWORD, value = TABLE, position = 7), Token(type = IDENTIFIER, value = users, position = 13), Token(type = LPAREN, value = (, position = 19), Token(type = IDENTIFIER, value = id, position = 20), Token(type = IDENTIFIER, value = INT, position = 23), Token(type = COMMA, value = ,, position = 26), Token(type = IDENTIFIER, value = name, position = 28), Token(type = IDENTIFIER, value = TEXT, position = 33), Token(type = COMMA, value = ,, position = 37), Token(type = IDENTIFIER, value = age, position = 39), Token(type = IDENTIFIER, value = INT, position = 43), Token(type = RPAREN, value = ), position = 46), Token(type = SEMICOLON, value = ;, position = 47)]
2025-05-05 03:51:20,346 - compiler.statements.create_parser - INFO - Parsing Create Table.... 

2025-05-05 03:51:20,346 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = CREATE, position = 0)
2025-05-05 03:51:20,346 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = TABLE, position = 7)
2025-05-05 03:51:20,346 - compiler.statements.create_parser - DEBUG - Parsing Columns.....

2025-05-05 03:51:20,346 - compiler.statements.create_parser - DEBUG - Column Found: users
2025-05-05 03:51:20,346 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = users, position = 13)
2025-05-05 03:51:20,346 - compiler.statements.create_parser - ERROR - Expected Column Type...

2025-05-05 03:51:44,259 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = CREATE, position = 0), Token(type = KEYWORD, value = TABLE, position = 7), Token(type = IDENTIFIER, value = users, position = 13), Token(type = LPAREN, value = (, position = 19), Token(type = IDENTIFIER, value = id, position = 20), Token(type = IDENTIFIER, value = INT, position = 23), Token(type = COMMA, value = ,, position = 26), Token(type = IDENTIFIER, value = name, position = 28), Token(type = IDENTIFIER, value = TEXT, position = 33), Token(type = COMMA, value = ,, position = 37), Token(type = IDENTIFIER, value = age, position = 39), Token(type = IDENTIFIER, value = INT, position = 43), Token(type = RPAREN, value = ), position = 46), Token(type = SEMICOLON, value = ;, position = 47)]
2025-05-05 03:51:44,268 - compiler.statements.create_parser - INFO - Parsing Create Table.... 

2025-05-05 03:51:44,268 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = CREATE, position = 0)
2025-05-05 03:51:44,269 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = TABLE, position = 7)
2025-05-05 03:51:44,269 - compiler.statements.create_parser - DEBUG - Parsing Columns.....

2025-05-05 03:51:44,269 - compiler.statements.create_parser - DEBUG - Column Found: users
2025-05-05 03:51:44,269 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = users, position = 13)
2025-05-05 03:51:44,269 - compiler.statements.create_parser - ERROR - Expected Column Type...

2025-05-05 03:53:11,986 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = CREATE, position = 0), Token(type = KEYWORD, value = TABLE, position = 7), Token(type = IDENTIFIER, value = users, position = 13), Token(type = LPAREN, value = (, position = 19), Token(type = IDENTIFIER, value = id, position = 20), Token(type = IDENTIFIER, value = INT, position = 23), Token(type = COMMA, value = ,, position = 26), Token(type = IDENTIFIER, value = name, position = 28), Token(type = IDENTIFIER, value = TEXT, position = 33), Token(type = COMMA, value = ,, position = 37), Token(type = IDENTIFIER, value = age, position = 39), Token(type = IDENTIFIER, value = INT, position = 43), Token(type = RPAREN, value = ), position = 46), Token(type = SEMICOLON, value = ;, position = 47)]
2025-05-05 03:53:11,997 - compiler.statements.create_parser - INFO - Parsing Create Table.... 

2025-05-05 03:53:11,998 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = CREATE, position = 0)
2025-05-05 03:53:11,998 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = TABLE, position = 7)
2025-05-05 03:53:11,998 - compiler.statements.create_parser - DEBUG - Parsing Columns.....

2025-05-05 03:53:11,998 - compiler.statements.create_parser - DEBUG - Column Found: users
2025-05-05 03:53:11,998 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = users, position = 13)
2025-05-05 03:53:11,998 - compiler.statements.create_parser - ERROR - Expected Column Type...

2025-05-05 03:54:24,091 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = CREATE, position = 0), Token(type = KEYWORD, value = TABLE, position = 7), Token(type = IDENTIFIER, value = users, position = 13), Token(type = LPAREN, value = (, position = 19), Token(type = IDENTIFIER, value = id, position = 20), Token(type = IDENTIFIER, value = INT, position = 23), Token(type = COMMA, value = ,, position = 26), Token(type = IDENTIFIER, value = name, position = 28), Token(type = IDENTIFIER, value = TEXT, position = 33), Token(type = COMMA, value = ,, position = 37), Token(type = IDENTIFIER, value = age, position = 39), Token(type = IDENTIFIER, value = INT, position = 43), Token(type = RPAREN, value = ), position = 46), Token(type = SEMICOLON, value = ;, position = 47)]
2025-05-05 03:54:24,096 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = CREATE, position = 0)
2025-05-05 03:54:24,096 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = TABLE, position = 7)
2025-05-05 03:54:24,096 - compiler.parser - DEBUG - Found table name: users
2025-05-05 03:54:24,096 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = users, position = 13)
2025-05-05 03:54:24,096 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 19)
2025-05-05 03:54:24,096 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = id, position = 20)
2025-05-05 03:54:24,096 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = INT, position = 23)
2025-05-05 03:54:24,096 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 26)
2025-05-05 03:54:24,096 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = name, position = 28)
2025-05-05 03:54:24,096 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = TEXT, position = 33)
2025-05-05 03:54:24,096 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 37)
2025-05-05 03:54:24,096 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = age, position = 39)
2025-05-05 03:54:24,096 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = INT, position = 43)
2025-05-05 03:54:24,096 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 46)
2025-05-05 03:54:24,097 - compiler.parser - DEBUG - Processed token: Token(type = SEMICOLON, value = ;, position = 47)
2025-05-05 03:54:24,101 - compiler.code_generator - ERROR - Unsupported statement type: create
2025-05-05 03:55:02,904 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = CREATE, position = 0), Token(type = KEYWORD, value = TABLE, position = 7), Token(type = IDENTIFIER, value = users, position = 13), Token(type = LPAREN, value = (, position = 19), Token(type = IDENTIFIER, value = id, position = 20), Token(type = IDENTIFIER, value = INT, position = 23), Token(type = COMMA, value = ,, position = 26), Token(type = IDENTIFIER, value = name, position = 28), Token(type = IDENTIFIER, value = TEXT, position = 33), Token(type = COMMA, value = ,, position = 37), Token(type = IDENTIFIER, value = age, position = 39), Token(type = IDENTIFIER, value = INT, position = 43), Token(type = RPAREN, value = ), position = 46), Token(type = SEMICOLON, value = ;, position = 47)]
2025-05-05 03:55:06,227 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = CREATE, position = 0), Token(type = KEYWORD, value = TABLE, position = 7), Token(type = IDENTIFIER, value = users, position = 13), Token(type = LPAREN, value = (, position = 19), Token(type = IDENTIFIER, value = id, position = 20), Token(type = IDENTIFIER, value = INT, position = 23), Token(type = COMMA, value = ,, position = 26), Token(type = IDENTIFIER, value = name, position = 28), Token(type = IDENTIFIER, value = TEXT, position = 33), Token(type = COMMA, value = ,, position = 37), Token(type = IDENTIFIER, value = age, position = 39), Token(type = IDENTIFIER, value = INT, position = 43), Token(type = RPAREN, value = ), position = 46), Token(type = SEMICOLON, value = ;, position = 47)]
2025-05-05 03:55:33,359 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = CREATE, position = 0), Token(type = KEYWORD, value = TABLE, position = 7), Token(type = IDENTIFIER, value = users, position = 13), Token(type = LPAREN, value = (, position = 19), Token(type = IDENTIFIER, value = id, position = 20), Token(type = IDENTIFIER, value = INT, position = 23), Token(type = COMMA, value = ,, position = 26), Token(type = IDENTIFIER, value = name, position = 28), Token(type = IDENTIFIER, value = TEXT, position = 33), Token(type = COMMA, value = ,, position = 37), Token(type = IDENTIFIER, value = age, position = 39), Token(type = IDENTIFIER, value = INT, position = 43), Token(type = RPAREN, value = ), position = 46), Token(type = SEMICOLON, value = ;, position = 47)]
2025-05-05 03:55:33,365 - compiler.statements.create_parser - INFO - Parsing Create Table.... 

2025-05-05 03:55:33,365 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = CREATE, position = 0)
2025-05-05 03:55:33,365 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = TABLE, position = 7)
2025-05-05 03:55:33,365 - compiler.statements.create_parser - DEBUG - Table name: users
2025-05-05 03:55:33,365 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = users, position = 13)
2025-05-05 03:56:35,274 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = CREATE, position = 0), Token(type = KEYWORD, value = TABLE, position = 7), Token(type = IDENTIFIER, value = users, position = 13), Token(type = LPAREN, value = (, position = 19), Token(type = IDENTIFIER, value = id, position = 20), Token(type = IDENTIFIER, value = INT, position = 23), Token(type = COMMA, value = ,, position = 26), Token(type = IDENTIFIER, value = name, position = 28), Token(type = IDENTIFIER, value = TEXT, position = 33), Token(type = COMMA, value = ,, position = 37), Token(type = IDENTIFIER, value = age, position = 39), Token(type = IDENTIFIER, value = INT, position = 43), Token(type = RPAREN, value = ), position = 46), Token(type = SEMICOLON, value = ;, position = 47)]
2025-05-05 03:56:35,279 - compiler.parser - INFO - Parsing Create Table.... 

2025-05-05 03:56:35,279 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = CREATE, position = 0)
2025-05-05 03:56:35,280 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = TABLE, position = 7)
2025-05-05 03:56:35,280 - compiler.parser - DEBUG - Parsing Columns.....

2025-05-05 03:56:35,280 - compiler.parser - DEBUG - Column Found: users
2025-05-05 03:56:35,280 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = users, position = 13)
2025-05-05 03:56:35,280 - compiler.parser - ERROR - Expected Column Type...

2025-05-05 03:57:37,666 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = CREATE, position = 0), Token(type = KEYWORD, value = TABLE, position = 7), Token(type = IDENTIFIER, value = users, position = 13), Token(type = LPAREN, value = (, position = 19), Token(type = IDENTIFIER, value = id, position = 20), Token(type = IDENTIFIER, value = INT, position = 23), Token(type = COMMA, value = ,, position = 26), Token(type = IDENTIFIER, value = name, position = 28), Token(type = IDENTIFIER, value = TEXT, position = 33), Token(type = COMMA, value = ,, position = 37), Token(type = IDENTIFIER, value = age, position = 39), Token(type = IDENTIFIER, value = INT, position = 43), Token(type = RPAREN, value = ), position = 46), Token(type = SEMICOLON, value = ;, position = 47)]
2025-05-05 03:57:37,671 - compiler.parser - INFO - Parsing Create Table.... 

2025-05-05 03:57:37,671 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = CREATE, position = 0)
2025-05-05 03:57:37,671 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = TABLE, position = 7)
2025-05-05 03:57:37,671 - compiler.parser - DEBUG - Parsing Columns.....

2025-05-05 03:57:37,671 - compiler.parser - DEBUG - Column Found: users
2025-05-05 03:57:37,671 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = users, position = 13)
2025-05-05 03:57:37,672 - compiler.parser - ERROR - Expected column type (e.g., INT, TEXT), but got LPAREN - (
2025-05-05 03:59:22,664 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = CREATE, position = 0), Token(type = KEYWORD, value = TABLE, position = 7), Token(type = IDENTIFIER, value = users, position = 13), Token(type = LPAREN, value = (, position = 19), Token(type = IDENTIFIER, value = id, position = 20), Token(type = IDENTIFIER, value = INT, position = 23), Token(type = COMMA, value = ,, position = 26), Token(type = IDENTIFIER, value = name, position = 28), Token(type = IDENTIFIER, value = TEXT, position = 33), Token(type = COMMA, value = ,, position = 37), Token(type = IDENTIFIER, value = age, position = 39), Token(type = IDENTIFIER, value = INT, position = 43), Token(type = RPAREN, value = ), position = 46), Token(type = SEMICOLON, value = ;, position = 47)]
2025-05-05 03:59:22,667 - compiler.statements.create_parser - INFO - Parsing Create Table.... 

2025-05-05 03:59:22,667 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = CREATE, position = 0)
2025-05-05 03:59:22,667 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = TABLE, position = 7)
2025-05-05 03:59:22,667 - compiler.statements.create_parser - DEBUG - Table Name Found: users
2025-05-05 03:59:22,667 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = users, position = 13)
2025-05-05 03:59:22,667 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 19)
2025-05-05 03:59:22,667 - compiler.statements.create_parser - DEBUG - Parsing Columns.....

2025-05-05 03:59:22,667 - compiler.statements.create_parser - DEBUG - Column Found: id
2025-05-05 03:59:22,667 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = id, position = 20)
2025-05-05 03:59:22,667 - compiler.statements.create_parser - ERROR - Expected column type (e.g., INT, TEXT), but got IDENTIFIER - INT
2025-05-05 04:02:11,305 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = CREATE, position = 0), Token(type = KEYWORD, value = TABLE, position = 7), Token(type = IDENTIFIER, value = users, position = 13), Token(type = LPAREN, value = (, position = 19), Token(type = IDENTIFIER, value = id, position = 20), Token(type = KEYWORD, value = INT, position = 23), Token(type = COMMA, value = ,, position = 26), Token(type = IDENTIFIER, value = name, position = 28), Token(type = KEYWORD, value = TEXT, position = 33), Token(type = COMMA, value = ,, position = 37), Token(type = IDENTIFIER, value = age, position = 39), Token(type = KEYWORD, value = INT, position = 43), Token(type = RPAREN, value = ), position = 46), Token(type = SEMICOLON, value = ;, position = 47)]
2025-05-05 04:02:11,306 - compiler.statements.create_parser - INFO - Parsing Create Table.... 

2025-05-05 04:02:11,306 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = CREATE, position = 0)
2025-05-05 04:02:11,306 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = TABLE, position = 7)
2025-05-05 04:02:11,306 - compiler.statements.create_parser - DEBUG - Table Name Found: users
2025-05-05 04:02:11,306 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = users, position = 13)
2025-05-05 04:02:11,306 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 19)
2025-05-05 04:02:11,306 - compiler.statements.create_parser - DEBUG - Parsing Columns.....

2025-05-05 04:02:11,306 - compiler.statements.create_parser - DEBUG - Column Found: id
2025-05-05 04:02:11,306 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = id, position = 20)
2025-05-05 04:02:11,306 - compiler.statements.create_parser - DEBUG - Column Type: INT
2025-05-05 04:02:11,306 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INT, position = 23)
2025-05-05 04:02:11,306 - compiler.statements.create_parser - DEBUG - Found ',' moving to next column....
2025-05-05 04:02:11,306 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 26)
2025-05-05 04:02:11,306 - compiler.statements.create_parser - DEBUG - Column Found: name
2025-05-05 04:02:11,306 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = name, position = 28)
2025-05-05 04:02:11,306 - compiler.statements.create_parser - DEBUG - Column Type: TEXT
2025-05-05 04:02:11,306 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = TEXT, position = 33)
2025-05-05 04:02:11,306 - compiler.statements.create_parser - DEBUG - Found ',' moving to next column....
2025-05-05 04:02:11,306 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 37)
2025-05-05 04:02:11,306 - compiler.statements.create_parser - DEBUG - Column Found: age
2025-05-05 04:02:11,306 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = age, position = 39)
2025-05-05 04:02:11,306 - compiler.statements.create_parser - DEBUG - Column Type: INT
2025-05-05 04:02:11,306 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INT, position = 43)
2025-05-05 04:02:11,306 - compiler.statements.create_parser - DEBUG - Found ')' moving to next column....
2025-05-05 04:02:11,306 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 46)
2025-05-05 04:02:11,306 - compiler.statements.create_parser - INFO - CREATE TABLE parsed successfully with columns: [('id', 'INT'), ('name', 'TEXT'), ('age', 'INT')]
2025-05-05 04:02:11,315 - compiler.code_generator - DEBUG - Accessing columns and Table Name....
2025-05-05 04:02:11,315 - compiler.code_generator - INFO - Accessing Columns and Table Name finished....
2025-05-05 04:02:38,786 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = users, position = 12), Token(type = LPAREN, value = (, position = 18), Token(type = IDENTIFIER, value = id, position = 19), Token(type = COMMA, value = ,, position = 21), Token(type = IDENTIFIER, value = name, position = 23), Token(type = COMMA, value = ,, position = 27), Token(type = IDENTIFIER, value = age, position = 29), Token(type = RPAREN, value = ), position = 32), Token(type = KEYWORD, value = VALUES, position = 34), Token(type = LPAREN, value = (, position = 41), Token(type = NUMBER, value = 1, position = 42), Token(type = COMMA, value = ,, position = 43), Token(type = QUOTE, value = ', position = 45), Token(type = IDENTIFIER, value = John, position = 46), Token(type = IDENTIFIER, value = Doe, position = 51), Token(type = QUOTE, value = ', position = 54), Token(type = COMMA, value = ,, position = 55), Token(type = NUMBER, value = 30, position = 57), Token(type = RPAREN, value = ), position = 59), Token(type = SEMICOLON, value = ;, position = 60)]
2025-05-05 04:02:38,790 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-05 04:02:38,790 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-05 04:02:38,790 - compiler.parser - DEBUG - Found table name: users
2025-05-05 04:02:38,790 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = users, position = 12)
2025-05-05 04:03:04,095 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = DELETE, position = 0), Token(type = KEYWORD, value = FROM, position = 7), Token(type = IDENTIFIER, value = users, position = 12), Token(type = KEYWORD, value = WHERE, position = 18), Token(type = IDENTIFIER, value = id, position = 24), Token(type = EQUALS, value = =, position = 27), Token(type = NUMBER, value = 1, position = 29), Token(type = SEMICOLON, value = ;, position = 30)]
2025-05-05 04:03:04,095 - compiler.statements.delete_parser - INFO - Parsing DELETE statement....
2025-05-05 04:03:04,095 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = DELETE, position = 0)
2025-05-05 04:03:04,095 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 7)
2025-05-05 04:03:04,095 - compiler.parser - DEBUG - Found table name: users
2025-05-05 04:03:04,095 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = users, position = 12)
2025-05-05 04:03:04,095 - compiler.statements.delete_parser - DEBUG - DELETE FROM: users
2025-05-05 04:03:04,095 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = WHERE, position = 18)
2025-05-05 04:04:10,774 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = DELETE, position = 0), Token(type = KEYWORD, value = FROM, position = 7), Token(type = IDENTIFIER, value = users, position = 12), Token(type = KEYWORD, value = WHERE, position = 18), Token(type = IDENTIFIER, value = id, position = 24), Token(type = EQUALS, value = =, position = 27), Token(type = NUMBER, value = 1, position = 29), Token(type = SEMICOLON, value = ;, position = 30)]
2025-05-05 04:04:10,776 - compiler.statements.delete_parser - INFO - Parsing DELETE statement....
2025-05-05 04:04:10,776 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = DELETE, position = 0)
2025-05-05 04:04:10,776 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 7)
2025-05-05 04:04:10,776 - compiler.parser - DEBUG - Found table name: users
2025-05-05 04:04:10,776 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = users, position = 12)
2025-05-05 04:04:10,776 - compiler.statements.delete_parser - DEBUG - DELETE FROM: users
2025-05-05 04:04:10,776 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = WHERE, position = 18)
2025-05-05 04:04:10,776 - compiler.parser - DEBUG - Parsing WHERE condition....
2025-05-05 04:04:10,776 - compiler.parser - DEBUG - Column Found: id
2025-05-05 04:04:10,776 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = id, position = 24)
2025-05-05 04:04:10,776 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 27)
2025-05-05 04:04:10,776 - compiler.parser - DEBUG - Value Found: 1
2025-05-05 04:04:10,776 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 1, position = 29)
2025-05-05 04:04:10,776 - compiler.statements.delete_parser - DEBUG - WHERE condition: {'column': 'id', 'value': '1'}
2025-05-05 04:04:10,776 - compiler.statements.delete_parser - INFO - DELETE parsed: table = users, WHERE condition = {'column': 'id', 'value': '1'}
2025-05-05 04:06:38,289 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = DELETE, position = 0), Token(type = KEYWORD, value = FROM, position = 7), Token(type = IDENTIFIER, value = users, position = 12), Token(type = KEYWORD, value = WHERE, position = 18), Token(type = IDENTIFIER, value = id, position = 24), Token(type = EQUALS, value = =, position = 27), Token(type = NUMBER, value = 1, position = 29), Token(type = SEMICOLON, value = ;, position = 30)]
2025-05-05 04:06:38,291 - compiler.statements.delete_parser - INFO - Parsing DELETE statement....
2025-05-05 04:06:38,291 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = DELETE, position = 0)
2025-05-05 04:06:38,291 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 7)
2025-05-05 04:06:38,291 - compiler.parser - DEBUG - Found table name: users
2025-05-05 04:06:38,294 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = users, position = 12)
2025-05-05 04:06:38,294 - compiler.statements.delete_parser - DEBUG - DELETE FROM: users
2025-05-05 04:06:38,294 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = WHERE, position = 18)
2025-05-05 04:06:38,294 - compiler.parser - DEBUG - Parsing WHERE condition....
2025-05-05 04:06:38,294 - compiler.parser - DEBUG - Column Found: id
2025-05-05 04:06:38,294 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = id, position = 24)
2025-05-05 04:06:38,294 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 27)
2025-05-05 04:06:38,294 - compiler.parser - DEBUG - Value Found: 1
2025-05-05 04:06:38,294 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 1, position = 29)
2025-05-05 04:06:38,294 - compiler.statements.delete_parser - DEBUG - WHERE condition: {'column': 'id', 'value': '1'}
2025-05-05 04:06:38,294 - compiler.statements.delete_parser - INFO - DELETE parsed: table = users, WHERE condition = {'column': 'id', 'value': '1'}
2025-05-05 04:07:14,225 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = DELETE, position = 0), Token(type = KEYWORD, value = FROM, position = 7), Token(type = IDENTIFIER, value = users, position = 12), Token(type = KEYWORD, value = WHERE, position = 18), Token(type = IDENTIFIER, value = id, position = 24), Token(type = EQUALS, value = =, position = 27), Token(type = NUMBER, value = 1, position = 29), Token(type = SEMICOLON, value = ;, position = 30)]
2025-05-05 04:07:14,228 - compiler.statements.delete_parser - INFO - Parsing DELETE statement....
2025-05-05 04:07:14,228 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = DELETE, position = 0)
2025-05-05 04:07:14,228 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 7)
2025-05-05 04:07:14,228 - compiler.parser - DEBUG - Parsing table name....
2025-05-05 04:07:14,229 - compiler.parser - DEBUG - Table Name Found: users
2025-05-05 04:07:14,229 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = users, position = 12)
2025-05-05 04:07:14,229 - compiler.statements.delete_parser - DEBUG - DELETE FROM: users
2025-05-05 04:07:14,229 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = WHERE, position = 18)
2025-05-05 04:07:14,229 - compiler.parser - DEBUG - Parsing WHERE condition....
2025-05-05 04:07:14,229 - compiler.parser - DEBUG - Column Found: id
2025-05-05 04:07:14,229 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = id, position = 24)
2025-05-05 04:07:14,229 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 27)
2025-05-05 04:07:14,229 - compiler.parser - DEBUG - Value Found: 1
2025-05-05 04:07:14,229 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 1, position = 29)
2025-05-05 04:07:14,229 - compiler.statements.delete_parser - DEBUG - WHERE condition: {'column': 'id', 'value': '1'}
2025-05-05 04:07:14,229 - compiler.statements.delete_parser - INFO - DELETE parsed: table = users, WHERE condition = {'column': 'id', 'value': '1'}
2025-05-05 04:10:47,846 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = DELETE, position = 0), Token(type = KEYWORD, value = FROM, position = 7), Token(type = IDENTIFIER, value = users, position = 12), Token(type = KEYWORD, value = WHERE, position = 18), Token(type = IDENTIFIER, value = id, position = 24), Token(type = EQUALS, value = =, position = 27), Token(type = NUMBER, value = 1, position = 29), Token(type = SEMICOLON, value = ;, position = 30)]
2025-05-05 04:10:47,849 - compiler.statements.delete_parser - INFO - Parsing DELETE statement....
2025-05-05 04:10:47,849 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = DELETE, position = 0)
2025-05-05 04:10:47,849 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 7)
2025-05-05 04:10:47,849 - compiler.parser - DEBUG - Parsing table name....
2025-05-05 04:10:47,849 - compiler.parser - DEBUG - Table Name Found: users
2025-05-05 04:10:47,849 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = users, position = 12)
2025-05-05 04:10:47,849 - compiler.statements.delete_parser - DEBUG - DELETE FROM: users
2025-05-05 04:10:47,849 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = WHERE, position = 18)
2025-05-05 04:10:47,849 - compiler.parser - DEBUG - Parsing WHERE condition....
2025-05-05 04:10:47,849 - compiler.parser - DEBUG - Column Found: id
2025-05-05 04:10:47,849 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = id, position = 24)
2025-05-05 04:10:47,849 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 27)
2025-05-05 04:10:47,849 - compiler.parser - DEBUG - Value Found: 1
2025-05-05 04:10:47,849 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 1, position = 29)
2025-05-05 04:10:47,849 - compiler.statements.delete_parser - DEBUG - WHERE condition: {'column': 'id', 'value': '1'}
2025-05-05 04:10:47,849 - compiler.statements.delete_parser - INFO - DELETE parsed: table = users, WHERE condition = {'column': 'id', 'value': '1'}
2025-05-05 04:12:29,639 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = DELETE, position = 0), Token(type = KEYWORD, value = FROM, position = 7), Token(type = IDENTIFIER, value = users, position = 12), Token(type = KEYWORD, value = WHERE, position = 18), Token(type = IDENTIFIER, value = id, position = 24), Token(type = EQUALS, value = =, position = 27), Token(type = NUMBER, value = 1, position = 29), Token(type = SEMICOLON, value = ;, position = 30)]
2025-05-05 04:12:29,643 - compiler.statements.delete_parser - INFO - Parsing DELETE statement....
2025-05-05 04:12:29,644 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = DELETE, position = 0)
2025-05-05 04:12:29,644 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 7)
2025-05-05 04:12:29,644 - compiler.statements.delete_parser - DEBUG - Token before table_name: Token(type = IDENTIFIER, value = users, position = 12)
2025-05-05 04:12:29,644 - compiler.parser - DEBUG - Parsing table name....
2025-05-05 04:12:29,644 - compiler.parser - DEBUG - Table Name Found: users
2025-05-05 04:12:29,644 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = users, position = 12)
2025-05-05 04:12:29,644 - compiler.statements.delete_parser - DEBUG - DELETE FROM: users
2025-05-05 04:12:29,644 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = WHERE, position = 18)
2025-05-05 04:12:29,644 - compiler.parser - DEBUG - Parsing WHERE condition....
2025-05-05 04:12:29,644 - compiler.parser - DEBUG - Column Found: id
2025-05-05 04:12:29,644 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = id, position = 24)
2025-05-05 04:12:29,644 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 27)
2025-05-05 04:12:29,644 - compiler.parser - DEBUG - Value Found: 1
2025-05-05 04:12:29,644 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 1, position = 29)
2025-05-05 04:12:29,644 - compiler.statements.delete_parser - DEBUG - WHERE condition: {'column': 'id', 'value': '1'}
2025-05-05 04:12:29,644 - compiler.statements.delete_parser - INFO - DELETE parsed: table = users, WHERE condition = {'column': 'id', 'value': '1'}
2025-05-05 04:15:56,814 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = DELETE, position = 0), Token(type = KEYWORD, value = FROM, position = 7), Token(type = IDENTIFIER, value = users, position = 12), Token(type = KEYWORD, value = WHERE, position = 18), Token(type = IDENTIFIER, value = id, position = 24), Token(type = EQUALS, value = =, position = 27), Token(type = NUMBER, value = 1, position = 29), Token(type = SEMICOLON, value = ;, position = 30)]
2025-05-05 04:15:56,817 - compiler.statements.delete_parser - INFO - Parsing DELETE statement....
2025-05-05 04:15:56,817 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = DELETE, position = 0)
2025-05-05 04:15:56,817 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 7)
2025-05-05 04:15:56,817 - compiler.statements.delete_parser - DEBUG - Token before table_name: Token(type = IDENTIFIER, value = users, position = 12)
2025-05-05 04:15:56,817 - compiler.parser - DEBUG - Parsing table name....
2025-05-05 04:15:56,817 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = users, position = 12)
2025-05-05 04:15:56,817 - compiler.parser - DEBUG - Table Name Found: users
2025-05-05 04:15:56,817 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = users, position = 12)
2025-05-05 04:15:56,817 - compiler.statements.delete_parser - DEBUG - DELETE FROM: users
2025-05-05 04:15:56,817 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = WHERE, position = 18)
2025-05-05 04:15:56,817 - compiler.parser - DEBUG - Parsing WHERE condition....
2025-05-05 04:15:56,817 - compiler.parser - DEBUG - Column Found: id
2025-05-05 04:15:56,817 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = id, position = 24)
2025-05-05 04:15:56,817 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 27)
2025-05-05 04:15:56,817 - compiler.parser - DEBUG - Value Found: 1
2025-05-05 04:15:56,817 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 1, position = 29)
2025-05-05 04:15:56,817 - compiler.statements.delete_parser - DEBUG - WHERE condition: {'column': 'id', 'value': '1'}
2025-05-05 04:15:56,817 - compiler.statements.delete_parser - INFO - DELETE parsed: table = users, WHERE condition = {'column': 'id', 'value': '1'}
2025-05-05 04:19:08,829 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = users, position = 12), Token(type = LPAREN, value = (, position = 18), Token(type = IDENTIFIER, value = id, position = 19), Token(type = COMMA, value = ,, position = 21), Token(type = IDENTIFIER, value = name, position = 23), Token(type = COMMA, value = ,, position = 27), Token(type = IDENTIFIER, value = age, position = 29), Token(type = RPAREN, value = ), position = 32), Token(type = KEYWORD, value = VALUES, position = 34), Token(type = LPAREN, value = (, position = 41), Token(type = NUMBER, value = 1, position = 42), Token(type = COMMA, value = ,, position = 43), Token(type = QUOTE, value = ', position = 45), Token(type = IDENTIFIER, value = John, position = 46), Token(type = IDENTIFIER, value = Doe, position = 51), Token(type = QUOTE, value = ', position = 54), Token(type = COMMA, value = ,, position = 55), Token(type = NUMBER, value = 30, position = 57), Token(type = RPAREN, value = ), position = 59), Token(type = SEMICOLON, value = ;, position = 60)]
2025-05-05 04:19:08,841 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-05 04:19:08,841 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-05 04:19:08,841 - compiler.parser - DEBUG - Parsing table name....
2025-05-05 04:19:08,841 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = users, position = 12)
2025-05-05 04:19:08,841 - compiler.parser - DEBUG - Table Name Found: users
2025-05-05 04:19:08,841 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = users, position = 12)
2025-05-05 04:19:15,243 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = DELETE, position = 0), Token(type = KEYWORD, value = FROM, position = 7), Token(type = IDENTIFIER, value = users, position = 12), Token(type = KEYWORD, value = WHERE, position = 18), Token(type = IDENTIFIER, value = id, position = 24), Token(type = EQUALS, value = =, position = 27), Token(type = NUMBER, value = 1, position = 29), Token(type = SEMICOLON, value = ;, position = 30)]
2025-05-05 04:19:15,245 - compiler.statements.delete_parser - INFO - Parsing DELETE statement....
2025-05-05 04:19:15,245 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = DELETE, position = 0)
2025-05-05 04:19:15,245 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 7)
2025-05-05 04:19:15,245 - compiler.statements.delete_parser - DEBUG - Token before table_name: Token(type = IDENTIFIER, value = users, position = 12)
2025-05-05 04:19:15,247 - compiler.parser - DEBUG - Parsing table name....
2025-05-05 04:19:15,247 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = users, position = 12)
2025-05-05 04:19:15,247 - compiler.parser - DEBUG - Table Name Found: users
2025-05-05 04:19:15,247 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = users, position = 12)
2025-05-05 04:19:15,247 - compiler.statements.delete_parser - DEBUG - DELETE FROM: users
2025-05-05 04:19:15,247 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = WHERE, position = 18)
2025-05-05 04:19:15,247 - compiler.parser - DEBUG - Parsing WHERE condition....
2025-05-05 04:19:15,247 - compiler.parser - DEBUG - Column Found: id
2025-05-05 04:19:15,247 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = id, position = 24)
2025-05-05 04:19:15,247 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 27)
2025-05-05 04:19:15,247 - compiler.parser - DEBUG - Value Found: 1
2025-05-05 04:19:15,247 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 1, position = 29)
2025-05-05 04:19:15,247 - compiler.statements.delete_parser - DEBUG - WHERE condition: {'column': 'id', 'value': '1'}
2025-05-05 04:19:15,247 - compiler.statements.delete_parser - INFO - DELETE parsed: table = users, WHERE condition = {'column': 'id', 'value': '1'}
2025-05-05 04:19:20,083 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = CREATE, position = 0), Token(type = KEYWORD, value = TABLE, position = 7), Token(type = IDENTIFIER, value = users, position = 13), Token(type = LPAREN, value = (, position = 19), Token(type = IDENTIFIER, value = id, position = 20), Token(type = KEYWORD, value = INT, position = 23), Token(type = COMMA, value = ,, position = 26), Token(type = IDENTIFIER, value = name, position = 28), Token(type = KEYWORD, value = TEXT, position = 33), Token(type = COMMA, value = ,, position = 37), Token(type = IDENTIFIER, value = age, position = 39), Token(type = KEYWORD, value = INT, position = 43), Token(type = RPAREN, value = ), position = 46), Token(type = SEMICOLON, value = ;, position = 47)]
2025-05-05 04:19:20,092 - compiler.statements.create_parser - INFO - Parsing Create Table.... 

2025-05-05 04:19:20,092 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = CREATE, position = 0)
2025-05-05 04:19:20,092 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = TABLE, position = 7)
2025-05-05 04:19:20,092 - compiler.statements.create_parser - DEBUG - Table Name Found: users
2025-05-05 04:19:20,092 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = users, position = 13)
2025-05-05 04:19:20,092 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 19)
2025-05-05 04:19:20,092 - compiler.statements.create_parser - DEBUG - Parsing Columns.....

2025-05-05 04:19:20,092 - compiler.statements.create_parser - DEBUG - Column Found: id
2025-05-05 04:19:20,092 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = id, position = 20)
2025-05-05 04:19:20,092 - compiler.statements.create_parser - DEBUG - Column Type: INT
2025-05-05 04:19:20,092 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INT, position = 23)
2025-05-05 04:19:20,092 - compiler.statements.create_parser - DEBUG - Found ',' moving to next column....
2025-05-05 04:19:20,092 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 26)
2025-05-05 04:19:20,092 - compiler.statements.create_parser - DEBUG - Column Found: name
2025-05-05 04:19:20,092 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = name, position = 28)
2025-05-05 04:19:20,092 - compiler.statements.create_parser - DEBUG - Column Type: TEXT
2025-05-05 04:19:20,092 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = TEXT, position = 33)
2025-05-05 04:19:20,092 - compiler.statements.create_parser - DEBUG - Found ',' moving to next column....
2025-05-05 04:19:20,092 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 37)
2025-05-05 04:19:20,092 - compiler.statements.create_parser - DEBUG - Column Found: age
2025-05-05 04:19:20,092 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = age, position = 39)
2025-05-05 04:19:20,092 - compiler.statements.create_parser - DEBUG - Column Type: INT
2025-05-05 04:19:20,092 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INT, position = 43)
2025-05-05 04:19:20,092 - compiler.statements.create_parser - DEBUG - Found ')' moving to next column....
2025-05-05 04:19:20,092 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 46)
2025-05-05 04:19:20,092 - compiler.statements.create_parser - INFO - CREATE TABLE parsed successfully with columns: [('id', 'INT'), ('name', 'TEXT'), ('age', 'INT')]
2025-05-05 04:19:20,094 - compiler.code_generator - DEBUG - Accessing columns and Table Name....
2025-05-05 04:19:20,095 - compiler.code_generator - INFO - Accessing Columns and Table Name finished....
2025-05-05 04:19:34,000 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = DROP, position = 0), Token(type = IDENTIFIER, value = pinchu, position = 5)]
2025-05-05 04:19:34,001 - compiler.statements.drop_parser - INFO - Parsing DROP statement....
2025-05-05 04:19:34,001 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = DROP, position = 0)
2025-05-05 04:19:34,001 - compiler.statements.drop_parser - ERROR - Expected 'TABLE' after DROP
2025-05-05 04:19:43,484 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = DROP, position = 0), Token(type = IDENTIFIER, value = pinchu, position = 5), Token(type = SEMICOLON, value = ;, position = 11)]
2025-05-05 04:19:43,486 - compiler.statements.drop_parser - INFO - Parsing DROP statement....
2025-05-05 04:19:43,486 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = DROP, position = 0)
2025-05-05 04:19:43,487 - compiler.statements.drop_parser - ERROR - Expected 'TABLE' after DROP
2025-05-05 04:20:53,803 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = DROP, position = 0), Token(type = IDENTIFIER, value = pinchu, position = 5), Token(type = SEMICOLON, value = ;, position = 11)]
2025-05-05 04:20:53,805 - compiler.statements.drop_parser - INFO - Parsing DROP statement....
2025-05-05 04:20:53,805 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = DROP, position = 0)
2025-05-05 04:20:53,805 - compiler.statements.drop_parser - DEBUG - Dropped Entity: pinchu
2025-05-05 04:20:53,805 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = pinchu, position = 5)
2025-05-05 04:20:53,806 - compiler.statements.drop_parser - INFO - DROP parsed: entity = pinchu
2025-05-05 04:24:45,509 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = DROP, position = 0), Token(type = IDENTIFIER, value = pinchu, position = 5), Token(type = SEMICOLON, value = ;, position = 11)]
2025-05-05 04:24:45,511 - compiler.statements.drop_parser - INFO - Parsing DROP statement....
2025-05-05 04:24:45,511 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = DROP, position = 0)
2025-05-05 04:24:45,511 - compiler.statements.drop_parser - DEBUG - Dropped Entity: pinchu
2025-05-05 04:24:45,511 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = pinchu, position = 5)
2025-05-05 04:24:45,511 - compiler.statements.drop_parser - INFO - DROP parsed: entity = pinchu
2025-05-05 04:25:05,795 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = DELETE, position = 0), Token(type = KEYWORD, value = FROM, position = 7), Token(type = IDENTIFIER, value = users, position = 12), Token(type = KEYWORD, value = WHERE, position = 18), Token(type = IDENTIFIER, value = id, position = 24), Token(type = EQUALS, value = =, position = 27), Token(type = NUMBER, value = 1, position = 29), Token(type = SEMICOLON, value = ;, position = 30)]
2025-05-05 04:25:05,799 - compiler.statements.delete_parser - INFO - Parsing DELETE statement....
2025-05-05 04:25:05,799 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = DELETE, position = 0)
2025-05-05 04:25:05,799 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 7)
2025-05-05 04:25:05,799 - compiler.statements.delete_parser - DEBUG - Token before table_name: Token(type = IDENTIFIER, value = users, position = 12)
2025-05-05 04:25:05,799 - compiler.parser - DEBUG - Parsing table name....
2025-05-05 04:25:05,799 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = users, position = 12)
2025-05-05 04:25:05,799 - compiler.parser - DEBUG - Table Name Found: users
2025-05-05 04:25:05,799 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = users, position = 12)
2025-05-05 04:25:05,799 - compiler.statements.delete_parser - DEBUG - DELETE FROM: users
2025-05-05 04:25:05,800 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = WHERE, position = 18)
2025-05-05 04:25:05,800 - compiler.parser - DEBUG - Parsing WHERE condition....
2025-05-05 04:25:05,800 - compiler.parser - DEBUG - Column Found: id
2025-05-05 04:25:05,800 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = id, position = 24)
2025-05-05 04:25:05,800 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 27)
2025-05-05 04:25:05,800 - compiler.parser - DEBUG - Value Found: 1
2025-05-05 04:25:05,800 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 1, position = 29)
2025-05-05 04:25:05,800 - compiler.statements.delete_parser - DEBUG - WHERE condition: {'column': 'id', 'value': '1'}
2025-05-05 04:25:05,800 - compiler.statements.delete_parser - INFO - DELETE parsed: table = users, WHERE condition = {'column': 'id', 'value': '1'}
2025-05-05 04:25:18,931 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = users, position = 12), Token(type = LPAREN, value = (, position = 18), Token(type = IDENTIFIER, value = id, position = 19), Token(type = COMMA, value = ,, position = 21), Token(type = IDENTIFIER, value = name, position = 23), Token(type = COMMA, value = ,, position = 27), Token(type = IDENTIFIER, value = age, position = 29), Token(type = RPAREN, value = ), position = 32), Token(type = KEYWORD, value = VALUES, position = 34), Token(type = LPAREN, value = (, position = 41), Token(type = NUMBER, value = 1, position = 42), Token(type = COMMA, value = ,, position = 43), Token(type = QUOTE, value = ', position = 45), Token(type = IDENTIFIER, value = John, position = 46), Token(type = IDENTIFIER, value = Doe, position = 51), Token(type = QUOTE, value = ', position = 54), Token(type = COMMA, value = ,, position = 55), Token(type = NUMBER, value = 30, position = 57), Token(type = RPAREN, value = ), position = 59), Token(type = SEMICOLON, value = ;, position = 60)]
2025-05-05 04:25:18,938 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-05 04:25:18,939 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-05 04:25:18,939 - compiler.parser - DEBUG - Parsing table name....
2025-05-05 04:25:18,939 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = users, position = 12)
2025-05-05 04:25:18,939 - compiler.parser - DEBUG - Table Name Found: users
2025-05-05 04:25:18,939 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = users, position = 12)
2025-05-05 04:26:12,927 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = SET, position = 16), Token(type = IDENTIFIER, value = price, position = 20), Token(type = EQUALS, value = =, position = 26), Token(type = NUMBER, value = 2.00, position = 28), Token(type = KEYWORD, value = WHERE, position = 33), Token(type = IDENTIFIER, value = product_id, position = 39), Token(type = EQUALS, value = =, position = 50), Token(type = NUMBER, value = 101, position = 52), Token(type = SEMICOLON, value = ;, position = 55)]
2025-05-05 04:26:12,934 - compiler.statements.update_parser - INFO - Parsing UPDATE statement...
2025-05-05 04:26:12,934 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-05 04:26:12,934 - compiler.parser - DEBUG - Parsing table name....
2025-05-05 04:26:12,934 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = products, position = 7)
2025-05-05 04:26:12,934 - compiler.parser - DEBUG - Table Name Found: products
2025-05-05 04:26:12,934 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 7)
2025-05-05 04:26:12,934 - compiler.statements.update_parser - DEBUG - UPDATE table: products
2025-05-05 04:26:12,934 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SET, position = 16)
2025-05-05 04:28:38,164 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = SET, position = 16), Token(type = IDENTIFIER, value = price, position = 20), Token(type = EQUALS, value = =, position = 26), Token(type = NUMBER, value = 2.00, position = 28), Token(type = KEYWORD, value = WHERE, position = 33), Token(type = IDENTIFIER, value = product_id, position = 39), Token(type = EQUALS, value = =, position = 50), Token(type = NUMBER, value = 101, position = 52), Token(type = SEMICOLON, value = ;, position = 55)]
2025-05-05 04:28:38,166 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-05 04:29:33,704 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = SET, position = 16), Token(type = IDENTIFIER, value = price, position = 20), Token(type = EQUALS, value = =, position = 26), Token(type = NUMBER, value = 2.00, position = 28), Token(type = KEYWORD, value = WHERE, position = 33), Token(type = IDENTIFIER, value = product_id, position = 39), Token(type = EQUALS, value = =, position = 50), Token(type = NUMBER, value = 101, position = 52), Token(type = SEMICOLON, value = ;, position = 55)]
2025-05-05 04:29:33,709 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-05 04:30:50,991 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = SET, position = 16), Token(type = IDENTIFIER, value = price, position = 20), Token(type = EQUALS, value = =, position = 26), Token(type = NUMBER, value = 2.00, position = 28), Token(type = KEYWORD, value = WHERE, position = 33), Token(type = IDENTIFIER, value = product_id, position = 39), Token(type = EQUALS, value = =, position = 50), Token(type = NUMBER, value = 101, position = 52), Token(type = SEMICOLON, value = ;, position = 55)]
2025-05-05 04:30:50,995 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-05 04:32:51,700 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = SET, position = 16), Token(type = IDENTIFIER, value = price, position = 20), Token(type = EQUALS, value = =, position = 26), Token(type = NUMBER, value = 2.00, position = 28), Token(type = KEYWORD, value = WHERE, position = 33), Token(type = IDENTIFIER, value = product_id, position = 39), Token(type = EQUALS, value = =, position = 50), Token(type = NUMBER, value = 101, position = 52), Token(type = SEMICOLON, value = ;, position = 55)]
2025-05-05 04:32:51,706 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-05 04:33:26,947 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = SET, position = 16), Token(type = IDENTIFIER, value = price, position = 20), Token(type = EQUALS, value = =, position = 26), Token(type = NUMBER, value = 2.00, position = 28), Token(type = KEYWORD, value = WHERE, position = 33), Token(type = IDENTIFIER, value = product_id, position = 39), Token(type = EQUALS, value = =, position = 50), Token(type = NUMBER, value = 101, position = 52), Token(type = SEMICOLON, value = ;, position = 55)]
2025-05-05 04:33:26,955 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-05 04:33:45,766 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = SET, position = 16), Token(type = IDENTIFIER, value = price, position = 20), Token(type = EQUALS, value = =, position = 26), Token(type = NUMBER, value = 2.00, position = 28), Token(type = KEYWORD, value = WHERE, position = 33), Token(type = IDENTIFIER, value = product_id, position = 39), Token(type = EQUALS, value = =, position = 50), Token(type = NUMBER, value = 101, position = 52), Token(type = SEMICOLON, value = ;, position = 55)]
2025-05-05 04:33:45,774 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-05 04:33:57,925 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = SET, position = 16), Token(type = IDENTIFIER, value = price, position = 20), Token(type = EQUALS, value = =, position = 26), Token(type = NUMBER, value = 2.00, position = 28), Token(type = KEYWORD, value = WHERE, position = 33), Token(type = IDENTIFIER, value = product_id, position = 39), Token(type = EQUALS, value = =, position = 50), Token(type = NUMBER, value = 101, position = 52), Token(type = SEMICOLON, value = ;, position = 55)]
2025-05-05 04:33:57,932 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-05 04:34:38,228 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = SET, position = 16), Token(type = IDENTIFIER, value = price, position = 20), Token(type = EQUALS, value = =, position = 26), Token(type = NUMBER, value = 2.00, position = 28), Token(type = KEYWORD, value = WHERE, position = 33), Token(type = IDENTIFIER, value = product_id, position = 39), Token(type = EQUALS, value = =, position = 50), Token(type = NUMBER, value = 101, position = 52), Token(type = SEMICOLON, value = ;, position = 55)]
2025-05-05 04:34:38,234 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-05 04:37:06,765 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = SET, position = 16), Token(type = IDENTIFIER, value = price, position = 20), Token(type = EQUALS, value = =, position = 26), Token(type = NUMBER, value = 2.00, position = 28), Token(type = KEYWORD, value = WHERE, position = 33), Token(type = IDENTIFIER, value = product_id, position = 39), Token(type = EQUALS, value = =, position = 50), Token(type = NUMBER, value = 101, position = 52), Token(type = SEMICOLON, value = ;, position = 55)]
2025-05-05 04:37:06,774 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-05 04:37:23,696 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = SET, position = 16), Token(type = IDENTIFIER, value = price, position = 20), Token(type = EQUALS, value = =, position = 26), Token(type = NUMBER, value = 2.00, position = 28), Token(type = KEYWORD, value = WHERE, position = 33), Token(type = IDENTIFIER, value = product_id, position = 39), Token(type = EQUALS, value = =, position = 50), Token(type = NUMBER, value = 101, position = 52), Token(type = SEMICOLON, value = ;, position = 55)]
2025-05-05 04:37:23,704 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-05 04:37:23,704 - compiler.statements.update_parser - ERROR - Unexpected token after UPDATE: Token(type = KEYWORD, value = SET, position = 16)
2025-05-05 04:39:27,987 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = SET, position = 16), Token(type = IDENTIFIER, value = price, position = 20), Token(type = EQUALS, value = =, position = 26), Token(type = NUMBER, value = 2.00, position = 28), Token(type = KEYWORD, value = WHERE, position = 33), Token(type = IDENTIFIER, value = product_id, position = 39), Token(type = EQUALS, value = =, position = 50), Token(type = NUMBER, value = 101, position = 52), Token(type = SEMICOLON, value = ;, position = 55)]
2025-05-05 04:39:27,993 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-05 04:40:30,711 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = SET, position = 16), Token(type = IDENTIFIER, value = price, position = 20), Token(type = EQUALS, value = =, position = 26), Token(type = NUMBER, value = 2.00, position = 28), Token(type = KEYWORD, value = WHERE, position = 33), Token(type = IDENTIFIER, value = product_id, position = 39), Token(type = EQUALS, value = =, position = 50), Token(type = NUMBER, value = 101, position = 52), Token(type = SEMICOLON, value = ;, position = 55)]
2025-05-05 04:40:30,717 - compiler.statements.update_parser - DEBUG - Starting to parse UPDATE statement...
2025-05-05 04:40:30,717 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-05 04:40:30,717 - compiler.statements.update_parser - DEBUG - Moved past UPDATE token.
2025-05-05 04:40:30,717 - compiler.statements.update_parser - DEBUG - Current token after UPDATE: Token(type = KEYWORD, value = SET, position = 16)
2025-05-05 04:40:30,717 - compiler.statements.update_parser - ERROR - Expected table name after UPDATE.
2025-05-05 04:41:23,136 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = SET, position = 16), Token(type = IDENTIFIER, value = price, position = 20), Token(type = EQUALS, value = =, position = 26), Token(type = NUMBER, value = 2.00, position = 28), Token(type = KEYWORD, value = WHERE, position = 33), Token(type = IDENTIFIER, value = product_id, position = 39), Token(type = EQUALS, value = =, position = 50), Token(type = NUMBER, value = 101, position = 52), Token(type = SEMICOLON, value = ;, position = 55)]
2025-05-05 04:41:23,137 - compiler.statements.update_parser - DEBUG - Starting to parse UPDATE statement...
2025-05-05 04:41:23,142 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-05 04:41:23,142 - compiler.statements.update_parser - DEBUG - Current token after UPDATE: Token(type = KEYWORD, value = SET, position = 16)
2025-05-05 04:41:23,142 - compiler.statements.update_parser - ERROR - Expected table name after UPDATE.

x
2025-05-05 04:44:34,646 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = SET, position = 16), Token(type = IDENTIFIER, value = price, position = 20), Token(type = EQUALS, value = =, position = 26), Token(type = NUMBER, value = 2.00, position = 28), Token(type = KEYWORD, value = WHERE, position = 33), Token(type = IDENTIFIER, value = product_id, position = 39), Token(type = EQUALS, value = =, position = 50), Token(type = NUMBER, value = 101, position = 52), Token(type = SEMICOLON, value = ;, position = 55)]
2025-05-05 04:44:34,654 - compiler.statements.update_parser - DEBUG - Starting to parse UPDATE statement...
2025-05-05 04:44:34,655 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-05 04:44:34,655 - compiler.statements.update_parser - DEBUG - Current token after UPDATE: Token(type = KEYWORD, value = SET, position = 16)
2025-05-05 04:44:34,655 - compiler.statements.update_parser - ERROR - Expected table name after UPDATE.
2025-05-05 04:45:54,240 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = SET, position = 16), Token(type = IDENTIFIER, value = price, position = 20), Token(type = EQUALS, value = =, position = 26), Token(type = NUMBER, value = 2.00, position = 28), Token(type = KEYWORD, value = WHERE, position = 33), Token(type = IDENTIFIER, value = product_id, position = 39), Token(type = EQUALS, value = =, position = 50), Token(type = NUMBER, value = 101, position = 52), Token(type = SEMICOLON, value = ;, position = 55)]
2025-05-05 04:45:54,248 - compiler.statements.update_parser - DEBUG - Starting to parse UPDATE statement...
2025-05-05 04:45:54,249 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-05 04:45:54,250 - compiler.statements.update_parser - DEBUG - Current token after UPDATE: Token(type = KEYWORD, value = SET, position = 16)
2025-05-05 04:45:54,250 - compiler.statements.update_parser - ERROR - Expected table name after UPDATE.
2025-05-05 04:46:28,490 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = SET, position = 16), Token(type = IDENTIFIER, value = price, position = 20), Token(type = EQUALS, value = =, position = 26), Token(type = NUMBER, value = 2.00, position = 28), Token(type = KEYWORD, value = WHERE, position = 33), Token(type = IDENTIFIER, value = product_id, position = 39), Token(type = EQUALS, value = =, position = 50), Token(type = NUMBER, value = 101, position = 52), Token(type = SEMICOLON, value = ;, position = 55)]
2025-05-05 04:46:28,494 - compiler.statements.update_parser - INFO - Parsing UPDATE statement...
2025-05-05 04:46:28,494 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-05 04:46:28,495 - compiler.statements.update_parser - DEBUG - Table name identified: products
2025-05-05 04:46:28,495 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SET, position = 16)
2025-05-05 04:46:28,495 - compiler.statements.update_parser - DEBUG - SET clause: {}
2025-05-05 04:47:28,962 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = SET, position = 16), Token(type = IDENTIFIER, value = price, position = 20), Token(type = EQUALS, value = =, position = 26), Token(type = NUMBER, value = 2.00, position = 28), Token(type = KEYWORD, value = WHERE, position = 33), Token(type = IDENTIFIER, value = product_id, position = 39), Token(type = EQUALS, value = =, position = 50), Token(type = NUMBER, value = 101, position = 52), Token(type = SEMICOLON, value = ;, position = 55)]
2025-05-05 04:47:28,965 - compiler.statements.update_parser - INFO - Parsing UPDATE statement...
2025-05-05 04:47:28,968 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-05 04:47:28,968 - compiler.statements.update_parser - DEBUG - Table name identified: products
2025-05-05 04:47:28,968 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SET, position = 16)
2025-05-05 04:47:28,968 - compiler.statements.update_parser - DEBUG - SET clause: {}
2025-05-05 04:48:22,938 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = SET, position = 16), Token(type = IDENTIFIER, value = price, position = 20), Token(type = EQUALS, value = =, position = 26), Token(type = NUMBER, value = 2.00, position = 28), Token(type = KEYWORD, value = WHERE, position = 33), Token(type = IDENTIFIER, value = product_id, position = 39), Token(type = EQUALS, value = =, position = 50), Token(type = NUMBER, value = 101, position = 52), Token(type = SEMICOLON, value = ;, position = 55)]
2025-05-05 04:48:22,946 - compiler.statements.update_parser - INFO - Parsing UPDATE statement...
2025-05-05 04:48:22,946 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-05 04:48:22,946 - compiler.statements.update_parser - DEBUG - Table name identified: products
2025-05-05 04:48:22,946 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SET, position = 16)
2025-05-05 04:48:22,946 - compiler.statements.update_parser - DEBUG - SET clause: {}
2025-05-05 04:49:45,352 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = SET, position = 16), Token(type = IDENTIFIER, value = price, position = 20), Token(type = EQUALS, value = =, position = 26), Token(type = NUMBER, value = 2.00, position = 28), Token(type = KEYWORD, value = WHERE, position = 33), Token(type = IDENTIFIER, value = product_id, position = 39), Token(type = EQUALS, value = =, position = 50), Token(type = NUMBER, value = 101, position = 52), Token(type = SEMICOLON, value = ;, position = 55)]
2025-05-05 04:49:45,357 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-05 04:50:18,735 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = SET, position = 16), Token(type = IDENTIFIER, value = price, position = 20), Token(type = EQUALS, value = =, position = 26), Token(type = NUMBER, value = 2.00, position = 28), Token(type = KEYWORD, value = WHERE, position = 33), Token(type = IDENTIFIER, value = product_id, position = 39), Token(type = EQUALS, value = =, position = 50), Token(type = NUMBER, value = 101, position = 52), Token(type = SEMICOLON, value = ;, position = 55)]
2025-05-05 04:50:18,740 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-05 04:50:36,334 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = SET, position = 16), Token(type = IDENTIFIER, value = price, position = 20), Token(type = EQUALS, value = =, position = 26), Token(type = NUMBER, value = 2.00, position = 28), Token(type = KEYWORD, value = WHERE, position = 33), Token(type = IDENTIFIER, value = product_id, position = 39), Token(type = EQUALS, value = =, position = 50), Token(type = NUMBER, value = 101, position = 52), Token(type = SEMICOLON, value = ;, position = 55)]
2025-05-05 04:50:36,335 - compiler.statements.update_parser - INFO - Parsing UPDATE statement...
2025-05-05 04:50:36,335 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-05 04:50:36,335 - compiler.statements.update_parser - DEBUG - Table name identified: products
2025-05-05 04:50:36,341 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SET, position = 16)
2025-05-05 04:50:36,341 - compiler.statements.update_parser - DEBUG - SET clause: {}
2025-05-05 04:50:45,171 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = SET, position = 16), Token(type = IDENTIFIER, value = price, position = 20), Token(type = EQUALS, value = =, position = 26), Token(type = NUMBER, value = 2.00, position = 28), Token(type = KEYWORD, value = WHERE, position = 33), Token(type = IDENTIFIER, value = product_id, position = 39), Token(type = EQUALS, value = =, position = 50), Token(type = NUMBER, value = 101, position = 52), Token(type = SEMICOLON, value = ;, position = 55)]
2025-05-05 04:50:45,175 - compiler.statements.update_parser - INFO - Parsing UPDATE statement...
2025-05-05 04:50:45,177 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-05 04:50:45,177 - compiler.statements.update_parser - DEBUG - Table name identified: products
2025-05-05 04:50:45,177 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SET, position = 16)
2025-05-05 04:50:45,177 - compiler.statements.update_parser - DEBUG - SET clause: {}
2025-05-05 04:52:19,170 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = CREATE, position = 0), Token(type = KEYWORD, value = TABLE, position = 7), Token(type = IDENTIFIER, value = employees, position = 13), Token(type = LPAREN, value = (, position = 23), Token(type = IDENTIFIER, value = employee_id, position = 25), Token(type = KEYWORD, value = INT, position = 37), Token(type = IDENTIFIER, value = PRIMARY, position = 41), Token(type = IDENTIFIER, value = KEY, position = 49), Token(type = COMMA, value = ,, position = 52), Token(type = IDENTIFIER, value = name, position = 54), Token(type = IDENTIFIER, value = VARCHAR, position = 59), Token(type = LPAREN, value = (, position = 66), Token(type = NUMBER, value = 100, position = 67), Token(type = RPAREN, value = ), position = 70), Token(type = COMMA, value = ,, position = 71), Token(type = IDENTIFIER, value = salary, position = 73), Token(type = IDENTIFIER, value = DECIMAL, position = 80), Token(type = LPAREN, value = (, position = 87), Token(type = NUMBER, value = 10, position = 88), Token(type = COMMA, value = ,, position = 90), Token(type = NUMBER, value = 2, position = 92), Token(type = RPAREN, value = ), position = 93), Token(type = RPAREN, value = ), position = 95), Token(type = SEMICOLON, value = ;, position = 96)]
2025-05-05 04:52:19,179 - compiler.statements.create_parser - INFO - Parsing Create Table.... 

2025-05-05 04:52:19,179 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = CREATE, position = 0)
2025-05-05 04:52:19,179 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = TABLE, position = 7)
2025-05-05 04:52:19,179 - compiler.statements.create_parser - DEBUG - Table Name Found: employees
2025-05-05 04:52:19,179 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = employees, position = 13)
2025-05-05 04:52:19,179 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 23)
2025-05-05 04:52:19,179 - compiler.statements.create_parser - DEBUG - Parsing Columns.....

2025-05-05 04:52:19,179 - compiler.statements.create_parser - DEBUG - Column Found: employee_id
2025-05-05 04:52:19,179 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = employee_id, position = 25)
2025-05-05 04:52:19,179 - compiler.statements.create_parser - DEBUG - Column Type: INT
2025-05-05 04:52:19,179 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INT, position = 37)
2025-05-05 04:52:19,179 - compiler.statements.create_parser - ERROR - Expected ',' or ')' in column list
2025-05-05 04:52:44,218 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = CREATE, position = 0), Token(type = KEYWORD, value = TABLE, position = 7), Token(type = IDENTIFIER, value = employees, position = 13), Token(type = LPAREN, value = (, position = 23), Token(type = IDENTIFIER, value = employee_id, position = 25), Token(type = KEYWORD, value = INT, position = 37), Token(type = IDENTIFIER, value = PRIMARY, position = 41), Token(type = IDENTIFIER, value = KEY, position = 49), Token(type = RPAREN, value = ), position = 53), Token(type = SEMICOLON, value = ;, position = 54)]
2025-05-05 04:52:44,222 - compiler.statements.create_parser - INFO - Parsing Create Table.... 

2025-05-05 04:52:44,222 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = CREATE, position = 0)
2025-05-05 04:52:44,222 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = TABLE, position = 7)
2025-05-05 04:52:44,223 - compiler.statements.create_parser - DEBUG - Table Name Found: employees
2025-05-05 04:52:44,223 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = employees, position = 13)
2025-05-05 04:52:44,223 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 23)
2025-05-05 04:52:44,223 - compiler.statements.create_parser - DEBUG - Parsing Columns.....

2025-05-05 04:52:44,223 - compiler.statements.create_parser - DEBUG - Column Found: employee_id
2025-05-05 04:52:44,223 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = employee_id, position = 25)
2025-05-05 04:52:44,223 - compiler.statements.create_parser - DEBUG - Column Type: INT
2025-05-05 04:52:44,223 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INT, position = 37)
2025-05-05 04:52:44,223 - compiler.statements.create_parser - ERROR - Expected ',' or ')' in column list
2025-05-05 04:53:12,261 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = employees, position = 7), Token(type = KEYWORD, value = SET, position = 17), Token(type = IDENTIFIER, value = salary, position = 21), Token(type = EQUALS, value = =, position = 28), Token(type = NUMBER, value = 55000, position = 30), Token(type = KEYWORD, value = WHERE, position = 36), Token(type = IDENTIFIER, value = employee_id, position = 42), Token(type = EQUALS, value = =, position = 54), Token(type = NUMBER, value = 101, position = 56), Token(type = SEMICOLON, value = ;, position = 59)]
2025-05-05 04:53:12,265 - compiler.statements.update_parser - INFO - Parsing UPDATE statement...
2025-05-05 04:53:12,268 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-05 04:53:12,268 - compiler.statements.update_parser - DEBUG - Table name identified: employees
2025-05-05 04:53:12,268 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SET, position = 17)
2025-05-05 04:53:12,268 - compiler.statements.update_parser - DEBUG - SET clause: {}
2025-05-05 04:53:19,466 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = CREATE, position = 0), Token(type = KEYWORD, value = TABLE, position = 7), Token(type = IDENTIFIER, value = dingd, position = 13)]
2025-05-05 04:53:19,467 - compiler.statements.create_parser - INFO - Parsing Create Table.... 

2025-05-05 04:53:19,467 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = CREATE, position = 0)
2025-05-05 04:53:19,467 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = TABLE, position = 7)
2025-05-05 04:53:19,467 - compiler.statements.create_parser - DEBUG - Table Name Found: dingd
2025-05-05 04:53:19,467 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = dingd, position = 13)
2025-05-05 04:53:31,046 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = CREATE, position = 0), Token(type = KEYWORD, value = TABLE, position = 7), Token(type = IDENTIFIER, value = dingd, position = 13), Token(type = SEMICOLON, value = ;, position = 18)]
2025-05-05 04:53:31,046 - compiler.statements.create_parser - INFO - Parsing Create Table.... 

2025-05-05 04:53:31,046 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = CREATE, position = 0)
2025-05-05 04:53:31,046 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = TABLE, position = 7)
2025-05-05 04:53:31,046 - compiler.statements.create_parser - DEBUG - Table Name Found: dingd
2025-05-05 04:53:31,046 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = dingd, position = 13)
2025-05-05 04:53:31,049 - compiler.statements.create_parser - ERROR - Expected '(' after table name...

2025-05-05 04:54:32,945 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = CREATE, position = 0), Token(type = KEYWORD, value = TABLE, position = 7), Token(type = IDENTIFIER, value = dingd, position = 13), Token(type = LPAREN, value = (, position = 19)]
2025-05-05 04:54:32,949 - compiler.statements.create_parser - INFO - Parsing Create Table.... 

2025-05-05 04:54:32,949 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = CREATE, position = 0)
2025-05-05 04:54:32,949 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = TABLE, position = 7)
2025-05-05 04:54:32,949 - compiler.statements.create_parser - DEBUG - Table Name Found: dingd
2025-05-05 04:54:32,949 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = dingd, position = 13)
2025-05-05 04:54:32,949 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 19)
2025-05-05 04:54:32,949 - compiler.statements.create_parser - DEBUG - Parsing Columns.....

2025-05-05 04:54:43,796 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = CREATE, position = 0), Token(type = KEYWORD, value = TABLE, position = 7), Token(type = IDENTIFIER, value = dingd, position = 13), Token(type = LPAREN, value = (, position = 19)]
2025-05-05 04:54:43,798 - compiler.statements.create_parser - INFO - Parsing Create Table.... 

2025-05-05 04:54:43,798 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = CREATE, position = 0)
2025-05-05 04:54:43,798 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = TABLE, position = 7)
2025-05-05 04:54:43,798 - compiler.statements.create_parser - DEBUG - Table Name Found: dingd
2025-05-05 04:54:43,798 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = dingd, position = 13)
2025-05-05 04:54:43,798 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 19)
2025-05-05 04:54:43,798 - compiler.statements.create_parser - DEBUG - Parsing Columns.....

2025-05-05 04:54:52,163 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = CREATE, position = 0), Token(type = KEYWORD, value = TABLE, position = 7), Token(type = IDENTIFIER, value = dingd, position = 13), Token(type = LPAREN, value = (, position = 19)]
2025-05-05 04:54:52,166 - compiler.statements.create_parser - INFO - Parsing Create Table.... 

2025-05-05 04:54:52,166 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = CREATE, position = 0)
2025-05-05 04:54:52,167 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = TABLE, position = 7)
2025-05-05 04:54:52,167 - compiler.statements.create_parser - DEBUG - Table Name Found: dingd
2025-05-05 04:54:52,167 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = dingd, position = 13)
2025-05-05 04:54:52,167 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 19)
2025-05-05 04:54:52,167 - compiler.statements.create_parser - DEBUG - Parsing Columns.....

2025-05-05 04:55:11,551 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = CREATE, position = 0), Token(type = KEYWORD, value = TABLE, position = 7), Token(type = IDENTIFIER, value = dingd, position = 13), Token(type = LPAREN, value = (, position = 19), Token(type = IDENTIFIER, value = id, position = 21), Token(type = KEYWORD, value = INT, position = 24), Token(type = COMMA, value = ,, position = 27), Token(type = IDENTIFIER, value = name, position = 29), Token(type = IDENTIFIER, value = VARCHAR, position = 34), Token(type = LPAREN, value = (, position = 41), Token(type = NUMBER, value = 100, position = 42), Token(type = RPAREN, value = ), position = 45), Token(type = RPAREN, value = ), position = 47), Token(type = SEMICOLON, value = ;, position = 48)]
2025-05-05 04:55:11,557 - compiler.statements.create_parser - INFO - Parsing Create Table.... 

2025-05-05 04:55:11,557 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = CREATE, position = 0)
2025-05-05 04:55:11,557 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = TABLE, position = 7)
2025-05-05 04:55:11,557 - compiler.statements.create_parser - DEBUG - Table Name Found: dingd
2025-05-05 04:55:11,557 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = dingd, position = 13)
2025-05-05 04:55:11,557 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 19)
2025-05-05 04:55:11,557 - compiler.statements.create_parser - DEBUG - Parsing Columns.....

2025-05-05 04:55:11,557 - compiler.statements.create_parser - DEBUG - Column Found: id
2025-05-05 04:55:11,557 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = id, position = 21)
2025-05-05 04:55:11,557 - compiler.statements.create_parser - DEBUG - Column Type: INT
2025-05-05 04:55:11,557 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INT, position = 24)
2025-05-05 04:55:11,557 - compiler.statements.create_parser - DEBUG - Found ',' moving to next column....
2025-05-05 04:55:11,557 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 27)
2025-05-05 04:55:11,557 - compiler.statements.create_parser - DEBUG - Column Found: name
2025-05-05 04:55:11,557 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = name, position = 29)
2025-05-05 04:55:11,557 - compiler.statements.create_parser - ERROR - Expected column type (e.g., INT, TEXT), but got IDENTIFIER - VARCHAR
2025-05-05 04:57:20,540 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = IDENTIFIER, value = hh, position = 7), Token(type = KEYWORD, value = FROM, position = 10), Token(type = IDENTIFIER, value = dknd, position = 15)]
2025-05-05 04:57:20,544 - compiler.statements.select_parser - DEBUG - Parsing SELECT statement...
2025-05-05 04:57:20,544 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-05 04:58:14,360 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = IDENTIFIER, value = hh, position = 7), Token(type = KEYWORD, value = FROM, position = 10), Token(type = IDENTIFIER, value = dknd, position = 15)]
2025-05-05 04:58:14,365 - compiler.statements.select_parser - DEBUG - Parsing SELECT statement...
2025-05-05 04:58:14,365 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-05 04:58:30,761 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = IDENTIFIER, value = hh, position = 7), Token(type = KEYWORD, value = FROM, position = 10), Token(type = IDENTIFIER, value = dknd, position = 15)]
2025-05-05 04:58:30,763 - compiler.statements.select_parser - DEBUG - Parsing SELECT statement...
2025-05-05 04:58:30,763 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-05 05:01:15,285 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = IDENTIFIER, value = hh, position = 7), Token(type = KEYWORD, value = FROM, position = 10), Token(type = IDENTIFIER, value = dknd, position = 15)]
2025-05-05 05:01:15,287 - compiler.statements.select_parser - DEBUG - Parsing SELECT statement...
2025-05-05 05:01:15,288 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-05 05:01:15,288 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 10)
2025-05-05 05:01:53,156 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = IDENTIFIER, value = hh, position = 7), Token(type = KEYWORD, value = FROM, position = 10), Token(type = IDENTIFIER, value = dknd, position = 15)]
2025-05-05 05:01:53,159 - compiler.statements.select_parser - DEBUG - Parsing SELECT statement...
2025-05-05 05:01:53,159 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-05 05:01:53,159 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 10)
2025-05-05 05:01:53,159 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = dknd, position = 15)
2025-05-05 05:02:14,012 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = DROP, position = 0), Token(type = IDENTIFIER, value = me, position = 5)]
2025-05-05 05:02:14,014 - compiler.statements.drop_parser - INFO - Parsing DROP statement....
2025-05-05 05:02:14,014 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = DROP, position = 0)
2025-05-05 05:02:14,014 - compiler.statements.drop_parser - DEBUG - Dropped Entity: me
2025-05-05 05:02:14,014 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = me, position = 5)
2025-05-05 05:02:19,500 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = DROP, position = 0), Token(type = IDENTIFIER, value = me, position = 5), Token(type = SEMICOLON, value = ;, position = 7)]
2025-05-05 05:02:19,503 - compiler.statements.drop_parser - INFO - Parsing DROP statement....
2025-05-05 05:02:19,503 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = DROP, position = 0)
2025-05-05 05:02:19,503 - compiler.statements.drop_parser - DEBUG - Dropped Entity: me
2025-05-05 05:02:19,503 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = me, position = 5)
2025-05-05 05:02:19,503 - compiler.statements.drop_parser - INFO - DROP parsed: entity = me
2025-05-05 05:02:29,888 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = DELETE, position = 0), Token(type = IDENTIFIER, value = me, position = 7), Token(type = SEMICOLON, value = ;, position = 9)]
2025-05-05 05:02:29,891 - compiler.statements.delete_parser - INFO - Parsing DELETE statement....
2025-05-05 05:02:29,891 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = DELETE, position = 0)
2025-05-05 05:02:29,891 - compiler.statements.delete_parser - ERROR - Expected 'FROM' after DELETE...
2025-05-05 05:02:39,251 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = DELETE, position = 0), Token(type = KEYWORD, value = FROM, position = 7), Token(type = IDENTIFIER, value = me, position = 12), Token(type = KEYWORD, value = WHERE, position = 15), Token(type = IDENTIFIER, value = me, position = 21)]
2025-05-05 05:02:39,253 - compiler.statements.delete_parser - INFO - Parsing DELETE statement....
2025-05-05 05:02:39,255 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = DELETE, position = 0)
2025-05-05 05:02:39,255 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 7)
2025-05-05 05:02:39,255 - compiler.statements.delete_parser - DEBUG - Token before table_name: Token(type = IDENTIFIER, value = me, position = 12)
2025-05-05 05:02:39,255 - compiler.parser - DEBUG - Parsing table name....
2025-05-05 05:02:39,255 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = me, position = 12)
2025-05-05 05:02:39,255 - compiler.parser - DEBUG - Table Name Found: me
2025-05-05 05:02:39,255 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = me, position = 12)
2025-05-05 05:02:39,255 - compiler.statements.delete_parser - DEBUG - DELETE FROM: me
2025-05-05 05:02:39,255 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = WHERE, position = 15)
2025-05-05 05:02:39,255 - compiler.parser - DEBUG - Parsing WHERE condition....
2025-05-05 05:02:39,255 - compiler.parser - DEBUG - Column Found: me
2025-05-05 05:02:39,255 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = me, position = 21)
2025-05-05 05:02:43,560 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = DELETE, position = 0), Token(type = KEYWORD, value = FROM, position = 7), Token(type = IDENTIFIER, value = me, position = 12), Token(type = KEYWORD, value = WHERE, position = 15), Token(type = IDENTIFIER, value = me, position = 21), Token(type = SEMICOLON, value = ;, position = 23)]
2025-05-05 05:02:43,563 - compiler.statements.delete_parser - INFO - Parsing DELETE statement....
2025-05-05 05:02:43,563 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = DELETE, position = 0)
2025-05-05 05:02:43,563 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 7)
2025-05-05 05:02:43,563 - compiler.statements.delete_parser - DEBUG - Token before table_name: Token(type = IDENTIFIER, value = me, position = 12)
2025-05-05 05:02:43,563 - compiler.parser - DEBUG - Parsing table name....
2025-05-05 05:02:43,563 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = me, position = 12)
2025-05-05 05:02:43,563 - compiler.parser - DEBUG - Table Name Found: me
2025-05-05 05:02:43,565 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = me, position = 12)
2025-05-05 05:02:43,565 - compiler.statements.delete_parser - DEBUG - DELETE FROM: me
2025-05-05 05:02:43,565 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = WHERE, position = 15)
2025-05-05 05:02:43,565 - compiler.parser - DEBUG - Parsing WHERE condition....
2025-05-05 05:02:43,565 - compiler.parser - DEBUG - Column Found: me
2025-05-05 05:02:43,565 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = me, position = 21)
2025-05-05 05:02:43,565 - compiler.parser - ERROR - Expected '=' after column name in WHERE clause.
2025-05-05 05:02:48,870 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = DELETE, position = 0), Token(type = KEYWORD, value = FROM, position = 7), Token(type = IDENTIFIER, value = me, position = 12), Token(type = SEMICOLON, value = ;, position = 15)]
2025-05-05 05:02:48,875 - compiler.statements.delete_parser - INFO - Parsing DELETE statement....
2025-05-05 05:02:48,875 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = DELETE, position = 0)
2025-05-05 05:02:48,875 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 7)
2025-05-05 05:02:48,875 - compiler.statements.delete_parser - DEBUG - Token before table_name: Token(type = IDENTIFIER, value = me, position = 12)
2025-05-05 05:02:48,876 - compiler.parser - DEBUG - Parsing table name....
2025-05-05 05:02:48,876 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = me, position = 12)
2025-05-05 05:02:48,876 - compiler.parser - DEBUG - Table Name Found: me
2025-05-05 05:02:48,876 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = me, position = 12)
2025-05-05 05:02:48,876 - compiler.statements.delete_parser - DEBUG - DELETE FROM: me
2025-05-05 05:02:48,876 - compiler.statements.delete_parser - INFO - DELETE parsed: table = me, WHERE condition = None
2025-05-05 05:03:30,784 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = ASTERISK, value = *, position = 7), Token(type = KEYWORD, value = FROM, position = 9), Token(type = IDENTIFIER, value = me, position = 14)]
2025-05-05 05:03:30,786 - compiler.statements.select_parser - DEBUG - Parsing SELECT statement...
2025-05-05 05:03:30,786 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-05 05:03:54,550 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = ASTERISK, value = *, position = 7), Token(type = KEYWORD, value = FROM, position = 9), Token(type = IDENTIFIER, value = me, position = 15), Token(type = SEMICOLON, value = ;, position = 17)]
2025-05-05 05:03:54,550 - compiler.statements.select_parser - DEBUG - Parsing SELECT statement...
2025-05-05 05:03:54,550 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-05 05:04:21,647 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = IDENTIFIER, value = t, position = 7), Token(type = KEYWORD, value = FROM, position = 9), Token(type = IDENTIFIER, value = me, position = 15), Token(type = SEMICOLON, value = ;, position = 17)]
2025-05-05 05:04:21,656 - compiler.statements.select_parser - DEBUG - Parsing SELECT statement...
2025-05-05 05:04:21,656 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-05 05:04:21,656 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 9)
2025-05-05 05:04:21,657 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = me, position = 15)
2025-05-05 05:08:04,807 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = users, position = 12), Token(type = LPAREN, value = (, position = 18), Token(type = IDENTIFIER, value = id, position = 19), Token(type = COMMA, value = ,, position = 21), Token(type = IDENTIFIER, value = name, position = 23), Token(type = COMMA, value = ,, position = 27), Token(type = IDENTIFIER, value = age, position = 29), Token(type = RPAREN, value = ), position = 32), Token(type = KEYWORD, value = VALUES, position = 34), Token(type = LPAREN, value = (, position = 41), Token(type = NUMBER, value = 1, position = 42), Token(type = COMMA, value = ,, position = 43), Token(type = QUOTE, value = ', position = 45), Token(type = IDENTIFIER, value = John, position = 46), Token(type = IDENTIFIER, value = Doe, position = 51), Token(type = QUOTE, value = ', position = 54), Token(type = COMMA, value = ,, position = 55), Token(type = NUMBER, value = 30, position = 57), Token(type = RPAREN, value = ), position = 59), Token(type = SEMICOLON, value = ;, position = 60)]
2025-05-05 05:08:04,816 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-05 05:08:04,816 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-05 05:08:04,816 - compiler.parser - DEBUG - Parsing table name....
2025-05-05 05:08:04,816 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = users, position = 12)
2025-05-05 05:08:04,816 - compiler.parser - DEBUG - Table Name Found: users
2025-05-05 05:08:04,816 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = users, position = 12)
2025-05-05 05:09:12,057 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = users, position = 12), Token(type = LPAREN, value = (, position = 18), Token(type = IDENTIFIER, value = id, position = 19), Token(type = COMMA, value = ,, position = 21), Token(type = IDENTIFIER, value = name, position = 23), Token(type = COMMA, value = ,, position = 27), Token(type = IDENTIFIER, value = age, position = 29), Token(type = RPAREN, value = ), position = 32), Token(type = KEYWORD, value = VALUES, position = 34), Token(type = LPAREN, value = (, position = 41), Token(type = NUMBER, value = 1, position = 42), Token(type = COMMA, value = ,, position = 43), Token(type = QUOTE, value = ', position = 45), Token(type = IDENTIFIER, value = John, position = 46), Token(type = IDENTIFIER, value = Doe, position = 51), Token(type = QUOTE, value = ', position = 54), Token(type = COMMA, value = ,, position = 55), Token(type = NUMBER, value = 30, position = 57), Token(type = RPAREN, value = ), position = 59), Token(type = SEMICOLON, value = ;, position = 60)]
2025-05-05 05:09:12,070 - compiler.statements.insert_parser - DEBUG - Parsing INSERT statement...
2025-05-05 05:09:12,070 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-05 05:09:12,070 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-05 05:09:12,070 - compiler.parser - DEBUG - Parsing table name....
2025-05-05 05:09:12,070 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = users, position = 12)
2025-05-05 05:09:12,070 - compiler.parser - DEBUG - Table Name Found: users
2025-05-05 05:09:12,070 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = users, position = 12)
2025-05-05 05:09:12,070 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 18)
2025-05-05 05:09:12,070 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 32)
2025-05-05 05:09:12,070 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = VALUES, position = 34)
2025-05-05 05:09:12,070 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 41)
2025-05-05 05:09:12,070 - compiler.parser - DEBUG - Found value: 1
2025-05-05 05:09:12,070 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 1, position = 42)
2025-05-05 05:09:12,070 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 43)
2025-05-05 05:10:09,792 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = users, position = 12), Token(type = LPAREN, value = (, position = 18), Token(type = IDENTIFIER, value = id, position = 19), Token(type = COMMA, value = ,, position = 21), Token(type = IDENTIFIER, value = name, position = 23), Token(type = COMMA, value = ,, position = 27), Token(type = IDENTIFIER, value = age, position = 29), Token(type = RPAREN, value = ), position = 32), Token(type = KEYWORD, value = VALUES, position = 34), Token(type = LPAREN, value = (, position = 41), Token(type = NUMBER, value = 1, position = 42), Token(type = COMMA, value = ,, position = 43), Token(type = QUOTE, value = ', position = 45), Token(type = IDENTIFIER, value = John, position = 46), Token(type = IDENTIFIER, value = Doe, position = 51), Token(type = QUOTE, value = ', position = 54), Token(type = COMMA, value = ,, position = 55), Token(type = NUMBER, value = 30, position = 57), Token(type = RPAREN, value = ), position = 59), Token(type = SEMICOLON, value = ;, position = 60)]
2025-05-05 05:10:09,799 - compiler.statements.insert_parser - DEBUG - Parsing INSERT statement...
2025-05-05 05:10:09,799 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-05 05:10:09,799 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-05 05:10:09,799 - compiler.parser - DEBUG - Parsing table name....
2025-05-05 05:10:09,799 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = users, position = 12)
2025-05-05 05:10:09,799 - compiler.parser - DEBUG - Table Name Found: users
2025-05-05 05:10:09,799 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = users, position = 12)
2025-05-05 05:10:09,800 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 18)
2025-05-05 05:10:09,800 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 32)
2025-05-05 05:10:09,800 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = VALUES, position = 34)
2025-05-05 05:10:09,800 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 41)
2025-05-05 05:10:09,800 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 1, position = 42)
2025-05-05 05:10:09,800 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 43)
2025-05-05 05:10:32,316 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = users, position = 12), Token(type = LPAREN, value = (, position = 18), Token(type = IDENTIFIER, value = id, position = 19), Token(type = COMMA, value = ,, position = 21), Token(type = IDENTIFIER, value = name, position = 23), Token(type = COMMA, value = ,, position = 27), Token(type = IDENTIFIER, value = age, position = 29), Token(type = RPAREN, value = ), position = 32), Token(type = KEYWORD, value = VALUES, position = 34), Token(type = LPAREN, value = (, position = 41), Token(type = NUMBER, value = 1, position = 42), Token(type = COMMA, value = ,, position = 43), Token(type = QUOTE, value = ', position = 45), Token(type = IDENTIFIER, value = John, position = 46), Token(type = IDENTIFIER, value = Doe, position = 51), Token(type = QUOTE, value = ', position = 54), Token(type = COMMA, value = ,, position = 55), Token(type = NUMBER, value = 30, position = 57), Token(type = RPAREN, value = ), position = 59), Token(type = SEMICOLON, value = ;, position = 60)]
2025-05-05 05:10:32,326 - compiler.statements.insert_parser - DEBUG - Parsing INSERT statement...
2025-05-05 05:10:32,326 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-05 05:10:32,326 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-05 05:10:32,326 - compiler.parser - DEBUG - Parsing table name....
2025-05-05 05:10:32,326 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = users, position = 12)
2025-05-05 05:10:32,326 - compiler.parser - DEBUG - Table Name Found: users
2025-05-05 05:10:32,326 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = users, position = 12)
2025-05-05 05:10:32,326 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 18)
2025-05-05 05:10:32,326 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 32)
2025-05-05 05:10:32,326 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = VALUES, position = 34)
2025-05-05 05:10:32,326 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 41)
2025-05-05 05:10:32,326 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 1, position = 42)
2025-05-05 05:10:32,326 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 43)
2025-05-05 05:12:08,928 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = users, position = 12), Token(type = LPAREN, value = (, position = 18), Token(type = IDENTIFIER, value = id, position = 19), Token(type = COMMA, value = ,, position = 21), Token(type = IDENTIFIER, value = name, position = 23), Token(type = COMMA, value = ,, position = 27), Token(type = IDENTIFIER, value = age, position = 29), Token(type = RPAREN, value = ), position = 32), Token(type = KEYWORD, value = VALUES, position = 34), Token(type = LPAREN, value = (, position = 41), Token(type = NUMBER, value = 1, position = 42), Token(type = COMMA, value = ,, position = 43), Token(type = QUOTE, value = ', position = 45), Token(type = IDENTIFIER, value = John, position = 46), Token(type = IDENTIFIER, value = Doe, position = 51), Token(type = QUOTE, value = ', position = 54), Token(type = COMMA, value = ,, position = 55), Token(type = NUMBER, value = 30, position = 57), Token(type = RPAREN, value = ), position = 59), Token(type = SEMICOLON, value = ;, position = 60)]
2025-05-05 05:12:08,937 - compiler.statements.insert_parser - DEBUG - Parsing INSERT statement...
2025-05-05 05:12:08,937 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-05 05:12:08,937 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-05 05:12:08,937 - compiler.parser - DEBUG - Parsing table name....
2025-05-05 05:12:08,937 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = users, position = 12)
2025-05-05 05:12:08,937 - compiler.parser - DEBUG - Table Name Found: users
2025-05-05 05:12:08,937 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = users, position = 12)
2025-05-05 05:12:08,937 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 18)
2025-05-05 05:12:08,937 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 32)
2025-05-05 05:12:08,937 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = VALUES, position = 34)
2025-05-05 05:12:08,937 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 41)
2025-05-05 05:12:08,937 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 1, position = 42)
2025-05-05 05:12:08,937 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 43)
2025-05-05 05:12:44,359 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = users, position = 12), Token(type = LPAREN, value = (, position = 18), Token(type = IDENTIFIER, value = id, position = 19), Token(type = RPAREN, value = ), position = 21), Token(type = KEYWORD, value = VALUES, position = 23), Token(type = LPAREN, value = (, position = 30), Token(type = NUMBER, value = 1, position = 31), Token(type = RPAREN, value = ), position = 32), Token(type = SEMICOLON, value = ;, position = 33)]
2025-05-05 05:12:44,360 - compiler.statements.insert_parser - DEBUG - Parsing INSERT statement...
2025-05-05 05:12:44,360 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-05 05:12:44,360 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-05 05:12:44,360 - compiler.parser - DEBUG - Parsing table name....
2025-05-05 05:12:44,360 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = users, position = 12)
2025-05-05 05:12:44,360 - compiler.parser - DEBUG - Table Name Found: users
2025-05-05 05:12:44,360 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = users, position = 12)
2025-05-05 05:12:44,360 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 18)
2025-05-05 05:12:44,360 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 21)
2025-05-05 05:12:44,360 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = VALUES, position = 23)
2025-05-05 05:12:44,360 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 30)
2025-05-05 05:12:44,360 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 1, position = 31)
2025-05-05 05:12:44,360 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 32)
2025-05-05 05:12:44,364 - compiler.parser - DEBUG - Processed token: Token(type = SEMICOLON, value = ;, position = 33)
2025-05-05 05:12:44,366 - compiler.code_generator - DEBUG - Generating execution plan for: InsertCommand
2025-05-05 05:12:44,366 - compiler.code_generator - DEBUG - Generating plan for INSERT command on table users
2025-05-05 05:18:49,678 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = products, position = 12), Token(type = LPAREN, value = (, position = 21), Token(type = IDENTIFIER, value = product_id, position = 22), Token(type = COMMA, value = ,, position = 32), Token(type = IDENTIFIER, value = product_name, position = 34), Token(type = COMMA, value = ,, position = 46), Token(type = IDENTIFIER, value = price, position = 48), Token(type = RPAREN, value = ), position = 53), Token(type = KEYWORD, value = VALUES, position = 55), Token(type = LPAREN, value = (, position = 62), Token(type = NUMBER, value = 101, position = 63), Token(type = COMMA, value = ,, position = 66), Token(type = QUOTE, value = ', position = 68), Token(type = IDENTIFIER, value = Laptop, position = 69), Token(type = QUOTE, value = ', position = 75), Token(type = COMMA, value = ,, position = 76), Token(type = NUMBER, value = 999.99, position = 78), Token(type = RPAREN, value = ), position = 84), Token(type = SEMICOLON, value = ;, position = 85)]
2025-05-05 05:18:49,687 - compiler.statements.insert_parser - DEBUG - Parsing INSERT statement...
2025-05-05 05:18:49,687 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-05 05:18:49,687 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-05 05:18:49,687 - compiler.parser - DEBUG - Parsing table name....
2025-05-05 05:18:49,687 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = products, position = 12)
2025-05-05 05:18:49,687 - compiler.parser - DEBUG - Table Name Found: products
2025-05-05 05:18:49,687 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 12)
2025-05-05 05:18:49,687 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 21)
2025-05-05 05:18:49,687 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 53)
2025-05-05 05:18:49,687 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = VALUES, position = 55)
2025-05-05 05:18:49,687 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 62)
2025-05-05 05:18:49,687 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 101, position = 63)
2025-05-05 05:18:49,687 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 66)
2025-05-05 05:20:15,901 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = users, position = 12), Token(type = LPAREN, value = (, position = 18), Token(type = IDENTIFIER, value = id, position = 19), Token(type = COMMA, value = ,, position = 21), Token(type = IDENTIFIER, value = name, position = 23), Token(type = RPAREN, value = ), position = 27), Token(type = KEYWORD, value = VALUES, position = 29), Token(type = LPAREN, value = (, position = 36), Token(type = NUMBER, value = 5, position = 37), Token(type = COMMA, value = ,, position = 38), Token(type = QUOTE, value = ', position = 40), Token(type = IDENTIFIER, value = Emily, position = 41), Token(type = IDENTIFIER, value = White, position = 47), Token(type = QUOTE, value = ', position = 52), Token(type = RPAREN, value = ), position = 53), Token(type = SEMICOLON, value = ;, position = 54)]
2025-05-05 05:20:15,906 - compiler.statements.insert_parser - DEBUG - Parsing INSERT statement...
2025-05-05 05:20:15,906 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-05 05:20:15,906 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-05 05:20:15,910 - compiler.parser - DEBUG - Parsing table name....
2025-05-05 05:20:15,910 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = users, position = 12)
2025-05-05 05:20:15,910 - compiler.parser - DEBUG - Table Name Found: users
2025-05-05 05:20:15,910 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = users, position = 12)
2025-05-05 05:20:15,910 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 18)
2025-05-05 05:20:15,910 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 27)
2025-05-05 05:20:15,910 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = VALUES, position = 29)
2025-05-05 05:20:15,910 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 36)
2025-05-05 05:20:15,910 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 5, position = 37)
2025-05-05 05:20:15,910 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 38)
2025-05-05 05:20:38,735 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = users, position = 12), Token(type = LPAREN, value = (, position = 18), Token(type = IDENTIFIER, value = id, position = 19), Token(type = RPAREN, value = ), position = 21), Token(type = KEYWORD, value = VALUES, position = 23), Token(type = LPAREN, value = (, position = 30), Token(type = NUMBER, value = 5, position = 31), Token(type = RPAREN, value = ), position = 32), Token(type = SEMICOLON, value = ;, position = 33)]
2025-05-05 05:20:38,740 - compiler.statements.insert_parser - DEBUG - Parsing INSERT statement...
2025-05-05 05:20:38,740 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-05 05:20:38,740 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-05 05:20:38,740 - compiler.parser - DEBUG - Parsing table name....
2025-05-05 05:20:38,740 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = users, position = 12)
2025-05-05 05:20:38,740 - compiler.parser - DEBUG - Table Name Found: users
2025-05-05 05:20:38,740 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = users, position = 12)
2025-05-05 05:20:38,740 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 18)
2025-05-05 05:20:38,740 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 21)
2025-05-05 05:20:38,740 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = VALUES, position = 23)
2025-05-05 05:20:38,740 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 30)
2025-05-05 05:20:38,740 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 5, position = 31)
2025-05-05 05:20:38,740 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 32)
2025-05-05 05:20:38,740 - compiler.parser - DEBUG - Processed token: Token(type = SEMICOLON, value = ;, position = 33)
2025-05-05 05:20:38,746 - compiler.code_generator - DEBUG - Generating execution plan for: InsertCommand
2025-05-05 05:20:38,746 - compiler.code_generator - DEBUG - Generating plan for INSERT command on table users
2025-05-05 16:45:47,609 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = product, position = 12), Token(type = KEYWORD, value = VALUES, position = 20), Token(type = LPAREN, value = (, position = 26), Token(type = STRING, value = laptop, position = 27), Token(type = RPAREN, value = ), position = 35)]
2025-05-05 16:45:47,621 - compiler.statements.insert_parser - DEBUG - Parsing INSERT statement...
2025-05-05 16:45:47,621 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-05 16:45:47,621 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-05 16:45:47,621 - compiler.parser - DEBUG - Parsing table name....
2025-05-05 16:45:47,621 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = product, position = 12)
2025-05-05 16:45:47,621 - compiler.parser - DEBUG - Table Name Found: product
2025-05-05 16:45:47,621 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = product, position = 12)
2025-05-05 16:45:57,271 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = product, position = 12), Token(type = KEYWORD, value = VALUES, position = 20), Token(type = LPAREN, value = (, position = 26), Token(type = STRING, value = laptop, position = 27), Token(type = RPAREN, value = ), position = 35), Token(type = SEMICOLON, value = ;, position = 36)]
2025-05-05 16:45:57,276 - compiler.statements.insert_parser - DEBUG - Parsing INSERT statement...
2025-05-05 16:45:57,276 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-05 16:45:57,276 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-05 16:45:57,276 - compiler.parser - DEBUG - Parsing table name....
2025-05-05 16:45:57,276 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = product, position = 12)
2025-05-05 16:45:57,277 - compiler.parser - DEBUG - Table Name Found: product
2025-05-05 16:45:57,277 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = product, position = 12)
2025-05-05 16:46:58,909 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = Customers, position = 12), Token(type = LPAREN, value = (, position = 22), Token(type = IDENTIFIER, value = CustomerName, position = 23), Token(type = RPAREN, value = ), position = 35), Token(type = KEYWORD, value = VALUES, position = 37), Token(type = LPAREN, value = (, position = 44), Token(type = QUOTE, value = ', position = 45), Token(type = IDENTIFIER, value = Cardinal, position = 46), Token(type = QUOTE, value = ', position = 54), Token(type = RPAREN, value = ), position = 55), Token(type = SEMICOLON, value = ;, position = 56)]
2025-05-05 16:46:58,914 - compiler.statements.insert_parser - DEBUG - Parsing INSERT statement...
2025-05-05 16:46:58,914 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-05 16:46:58,914 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-05 16:46:58,914 - compiler.parser - DEBUG - Parsing table name....
2025-05-05 16:46:58,914 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = Customers, position = 12)
2025-05-05 16:46:58,914 - compiler.parser - DEBUG - Table Name Found: Customers
2025-05-05 16:46:58,914 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = Customers, position = 12)
2025-05-05 16:46:58,915 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 22)
2025-05-05 16:46:58,915 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 35)
2025-05-05 16:46:58,915 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = VALUES, position = 37)
2025-05-05 16:46:58,915 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 44)
2025-05-05 16:47:51,900 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = users, position = 12), Token(type = LPAREN, value = (, position = 18), Token(type = IDENTIFIER, value = id, position = 19), Token(type = RPAREN, value = ), position = 21), Token(type = KEYWORD, value = VALUES, position = 23), Token(type = LPAREN, value = (, position = 30), Token(type = NUMBER, value = 6, position = 31), Token(type = RPAREN, value = ), position = 32), Token(type = SEMICOLON, value = ;, position = 33)]
2025-05-05 16:47:51,905 - compiler.statements.insert_parser - DEBUG - Parsing INSERT statement...
2025-05-05 16:47:51,905 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-05 16:47:51,905 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-05 16:47:51,905 - compiler.parser - DEBUG - Parsing table name....
2025-05-05 16:47:51,905 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = users, position = 12)
2025-05-05 16:47:51,905 - compiler.parser - DEBUG - Table Name Found: users
2025-05-05 16:47:51,905 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = users, position = 12)
2025-05-05 16:47:51,905 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 18)
2025-05-05 16:47:51,905 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 21)
2025-05-05 16:47:51,905 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = VALUES, position = 23)
2025-05-05 16:47:51,905 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 30)
2025-05-05 16:47:51,905 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 6, position = 31)
2025-05-05 16:47:51,905 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 32)
2025-05-05 16:47:51,905 - compiler.parser - DEBUG - Processed token: Token(type = SEMICOLON, value = ;, position = 33)
2025-05-05 16:47:51,908 - compiler.code_generator - DEBUG - Generating execution plan for: InsertCommand
2025-05-05 16:47:51,908 - compiler.code_generator - DEBUG - Generating plan for INSERT command on table users
2025-05-05 17:57:32,540 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = ASTERISK, value = *, position = 7), Token(type = KEYWORD, value = FROM, position = 9), Token(type = IDENTIFIER, value = Products, position = 14)]
2025-05-05 17:57:45,412 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = DROP, position = 0), Token(type = IDENTIFIER, value = Products, position = 5)]
2025-05-05 18:02:10,226 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = IDENTIFIER, value = cust_id, position = 7), Token(type = KEYWORD, value = FROM, position = 15), Token(type = IDENTIFIER, value = customers, position = 20)]
2025-05-05 18:02:10,228 - compiler.statements.select_parser - DEBUG - Parsing SELECT statement...
2025-05-05 18:02:10,228 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-05 18:02:10,228 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 15)
2025-05-05 18:02:10,228 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = customers, position = 20)
2025-05-05 18:47:57,573 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = IDENTIFIER, value = colum1, position = 7), Token(type = COMMA, value = ,, position = 13), Token(type = IDENTIFIER, value = column2, position = 14), Token(type = KEYWORD, value = FROM, position = 22), Token(type = IDENTIFIER, value = products, position = 27)]
2025-05-05 18:47:57,576 - compiler.statements.select_parser - DEBUG - Parsing SELECT statement...
2025-05-05 18:47:57,576 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-05 18:47:57,576 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 22)
2025-05-05 18:47:57,576 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 27)
2025-05-05 18:50:18,801 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = IDENTIFIER, value = column1, position = 7), Token(type = COMMA, value = ,, position = 14), Token(type = IDENTIFIER, value = column2, position = 15), Token(type = KEYWORD, value = FROM, position = 23), Token(type = IDENTIFIER, value = productcts, position = 28)]
2025-05-05 18:50:18,804 - compiler.statements.select_parser - DEBUG - Parsing SELECT statement...
2025-05-05 18:50:18,804 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-05 18:50:18,804 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 23)
2025-05-05 18:50:18,804 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = productcts, position = 28)
2025-05-05 18:50:18,807 - compiler.code_generator - DEBUG - Generating execution plan for: SelectTableCommand
2025-05-05 18:50:18,807 - compiler.code_generator - DEBUG - Generating plan for SELECT command on table productcts
2025-05-05 18:53:30,797 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = products, position = 12), Token(type = LPAREN, value = (, position = 20), Token(type = IDENTIFIER, value = id, position = 21), Token(type = RPAREN, value = ), position = 23), Token(type = KEYWORD, value = VALUES, position = 25), Token(type = LPAREN, value = (, position = 31), Token(type = NUMBER, value = 3, position = 32), Token(type = RPAREN, value = ), position = 33)]
2025-05-05 18:53:30,801 - compiler.statements.insert_parser - DEBUG - Parsing INSERT statement...
2025-05-05 18:53:30,801 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-05 18:53:30,801 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-05 18:53:30,801 - compiler.parser - DEBUG - Parsing table name....
2025-05-05 18:53:30,801 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = products, position = 12)
2025-05-05 18:53:30,801 - compiler.parser - DEBUG - Table Name Found: products
2025-05-05 18:53:30,801 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 12)
2025-05-05 18:53:30,801 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 20)
2025-05-05 18:53:30,801 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 23)
2025-05-05 18:53:30,801 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = VALUES, position = 25)
2025-05-05 18:53:30,801 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 31)
2025-05-05 18:53:30,801 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 3, position = 32)
2025-05-05 18:53:30,802 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 33)
2025-05-05 18:53:37,889 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = products, position = 12), Token(type = LPAREN, value = (, position = 20), Token(type = IDENTIFIER, value = id, position = 21), Token(type = RPAREN, value = ), position = 23), Token(type = KEYWORD, value = VALUES, position = 25), Token(type = LPAREN, value = (, position = 31), Token(type = NUMBER, value = 3, position = 32), Token(type = RPAREN, value = ), position = 33), Token(type = SEMICOLON, value = ;, position = 34)]
2025-05-05 18:53:37,893 - compiler.statements.insert_parser - DEBUG - Parsing INSERT statement...
2025-05-05 18:53:37,894 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-05 18:53:37,894 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-05 18:53:37,894 - compiler.parser - DEBUG - Parsing table name....
2025-05-05 18:53:37,894 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = products, position = 12)
2025-05-05 18:53:37,894 - compiler.parser - DEBUG - Table Name Found: products
2025-05-05 18:53:37,894 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 12)
2025-05-05 18:53:37,894 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 20)
2025-05-05 18:53:37,894 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 23)
2025-05-05 18:53:37,894 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = VALUES, position = 25)
2025-05-05 18:53:37,894 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 31)
2025-05-05 18:53:37,894 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 3, position = 32)
2025-05-05 18:53:37,894 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 33)
2025-05-05 18:53:37,894 - compiler.parser - DEBUG - Processed token: Token(type = SEMICOLON, value = ;, position = 34)
2025-05-05 18:53:37,897 - compiler.code_generator - DEBUG - Generating execution plan for: InsertCommand
2025-05-05 18:53:37,897 - compiler.code_generator - DEBUG - Generating plan for INSERT command on table products
2025-05-05 18:55:55,804 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = products, position = 12), Token(type = LPAREN, value = (, position = 20), Token(type = IDENTIFIER, value = id, position = 21), Token(type = RPAREN, value = ), position = 23), Token(type = KEYWORD, value = VALUES, position = 25), Token(type = LPAREN, value = (, position = 31), Token(type = NUMBER, value = 2, position = 32), Token(type = RPAREN, value = ), position = 33)]
2025-05-05 18:55:55,809 - compiler.statements.insert_parser - DEBUG - Parsing INSERT statement...
2025-05-05 18:55:55,809 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-05 18:55:55,809 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-05 18:55:55,810 - compiler.parser - DEBUG - Parsing table name....
2025-05-05 18:55:55,810 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = products, position = 12)
2025-05-05 18:55:55,810 - compiler.parser - DEBUG - Table Name Found: products
2025-05-05 18:55:55,810 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 12)
2025-05-05 18:55:55,810 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 20)
2025-05-05 18:55:55,810 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 23)
2025-05-05 18:55:55,810 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = VALUES, position = 25)
2025-05-05 18:55:55,810 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 31)
2025-05-05 18:55:55,810 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 2, position = 32)
2025-05-05 18:55:55,810 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 33)
2025-05-05 18:56:00,864 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = products, position = 12), Token(type = LPAREN, value = (, position = 20), Token(type = IDENTIFIER, value = id, position = 21), Token(type = RPAREN, value = ), position = 23), Token(type = KEYWORD, value = VALUES, position = 25), Token(type = LPAREN, value = (, position = 31), Token(type = NUMBER, value = 2, position = 32), Token(type = RPAREN, value = ), position = 33), Token(type = SEMICOLON, value = ;, position = 34)]
2025-05-05 18:56:00,868 - compiler.statements.insert_parser - DEBUG - Parsing INSERT statement...
2025-05-05 18:56:00,868 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-05 18:56:00,868 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-05 18:56:00,868 - compiler.parser - DEBUG - Parsing table name....
2025-05-05 18:56:00,868 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = products, position = 12)
2025-05-05 18:56:00,868 - compiler.parser - DEBUG - Table Name Found: products
2025-05-05 18:56:00,868 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 12)
2025-05-05 18:56:00,868 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 20)
2025-05-05 18:56:00,870 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 23)
2025-05-05 18:56:00,870 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = VALUES, position = 25)
2025-05-05 18:56:00,870 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 31)
2025-05-05 18:56:00,870 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 2, position = 32)
2025-05-05 18:56:00,870 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 33)
2025-05-05 18:56:00,870 - compiler.parser - DEBUG - Processed token: Token(type = SEMICOLON, value = ;, position = 34)
2025-05-05 18:56:00,872 - compiler.code_generator - DEBUG - Generating execution plan for: InsertCommand
2025-05-05 18:56:00,872 - compiler.code_generator - DEBUG - Generating plan for INSERT command on table products
2025-05-10 16:34:12,143 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = IDENTIFIER, value = yt, position = 7), Token(type = KEYWORD, value = FROM, position = 10), Token(type = IDENTIFIER, value = yt, position = 15)]
2025-05-10 16:34:12,146 - compiler.statements.select_parser - DEBUG - Parsing SELECT statement...
2025-05-10 16:34:12,146 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-10 16:34:12,146 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 10)
2025-05-10 16:34:12,146 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = yt, position = 15)
2025-05-10 16:34:12,147 - compiler.code_generator - DEBUG - Generating execution plan for: SelectTableCommand
2025-05-10 16:34:12,147 - compiler.code_generator - DEBUG - Generating plan for SELECT command on table yt
2025-05-10 16:34:43,439 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = ASTERISK, value = *, position = 7), Token(type = KEYWORD, value = FROM, position = 9), Token(type = IDENTIFIER, value = yt, position = 14)]
2025-05-10 16:34:43,442 - compiler.statements.select_parser - DEBUG - Parsing SELECT statement...
2025-05-10 16:34:43,442 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-10 16:38:25,115 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = ASTERISK, value = *, position = 7), Token(type = KEYWORD, value = FROM, position = 9), Token(type = IDENTIFIER, value = yt, position = 14)]
2025-05-10 16:38:25,117 - compiler.statements.select_parser - DEBUG - Parsing SELECT statement...
2025-05-10 16:38:25,117 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-10 16:38:25,118 - compiler.parser - DEBUG - Processed token: Token(type = ASTERISK, value = *, position = 7)
2025-05-10 16:38:25,118 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 9)
2025-05-10 16:38:25,118 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = yt, position = 14)
2025-05-10 16:38:25,119 - compiler.code_generator - DEBUG - Generating execution plan for: SelectTableCommand
2025-05-10 16:38:25,119 - compiler.code_generator - DEBUG - Generating plan for SELECT command on table yt
2025-05-10 16:39:47,021 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = CREATE, position = 0), Token(type = KEYWORD, value = TABLE, position = 7), Token(type = IDENTIFIER, value = users, position = 13), Token(type = LPAREN, value = (, position = 19), Token(type = IDENTIFIER, value = id, position = 20), Token(type = KEYWORD, value = INT, position = 23), Token(type = COMMA, value = ,, position = 26), Token(type = IDENTIFIER, value = name, position = 28), Token(type = KEYWORD, value = TEXT, position = 33), Token(type = COMMA, value = ,, position = 37), Token(type = IDENTIFIER, value = age, position = 39), Token(type = KEYWORD, value = INT, position = 43), Token(type = RPAREN, value = ), position = 46)]
2025-05-10 16:39:47,027 - compiler.statements.create_parser - INFO - Parsing Create Table.... 

2025-05-10 16:39:47,027 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = CREATE, position = 0)
2025-05-10 16:39:47,027 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = TABLE, position = 7)
2025-05-10 16:39:47,027 - compiler.statements.create_parser - DEBUG - Table Name Found: users
2025-05-10 16:39:47,027 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = users, position = 13)
2025-05-10 16:39:47,027 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 19)
2025-05-10 16:39:47,027 - compiler.statements.create_parser - DEBUG - Parsing Columns.....

2025-05-10 16:39:47,027 - compiler.statements.create_parser - DEBUG - Column Found: id
2025-05-10 16:39:47,027 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = id, position = 20)
2025-05-10 16:39:47,027 - compiler.statements.create_parser - DEBUG - Column Type: INT
2025-05-10 16:39:47,027 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INT, position = 23)
2025-05-10 16:39:47,027 - compiler.statements.create_parser - DEBUG - Found ',' moving to next column....
2025-05-10 16:39:47,027 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 26)
2025-05-10 16:39:47,027 - compiler.statements.create_parser - DEBUG - Column Found: name
2025-05-10 16:39:47,027 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = name, position = 28)
2025-05-10 16:39:47,027 - compiler.statements.create_parser - DEBUG - Column Type: TEXT
2025-05-10 16:39:47,027 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = TEXT, position = 33)
2025-05-10 16:39:47,027 - compiler.statements.create_parser - DEBUG - Found ',' moving to next column....
2025-05-10 16:39:47,027 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 37)
2025-05-10 16:39:47,027 - compiler.statements.create_parser - DEBUG - Column Found: age
2025-05-10 16:39:47,027 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = age, position = 39)
2025-05-10 16:39:47,027 - compiler.statements.create_parser - DEBUG - Column Type: INT
2025-05-10 16:39:47,027 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INT, position = 43)
2025-05-10 16:39:47,027 - compiler.statements.create_parser - DEBUG - Found ')' moving to next column....
2025-05-10 16:39:47,027 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 46)
2025-05-10 16:39:47,027 - compiler.statements.create_parser - INFO - CREATE TABLE parsed successfully with columns: [('id', 'INT'), ('name', 'TEXT'), ('age', 'INT')]
2025-05-10 16:39:47,030 - compiler.code_generator - DEBUG - Creating Table: users with columns: [('id', 'INT'), ('name', 'TEXT'), ('age', 'INT')]
2025-05-10 16:39:47,030 - compiler.code_generator - INFO - Table users creation with columns finished.
2025-05-10 16:39:47,030 - compiler.code_generator - DEBUG - Generating execution plan for: CreateTableCommand
2025-05-10 16:39:47,030 - compiler.code_generator - DEBUG - Generating plan for CREATE TABLE command on table users
2025-05-10 16:40:27,577 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = CREATE, position = 0), Token(type = KEYWORD, value = TABLE, position = 7), Token(type = IDENTIFIER, value = products, position = 13), Token(type = LPAREN, value = (, position = 22), Token(type = IDENTIFIER, value = id, position = 23), Token(type = KEYWORD, value = INT, position = 26), Token(type = IDENTIFIER, value = PRIMARY, position = 30), Token(type = IDENTIFIER, value = KEY, position = 38), Token(type = COMMA, value = ,, position = 41), Token(type = IDENTIFIER, value = name, position = 43), Token(type = KEYWORD, value = TEXT, position = 48), Token(type = IDENTIFIER, value = NOT, position = 53), Token(type = IDENTIFIER, value = NULL, position = 57), Token(type = RPAREN, value = ), position = 61)]
2025-05-10 16:40:27,582 - compiler.statements.create_parser - INFO - Parsing Create Table.... 

2025-05-10 16:40:27,582 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = CREATE, position = 0)
2025-05-10 16:40:27,582 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = TABLE, position = 7)
2025-05-10 16:40:27,582 - compiler.statements.create_parser - DEBUG - Table Name Found: products
2025-05-10 16:40:27,582 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 13)
2025-05-10 16:40:27,582 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 22)
2025-05-10 16:40:27,582 - compiler.statements.create_parser - DEBUG - Parsing Columns.....

2025-05-10 16:40:27,582 - compiler.statements.create_parser - DEBUG - Column Found: id
2025-05-10 16:40:27,582 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = id, position = 23)
2025-05-10 16:40:27,582 - compiler.statements.create_parser - DEBUG - Column Type: INT
2025-05-10 16:40:27,582 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INT, position = 26)
2025-05-10 16:40:27,582 - compiler.statements.create_parser - ERROR - Expected ',' or ')' in column list
2025-05-10 16:40:39,711 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = CREATE, position = 0), Token(type = KEYWORD, value = TABLE, position = 7), Token(type = IDENTIFIER, value = products, position = 13), Token(type = LPAREN, value = (, position = 22), Token(type = IDENTIFIER, value = id, position = 23), Token(type = KEYWORD, value = INT, position = 26), Token(type = IDENTIFIER, value = PRIMARY, position = 30), Token(type = IDENTIFIER, value = KEY, position = 38), Token(type = COMMA, value = ,, position = 41), Token(type = IDENTIFIER, value = name, position = 43), Token(type = KEYWORD, value = TEXT, position = 48), Token(type = IDENTIFIER, value = NOT, position = 53), Token(type = IDENTIFIER, value = NULL, position = 57), Token(type = RPAREN, value = ), position = 61), Token(type = SEMICOLON, value = ;, position = 62)]
2025-05-10 16:40:39,716 - compiler.statements.create_parser - INFO - Parsing Create Table.... 

2025-05-10 16:40:39,717 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = CREATE, position = 0)
2025-05-10 16:40:39,717 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = TABLE, position = 7)
2025-05-10 16:40:39,717 - compiler.statements.create_parser - DEBUG - Table Name Found: products
2025-05-10 16:40:39,717 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 13)
2025-05-10 16:40:39,717 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 22)
2025-05-10 16:40:39,717 - compiler.statements.create_parser - DEBUG - Parsing Columns.....

2025-05-10 16:40:39,717 - compiler.statements.create_parser - DEBUG - Column Found: id
2025-05-10 16:40:39,717 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = id, position = 23)
2025-05-10 16:40:39,717 - compiler.statements.create_parser - DEBUG - Column Type: INT
2025-05-10 16:40:39,717 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INT, position = 26)
2025-05-10 16:40:39,717 - compiler.statements.create_parser - ERROR - Expected ',' or ')' in column list
2025-05-11 18:46:02,789 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = CREATE, position = 0), Token(type = KEYWORD, value = TABLE, position = 7), Token(type = IDENTIFIER, value = products, position = 13), Token(type = LPAREN, value = (, position = 22), Token(type = IDENTIFIER, value = id, position = 23), Token(type = KEYWORD, value = INT, position = 26), Token(type = IDENTIFIER, value = PRIMARY, position = 30), Token(type = IDENTIFIER, value = KEY, position = 38), Token(type = COMMA, value = ,, position = 41), Token(type = IDENTIFIER, value = name, position = 43), Token(type = KEYWORD, value = TEXT, position = 48), Token(type = IDENTIFIER, value = NOT, position = 53), Token(type = IDENTIFIER, value = NULL, position = 57), Token(type = RPAREN, value = ), position = 61), Token(type = SEMICOLON, value = ;, position = 62)]
2025-05-11 18:46:02,795 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = CREATE, position = 0)
2025-05-11 18:46:02,795 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = TABLE, position = 7)
2025-05-11 18:46:02,796 - compiler.parser - DEBUG - Parsing table name....
2025-05-11 18:46:02,796 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = products, position = 13)
2025-05-11 18:46:02,796 - compiler.parser - DEBUG - Table Name Found: products
2025-05-11 18:46:02,796 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 13)
2025-05-11 18:46:02,796 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 22)
2025-05-11 18:46:02,796 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = id, position = 23)
2025-05-11 18:46:02,796 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INT, position = 26)
2025-05-11 18:46:02,797 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = PRIMARY, position = 30)
2025-05-11 18:46:02,797 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = KEY, position = 38)
2025-05-11 18:46:02,797 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 41)
2025-05-11 18:46:02,797 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = name, position = 43)
2025-05-11 18:46:02,797 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = TEXT, position = 48)
2025-05-11 18:46:02,797 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = NOT, position = 53)
2025-05-11 18:46:02,797 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = NULL, position = 57)
2025-05-11 18:46:02,797 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 61)
2025-05-11 18:46:02,800 - compiler.code_generator - DEBUG - Creating Table: products with columns: [('id', 'INT', ['PRIMARY KEY']), ('name', 'TEXT', ['NOT NULL'])]
2025-05-11 18:46:02,800 - compiler.code_generator - INFO - Table products creation with columns finished.
2025-05-11 18:46:02,800 - compiler.code_generator - DEBUG - Generating execution plan for: CreateTableCommand
2025-05-11 18:46:02,800 - compiler.code_generator - DEBUG - Generating plan for CREATE TABLE command on table products
2025-05-11 18:46:48,591 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = CREATE, position = 0), Token(type = KEYWORD, value = TABLE, position = 7), Token(type = IDENTIFIER, value = products, position = 13), Token(type = LPAREN, value = (, position = 22), Token(type = IDENTIFIER, value = id, position = 23), Token(type = KEYWORD, value = INT, position = 26), Token(type = IDENTIFIER, value = PRIMARY, position = 30), Token(type = IDENTIFIER, value = KEY, position = 38), Token(type = COMMA, value = ,, position = 41), Token(type = IDENTIFIER, value = name, position = 43), Token(type = KEYWORD, value = TEXT, position = 48), Token(type = IDENTIFIER, value = NOT, position = 53), Token(type = IDENTIFIER, value = NULL, position = 57), Token(type = RPAREN, value = ), position = 61), Token(type = SEMICOLON, value = ;, position = 62)]
2025-05-11 18:46:48,595 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = CREATE, position = 0)
2025-05-11 18:46:48,595 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = TABLE, position = 7)
2025-05-11 18:46:48,596 - compiler.parser - DEBUG - Parsing table name....
2025-05-11 18:46:48,596 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = products, position = 13)
2025-05-11 18:46:48,596 - compiler.parser - DEBUG - Table Name Found: products
2025-05-11 18:46:48,596 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 13)
2025-05-11 18:46:48,596 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 22)
2025-05-11 18:46:48,596 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = id, position = 23)
2025-05-11 18:46:48,596 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INT, position = 26)
2025-05-11 18:46:48,596 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = PRIMARY, position = 30)
2025-05-11 18:46:48,596 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = KEY, position = 38)
2025-05-11 18:46:48,596 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 41)
2025-05-11 18:46:48,596 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = name, position = 43)
2025-05-11 18:46:48,596 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = TEXT, position = 48)
2025-05-11 18:46:48,596 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = NOT, position = 53)
2025-05-11 18:46:48,596 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = NULL, position = 57)
2025-05-11 18:46:48,596 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 61)
2025-05-11 18:46:48,599 - compiler.code_generator - DEBUG - Creating Table: products with columns: [('id', 'INT', ['PRIMARY KEY']), ('name', 'TEXT', ['NOT NULL'])]
2025-05-11 18:46:48,599 - compiler.code_generator - INFO - Table products creation with columns finished.
2025-05-11 18:46:48,599 - compiler.code_generator - DEBUG - Generating execution plan for: CreateTableCommand
2025-05-11 18:46:48,599 - compiler.code_generator - DEBUG - Generating plan for CREATE TABLE command on table products
2025-05-11 18:48:59,655 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = CREATE, position = 0), Token(type = KEYWORD, value = TABLE, position = 7), Token(type = IDENTIFIER, value = Users, position = 13), Token(type = LPAREN, value = (, position = 19), Token(type = IDENTIFIER, value = user_id, position = 21), Token(type = IDENTIFIER, value = INTEGER, position = 29), Token(type = IDENTIFIER, value = PRIMARY, position = 37), Token(type = IDENTIFIER, value = KEY, position = 45), Token(type = IDENTIFIER, value = AUTOINCREMENT, position = 49), Token(type = COMMA, value = ,, position = 62), Token(type = IDENTIFIER, value = username, position = 64), Token(type = KEYWORD, value = TEXT, position = 73), Token(type = IDENTIFIER, value = NOT, position = 78), Token(type = IDENTIFIER, value = NULL, position = 82), Token(type = IDENTIFIER, value = UNIQUE, position = 87), Token(type = COMMA, value = ,, position = 93), Token(type = IDENTIFIER, value = email, position = 95), Token(type = KEYWORD, value = TEXT, position = 101), Token(type = IDENTIFIER, value = NOT, position = 106), Token(type = IDENTIFIER, value = NULL, position = 110), Token(type = IDENTIFIER, value = UNIQUE, position = 115), Token(type = COMMA, value = ,, position = 121), Token(type = IDENTIFIER, value = password_hash, position = 123), Token(type = KEYWORD, value = TEXT, position = 137), Token(type = IDENTIFIER, value = NOT, position = 142), Token(type = IDENTIFIER, value = NULL, position = 146), Token(type = COMMA, value = ,, position = 150), Token(type = IDENTIFIER, value = created_at, position = 152), Token(type = IDENTIFIER, value = DATETIME, position = 163), Token(type = IDENTIFIER, value = DEFAULT, position = 172), Token(type = IDENTIFIER, value = CURRENT_TIMESTAMP, position = 180), Token(type = RPAREN, value = ), position = 198), Token(type = SEMICOLON, value = ;, position = 199)]
2025-05-11 18:48:59,664 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = CREATE, position = 0)
2025-05-11 18:48:59,666 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = TABLE, position = 7)
2025-05-11 18:48:59,666 - compiler.parser - DEBUG - Parsing table name....
2025-05-11 18:48:59,666 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = Users, position = 13)
2025-05-11 18:48:59,666 - compiler.parser - DEBUG - Table Name Found: Users
2025-05-11 18:48:59,666 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = Users, position = 13)
2025-05-11 18:48:59,666 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 19)
2025-05-11 18:48:59,666 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = user_id, position = 21)
2025-05-11 18:49:50,263 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = CREATE, position = 0), Token(type = KEYWORD, value = TABLE, position = 7), Token(type = IDENTIFIER, value = Users, position = 13), Token(type = LPAREN, value = (, position = 19), Token(type = IDENTIFIER, value = user_id, position = 21), Token(type = IDENTIFIER, value = INTEGER, position = 29), Token(type = IDENTIFIER, value = PRIMARY, position = 37), Token(type = IDENTIFIER, value = KEY, position = 45), Token(type = COMMA, value = ,, position = 48), Token(type = IDENTIFIER, value = username, position = 50), Token(type = KEYWORD, value = TEXT, position = 59), Token(type = IDENTIFIER, value = NOT, position = 64), Token(type = IDENTIFIER, value = NULL, position = 68), Token(type = IDENTIFIER, value = UNIQUE, position = 73), Token(type = COMMA, value = ,, position = 79), Token(type = IDENTIFIER, value = email, position = 81), Token(type = KEYWORD, value = TEXT, position = 87), Token(type = IDENTIFIER, value = NOT, position = 92), Token(type = IDENTIFIER, value = NULL, position = 96), Token(type = IDENTIFIER, value = UNIQUE, position = 101), Token(type = COMMA, value = ,, position = 107), Token(type = IDENTIFIER, value = password_hash, position = 109), Token(type = KEYWORD, value = TEXT, position = 123), Token(type = IDENTIFIER, value = NOT, position = 128), Token(type = IDENTIFIER, value = NULL, position = 132), Token(type = COMMA, value = ,, position = 136), Token(type = IDENTIFIER, value = created_at, position = 138), Token(type = IDENTIFIER, value = DATETIME, position = 149), Token(type = IDENTIFIER, value = DEFAULT, position = 158), Token(type = IDENTIFIER, value = CURRENT_TIMESTAMP, position = 166), Token(type = RPAREN, value = ), position = 184), Token(type = SEMICOLON, value = ;, position = 185)]
2025-05-11 18:49:50,272 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = CREATE, position = 0)
2025-05-11 18:49:50,272 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = TABLE, position = 7)
2025-05-11 18:49:50,272 - compiler.parser - DEBUG - Parsing table name....
2025-05-11 18:49:50,273 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = Users, position = 13)
2025-05-11 18:49:50,273 - compiler.parser - DEBUG - Table Name Found: Users
2025-05-11 18:49:50,273 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = Users, position = 13)
2025-05-11 18:49:50,273 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 19)
2025-05-11 18:49:50,273 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = user_id, position = 21)
2025-05-11 18:50:03,003 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = CREATE, position = 0), Token(type = KEYWORD, value = TABLE, position = 7), Token(type = IDENTIFIER, value = Users, position = 13), Token(type = LPAREN, value = (, position = 19), Token(type = IDENTIFIER, value = user_id, position = 21), Token(type = IDENTIFIER, value = INTEGER, position = 29), Token(type = IDENTIFIER, value = PRIMARY, position = 37), Token(type = IDENTIFIER, value = KEY, position = 45), Token(type = COMMA, value = ,, position = 48), Token(type = IDENTIFIER, value = username, position = 50), Token(type = KEYWORD, value = TEXT, position = 59), Token(type = IDENTIFIER, value = NOT, position = 64), Token(type = IDENTIFIER, value = NULL, position = 68), Token(type = IDENTIFIER, value = UNIQUE, position = 73), Token(type = COMMA, value = ,, position = 79), Token(type = IDENTIFIER, value = email, position = 81), Token(type = KEYWORD, value = TEXT, position = 87), Token(type = IDENTIFIER, value = NOT, position = 92), Token(type = IDENTIFIER, value = NULL, position = 96), Token(type = IDENTIFIER, value = UNIQUE, position = 101), Token(type = COMMA, value = ,, position = 107), Token(type = IDENTIFIER, value = password_hash, position = 109), Token(type = KEYWORD, value = TEXT, position = 123), Token(type = IDENTIFIER, value = NOT, position = 128), Token(type = IDENTIFIER, value = NULL, position = 132), Token(type = RPAREN, value = ), position = 137), Token(type = SEMICOLON, value = ;, position = 138)]
2025-05-11 18:50:03,013 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = CREATE, position = 0)
2025-05-11 18:50:03,013 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = TABLE, position = 7)
2025-05-11 18:50:03,013 - compiler.parser - DEBUG - Parsing table name....
2025-05-11 18:50:03,013 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = Users, position = 13)
2025-05-11 18:50:03,013 - compiler.parser - DEBUG - Table Name Found: Users
2025-05-11 18:50:03,013 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = Users, position = 13)
2025-05-11 18:50:03,013 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 19)
2025-05-11 18:50:03,013 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = user_id, position = 21)
2025-05-11 18:50:24,575 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = CREATE, position = 0), Token(type = KEYWORD, value = TABLE, position = 7), Token(type = IDENTIFIER, value = Users, position = 13), Token(type = LPAREN, value = (, position = 19), Token(type = IDENTIFIER, value = user_id, position = 21), Token(type = IDENTIFIER, value = INTEGER, position = 29), Token(type = IDENTIFIER, value = PRIMARY, position = 37), Token(type = IDENTIFIER, value = KEY, position = 45), Token(type = RPAREN, value = ), position = 48), Token(type = SEMICOLON, value = ;, position = 49)]
2025-05-11 18:50:24,580 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = CREATE, position = 0)
2025-05-11 18:50:24,580 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = TABLE, position = 7)
2025-05-11 18:50:24,580 - compiler.parser - DEBUG - Parsing table name....
2025-05-11 18:50:24,580 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = Users, position = 13)
2025-05-11 18:50:24,580 - compiler.parser - DEBUG - Table Name Found: Users
2025-05-11 18:50:24,580 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = Users, position = 13)
2025-05-11 18:50:24,580 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 19)
2025-05-11 18:50:24,580 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = user_id, position = 21)
2025-05-11 18:50:32,605 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = CREATE, position = 0), Token(type = KEYWORD, value = TABLE, position = 7), Token(type = IDENTIFIER, value = Users, position = 13), Token(type = LPAREN, value = (, position = 19), Token(type = IDENTIFIER, value = user_id, position = 21), Token(type = IDENTIFIER, value = INTEGER, position = 29), Token(type = IDENTIFIER, value = PRIMARY, position = 37), Token(type = IDENTIFIER, value = KEY, position = 45), Token(type = RPAREN, value = ), position = 48), Token(type = SEMICOLON, value = ;, position = 49)]
2025-05-11 18:50:32,609 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = CREATE, position = 0)
2025-05-11 18:50:32,609 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = TABLE, position = 7)
2025-05-11 18:50:32,609 - compiler.parser - DEBUG - Parsing table name....
2025-05-11 18:50:32,609 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = Users, position = 13)
2025-05-11 18:50:32,609 - compiler.parser - DEBUG - Table Name Found: Users
2025-05-11 18:50:32,609 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = Users, position = 13)
2025-05-11 18:50:32,609 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 19)
2025-05-11 18:50:32,609 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = user_id, position = 21)
2025-05-11 18:54:12,972 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = CREATE, position = 0), Token(type = KEYWORD, value = TABLE, position = 7), Token(type = IDENTIFIER, value = products, position = 13), Token(type = LPAREN, value = (, position = 22), Token(type = IDENTIFIER, value = id, position = 24), Token(type = KEYWORD, value = INT, position = 27), Token(type = IDENTIFIER, value = PRIMARY, position = 31), Token(type = IDENTIFIER, value = KEY, position = 39), Token(type = COMMA, value = ,, position = 42), Token(type = IDENTIFIER, value = name, position = 44), Token(type = KEYWORD, value = TEXT, position = 49), Token(type = IDENTIFIER, value = NOT, position = 54), Token(type = IDENTIFIER, value = NULL, position = 58), Token(type = COMMA, value = ,, position = 62), Token(type = IDENTIFIER, value = price, position = 64), Token(type = KEYWORD, value = REAL, position = 70), Token(type = IDENTIFIER, value = DEFAULT, position = 75), Token(type = NUMBER, value = 0.0, position = 83), Token(type = RPAREN, value = ), position = 87), Token(type = SEMICOLON, value = ;, position = 88)]
2025-05-11 18:54:12,978 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = CREATE, position = 0)
2025-05-11 18:54:12,978 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = TABLE, position = 7)
2025-05-11 18:54:12,978 - compiler.parser - DEBUG - Parsing table name....
2025-05-11 18:54:12,978 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = products, position = 13)
2025-05-11 18:54:12,978 - compiler.parser - DEBUG - Table Name Found: products
2025-05-11 18:54:12,978 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 13)
2025-05-11 18:54:12,978 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 22)
2025-05-11 18:54:12,978 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = id, position = 24)
2025-05-11 18:54:12,978 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INT, position = 27)
2025-05-11 18:54:12,978 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = PRIMARY, position = 31)
2025-05-11 18:54:12,978 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = KEY, position = 39)
2025-05-11 18:54:12,978 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 42)
2025-05-11 18:54:12,978 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = name, position = 44)
2025-05-11 18:54:12,978 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = TEXT, position = 49)
2025-05-11 18:54:12,978 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = NOT, position = 54)
2025-05-11 18:54:12,978 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = NULL, position = 58)
2025-05-11 18:54:12,978 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 62)
2025-05-11 18:54:12,979 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = price, position = 64)
2025-05-11 18:54:12,979 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = REAL, position = 70)
2025-05-11 18:54:12,979 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = DEFAULT, position = 75)
2025-05-11 18:54:12,979 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 0.0, position = 83)
2025-05-11 18:54:12,979 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 87)
2025-05-11 18:54:12,981 - compiler.code_generator - DEBUG - Creating Table: products with columns: [('id', 'INT', ['PRIMARY KEY']), ('name', 'TEXT', ['NOT NULL']), ('price', 'REAL', ['DEFAULT'])]
2025-05-11 18:54:12,981 - compiler.code_generator - INFO - Table products creation with columns finished.
2025-05-11 18:54:12,981 - compiler.code_generator - DEBUG - Generating execution plan for: CreateTableCommand
2025-05-11 18:54:12,981 - compiler.code_generator - DEBUG - Generating plan for CREATE TABLE command on table products
2025-05-11 18:54:30,518 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = CREATE, position = 0), Token(type = KEYWORD, value = TABLE, position = 7), Token(type = IDENTIFIER, value = orders, position = 13), Token(type = LPAREN, value = (, position = 20), Token(type = IDENTIFIER, value = order_id, position = 22), Token(type = KEYWORD, value = INT, position = 31), Token(type = IDENTIFIER, value = PRIMARY, position = 35), Token(type = IDENTIFIER, value = KEY, position = 43), Token(type = COMMA, value = ,, position = 46), Token(type = IDENTIFIER, value = customer_id, position = 48), Token(type = KEYWORD, value = INT, position = 60), Token(type = IDENTIFIER, value = NOT, position = 64), Token(type = IDENTIFIER, value = NULL, position = 68), Token(type = COMMA, value = ,, position = 72), Token(type = IDENTIFIER, value = order_date, position = 74), Token(type = KEYWORD, value = TEXT, position = 85), Token(type = COMMA, value = ,, position = 89), Token(type = IDENTIFIER, value = total, position = 91), Token(type = KEYWORD, value = REAL, position = 97), Token(type = IDENTIFIER, value = NOT, position = 102), Token(type = IDENTIFIER, value = NULL, position = 106), Token(type = RPAREN, value = ), position = 111), Token(type = SEMICOLON, value = ;, position = 112)]
2025-05-11 18:54:30,525 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = CREATE, position = 0)
2025-05-11 18:54:30,525 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = TABLE, position = 7)
2025-05-11 18:54:30,525 - compiler.parser - DEBUG - Parsing table name....
2025-05-11 18:54:30,527 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = orders, position = 13)
2025-05-11 18:54:30,527 - compiler.parser - DEBUG - Table Name Found: orders
2025-05-11 18:54:30,527 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = orders, position = 13)
2025-05-11 18:54:30,527 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 20)
2025-05-11 18:54:30,527 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = order_id, position = 22)
2025-05-11 18:54:30,527 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INT, position = 31)
2025-05-11 18:54:30,527 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = PRIMARY, position = 35)
2025-05-11 18:54:30,527 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = KEY, position = 43)
2025-05-11 18:54:30,527 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 46)
2025-05-11 18:54:30,527 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = customer_id, position = 48)
2025-05-11 18:54:30,527 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INT, position = 60)
2025-05-11 18:54:30,527 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = NOT, position = 64)
2025-05-11 18:54:30,527 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = NULL, position = 68)
2025-05-11 18:54:30,527 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 72)
2025-05-11 18:54:30,527 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = order_date, position = 74)
2025-05-11 18:54:30,527 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = TEXT, position = 85)
2025-05-11 18:54:30,527 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 89)
2025-05-11 18:54:30,527 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = total, position = 91)
2025-05-11 18:54:30,527 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = REAL, position = 97)
2025-05-11 18:54:30,527 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = NOT, position = 102)
2025-05-11 18:54:30,527 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = NULL, position = 106)
2025-05-11 18:54:30,527 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 111)
2025-05-11 18:54:30,530 - compiler.code_generator - DEBUG - Creating Table: orders with columns: [('order_id', 'INT', ['PRIMARY KEY']), ('customer_id', 'INT', ['NOT NULL']), ('order_date', 'TEXT', []), ('total', 'REAL', ['NOT NULL'])]
2025-05-11 18:54:30,530 - compiler.code_generator - INFO - Table orders creation with columns finished.
2025-05-11 18:54:30,530 - compiler.code_generator - DEBUG - Generating execution plan for: CreateTableCommand
2025-05-11 18:54:30,530 - compiler.code_generator - DEBUG - Generating plan for CREATE TABLE command on table orders
2025-05-11 18:55:45,515 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = CREATE, position = 0), Token(type = KEYWORD, value = TABLE, position = 7), Token(type = IDENTIFIER, value = mixed, position = 13), Token(type = LPAREN, value = (, position = 19), Token(type = IDENTIFIER, value = id, position = 20), Token(type = KEYWORD, value = INT, position = 23), Token(type = RPAREN, value = ), position = 26), Token(type = SEMICOLON, value = ;, position = 27)]
2025-05-11 18:55:45,519 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = CREATE, position = 0)
2025-05-11 18:55:45,519 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = TABLE, position = 7)
2025-05-11 18:55:45,519 - compiler.parser - DEBUG - Parsing table name....
2025-05-11 18:55:45,519 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = mixed, position = 13)
2025-05-11 18:55:45,519 - compiler.parser - DEBUG - Table Name Found: mixed
2025-05-11 18:55:45,519 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = mixed, position = 13)
2025-05-11 18:55:45,519 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 19)
2025-05-11 18:55:45,520 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = id, position = 20)
2025-05-11 18:55:45,520 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INT, position = 23)
2025-05-11 18:55:45,520 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 26)
2025-05-11 18:55:45,522 - compiler.code_generator - DEBUG - Creating Table: mixed with columns: [('id', 'INT', [])]
2025-05-11 18:55:45,522 - compiler.code_generator - INFO - Table mixed creation with columns finished.
2025-05-11 18:55:45,522 - compiler.code_generator - DEBUG - Generating execution plan for: CreateTableCommand
2025-05-11 18:55:45,522 - compiler.code_generator - DEBUG - Generating plan for CREATE TABLE command on table mixed
2025-05-11 18:56:49,260 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = IDENTIFIER, value = a, position = 7), Token(type = DOT, value = ., position = 8), Token(type = IDENTIFIER, value = name, position = 9), Token(type = COMMA, value = ,, position = 13), Token(type = IDENTIFIER, value = b, position = 15), Token(type = DOT, value = ., position = 16), Token(type = IDENTIFIER, value = salary, position = 17), Token(type = KEYWORD, value = FROM, position = 24), Token(type = IDENTIFIER, value = employees, position = 29), Token(type = IDENTIFIER, value = a, position = 39), Token(type = COMMA, value = ,, position = 40), Token(type = IDENTIFIER, value = salaries, position = 42), Token(type = IDENTIFIER, value = b, position = 51), Token(type = SEMICOLON, value = ;, position = 52)]
2025-05-11 18:56:49,267 - compiler.statements.select_parser - DEBUG - Parsing SELECT statement...
2025-05-11 18:56:49,267 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-11 18:57:43,487 - compiler.tokenizer - ERROR - Invalid token at 42: >
2025-05-11 18:58:08,523 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = IDENTIFIER, value = name, position = 7), Token(type = COMMA, value = ,, position = 11), Token(type = IDENTIFIER, value = age, position = 13), Token(type = KEYWORD, value = FROM, position = 17), Token(type = IDENTIFIER, value = employees, position = 22), Token(type = KEYWORD, value = WHERE, position = 32), Token(type = IDENTIFIER, value = age, position = 38), Token(type = EQUALS, value = =, position = 42), Token(type = EQUALS, value = =, position = 43), Token(type = NUMBER, value = 30, position = 45), Token(type = SEMICOLON, value = ;, position = 47)]
2025-05-11 18:58:08,528 - compiler.statements.select_parser - DEBUG - Parsing SELECT statement...
2025-05-11 18:58:08,528 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-11 18:58:08,528 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 17)
2025-05-11 18:58:08,528 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = employees, position = 22)
2025-05-11 18:58:08,528 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = WHERE, position = 32)
2025-05-11 18:58:08,528 - compiler.parser - DEBUG - Parsing WHERE condition....
2025-05-11 18:58:08,528 - compiler.parser - DEBUG - Column Found: age
2025-05-11 18:58:08,528 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = age, position = 38)
2025-05-11 18:58:08,528 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 42)
2025-05-11 18:58:08,528 - compiler.parser - DEBUG - Value Found: =
2025-05-11 18:58:08,528 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 43)
2025-05-11 18:58:08,530 - compiler.code_generator - DEBUG - Generating execution plan for: SelectTableCommand
2025-05-11 18:58:08,530 - compiler.code_generator - DEBUG - Generating plan for SELECT command on table employees
2025-05-11 19:00:21,216 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = users, position = 7), Token(type = KEYWORD, value = SET, position = 13), Token(type = IDENTIFIER, value = name, position = 17), Token(type = EQUALS, value = =, position = 22), Token(type = QUOTE, value = ', position = 24), Token(type = IDENTIFIER, value = Alice, position = 25), Token(type = QUOTE, value = ', position = 30), Token(type = SEMICOLON, value = ;, position = 31)]
2025-05-11 19:00:21,220 - compiler.statements.update_parser - INFO - Parsing UPDATE statement...
2025-05-11 19:00:21,220 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-11 19:00:21,220 - compiler.statements.update_parser - DEBUG - Table name identified: users
2025-05-11 19:00:21,220 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SET, position = 13)
2025-05-11 19:00:21,220 - compiler.statements.update_parser - DEBUG - SET clause: {}
2025-05-11 19:00:21,222 - compiler.code_generator - DEBUG - Generating execution plan for: UpdateTableCommand
2025-05-11 19:00:21,222 - compiler.code_generator - DEBUG - Generating plan for UPDATE command on table users
2025-05-11 19:00:35,847 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = SET, position = 16), Token(type = IDENTIFIER, value = price, position = 20), Token(type = EQUALS, value = =, position = 26), Token(type = NUMBER, value = 19.99, position = 28), Token(type = KEYWORD, value = WHERE, position = 34), Token(type = IDENTIFIER, value = id, position = 40), Token(type = EQUALS, value = =, position = 43), Token(type = NUMBER, value = 1001, position = 45), Token(type = SEMICOLON, value = ;, position = 49)]
2025-05-11 19:00:35,851 - compiler.statements.update_parser - INFO - Parsing UPDATE statement...
2025-05-11 19:00:35,852 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-11 19:00:35,852 - compiler.statements.update_parser - DEBUG - Table name identified: products
2025-05-11 19:00:35,852 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SET, position = 16)
2025-05-11 19:00:35,852 - compiler.statements.update_parser - DEBUG - SET clause: {}
2025-05-11 19:00:35,854 - compiler.code_generator - DEBUG - Generating execution plan for: UpdateTableCommand
2025-05-11 19:00:35,854 - compiler.code_generator - DEBUG - Generating plan for UPDATE command on table products
2025-05-12 00:23:14,328 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = KEYWORD, value = TABLE, position = 7), Token(type = KEYWORD, value = SET, position = 13), Token(type = IDENTIFIER, value = col1, position = 17), Token(type = EQUALS, value = =, position = 22), Token(type = NUMBER, value = 1, position = 24), Token(type = KEYWORD, value = WHERE, position = 26), Token(type = IDENTIFIER, value = col2, position = 32), Token(type = EQUALS, value = =, position = 37), Token(type = NUMBER, value = 2, position = 39), Token(type = SEMICOLON, value = ;, position = 40)]
2025-05-12 00:23:14,333 - compiler.statements.update_parser - INFO - Starting UPDATE statement parsing
2025-05-12 00:23:14,333 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-12 00:23:14,333 - compiler.statements.update_parser - DEBUG - Consumed UPDATE keyword
2025-05-12 00:23:14,333 - compiler.statements.update_parser - ERROR - Expected table name after UPDATE, got TABLE
2025-05-12 00:26:08,417 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = KEYWORD, value = TABLE, position = 7), Token(type = KEYWORD, value = SET, position = 13), Token(type = IDENTIFIER, value = col1, position = 17), Token(type = EQUALS, value = =, position = 22), Token(type = NUMBER, value = 1, position = 24), Token(type = KEYWORD, value = WHERE, position = 26), Token(type = IDENTIFIER, value = col2, position = 32), Token(type = EQUALS, value = =, position = 37), Token(type = NUMBER, value = 2, position = 39), Token(type = SEMICOLON, value = ;, position = 40)]
2025-05-12 00:26:08,422 - compiler.statements.update_parser - INFO - Starting UPDATE statement parsing
2025-05-12 00:26:08,422 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-12 00:26:08,422 - compiler.statements.update_parser - DEBUG - Consumed UPDATE keyword
2025-05-12 00:26:08,422 - compiler.statements.update_parser - ERROR - Expected table name after UPDATE, got TABLE
2025-05-12 00:27:48,343 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = aman, position = 7), Token(type = KEYWORD, value = SET, position = 12), Token(type = IDENTIFIER, value = col1, position = 16), Token(type = EQUALS, value = =, position = 21), Token(type = NUMBER, value = 1, position = 23), Token(type = KEYWORD, value = WHERE, position = 25), Token(type = IDENTIFIER, value = col2, position = 31), Token(type = EQUALS, value = =, position = 36), Token(type = NUMBER, value = 2, position = 38), Token(type = SEMICOLON, value = ;, position = 39)]
2025-05-12 00:27:48,349 - compiler.statements.update_parser - INFO - Starting UPDATE statement parsing
2025-05-12 00:27:48,349 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-12 00:27:48,349 - compiler.statements.update_parser - DEBUG - Consumed UPDATE keyword
2025-05-12 00:27:48,349 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = aman, position = 7)
2025-05-12 00:27:48,349 - compiler.statements.update_parser - DEBUG - Identified table: aman
2025-05-12 00:27:48,349 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SET, position = 12)
2025-05-12 00:27:48,349 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = col1, position = 16)
2025-05-12 00:27:48,349 - compiler.statements.update_parser - DEBUG - Parsing SET clause
2025-05-12 00:27:48,349 - compiler.statements.update_parser - ERROR - SET clause must specify at least one column to update
2025-05-12 00:27:48,349 - compiler.statements.update_parser - ERROR - Error in SET clause: SET clause must specify at least one column to update
2025-05-12 00:34:30,117 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = aman, position = 7), Token(type = KEYWORD, value = SET, position = 12), Token(type = IDENTIFIER, value = col1, position = 16), Token(type = EQUALS, value = =, position = 21), Token(type = NUMBER, value = 1, position = 23), Token(type = KEYWORD, value = WHERE, position = 25), Token(type = IDENTIFIER, value = col2, position = 31), Token(type = EQUALS, value = =, position = 36), Token(type = NUMBER, value = 2, position = 38), Token(type = SEMICOLON, value = ;, position = 39)]
2025-05-12 00:34:30,122 - compiler.statements.update_parser - INFO - Parsing UPDATE statement
2025-05-12 00:34:30,122 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-12 00:34:30,122 - compiler.statements.update_parser - DEBUG - Consumed UPDATE keyword
2025-05-12 00:34:30,122 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = aman, position = 7)
2025-05-12 00:34:30,122 - compiler.statements.update_parser - DEBUG - Identified table: aman
2025-05-12 00:34:30,122 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SET, position = 12)
2025-05-12 00:34:30,122 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = col1, position = 16)
2025-05-12 00:34:30,122 - compiler.statements.update_parser - DEBUG - Parsing SET clause
2025-05-12 00:34:30,122 - compiler.parser - ERROR - SET clause parsing failed at position 4: Expected column name in SET clause
2025-05-12 00:34:30,122 - compiler.statements.update_parser - ERROR - Invalid SET clause: Expected column name in SET clause
2025-05-12 00:37:27,399 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = aman, position = 7), Token(type = KEYWORD, value = SET, position = 12), Token(type = IDENTIFIER, value = col1, position = 16), Token(type = EQUALS, value = =, position = 21), Token(type = NUMBER, value = 1, position = 23), Token(type = KEYWORD, value = WHERE, position = 25), Token(type = IDENTIFIER, value = col2, position = 31), Token(type = EQUALS, value = =, position = 36), Token(type = NUMBER, value = 2, position = 38), Token(type = SEMICOLON, value = ;, position = 39)]
2025-05-12 00:37:27,402 - compiler.statements.update_parser - INFO - Parsing UPDATE statement
2025-05-12 00:37:27,402 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-12 00:37:27,402 - compiler.statements.update_parser - DEBUG - Consumed UPDATE keyword
2025-05-12 00:37:27,402 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = aman, position = 7)
2025-05-12 00:37:27,402 - compiler.statements.update_parser - DEBUG - Identified table: aman
2025-05-12 00:37:27,402 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SET, position = 12)
2025-05-12 00:37:27,402 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = col1, position = 16)
2025-05-12 00:37:27,402 - compiler.statements.update_parser - DEBUG - Parsing SET clause
2025-05-12 00:37:27,402 - compiler.parser - DEBUG - Current token at SET clause start: Token(type = EQUALS, value = =, position = 21)
2025-05-12 00:37:27,402 - compiler.parser - ERROR - Expected column name, got Token(type = EQUALS, value = =, position = 21) at index 4
2025-05-12 00:37:27,402 - compiler.parser - ERROR - SET clause parsing failed at token index 4: Expected column name in SET clause
2025-05-12 00:37:27,402 - compiler.statements.update_parser - ERROR - Invalid SET clause: Expected column name in SET clause
2025-05-12 00:39:00,745 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = aman, position = 7), Token(type = KEYWORD, value = SET, position = 12), Token(type = IDENTIFIER, value = col1, position = 16), Token(type = EQUALS, value = =, position = 21), Token(type = NUMBER, value = 1, position = 23), Token(type = KEYWORD, value = WHERE, position = 25), Token(type = IDENTIFIER, value = col2, position = 31), Token(type = EQUALS, value = =, position = 36), Token(type = NUMBER, value = 2, position = 38), Token(type = SEMICOLON, value = ;, position = 39)]
2025-05-12 00:39:00,755 - compiler.parser - DEBUG - Initialized parser with 11 tokens
2025-05-12 00:39:00,755 - compiler.statements.update_parser - INFO - Parsing UPDATE statement
2025-05-12 00:39:00,755 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-12 00:39:00,755 - compiler.statements.update_parser - DEBUG - Consumed UPDATE keyword
2025-05-12 00:39:00,755 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = aman, position = 7)
2025-05-12 00:39:00,755 - compiler.statements.update_parser - DEBUG - Identified table: aman
2025-05-12 00:39:00,755 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SET, position = 12)
2025-05-12 00:39:00,755 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = col1, position = 16)
2025-05-12 00:39:00,755 - compiler.statements.update_parser - DEBUG - Parsing SET clause
2025-05-12 00:39:00,755 - compiler.parser - DEBUG - Current token at SET clause start: Token(type = EQUALS, value = =, position = 21)
2025-05-12 00:39:00,755 - compiler.parser - ERROR - Expected column name, got Token(type = EQUALS, value = =, position = 21) at index 4
2025-05-12 00:39:00,755 - compiler.parser - ERROR - SET clause parsing failed at token index 4: Expected column name in SET clause
2025-05-12 00:39:00,755 - compiler.statements.update_parser - ERROR - Invalid SET clause: Expected column name in SET clause
2025-05-12 00:42:07,783 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = aman, position = 7), Token(type = KEYWORD, value = SET, position = 12), Token(type = IDENTIFIER, value = col1, position = 16), Token(type = EQUALS, value = =, position = 21), Token(type = NUMBER, value = 1, position = 23), Token(type = KEYWORD, value = WHERE, position = 25), Token(type = IDENTIFIER, value = col2, position = 31), Token(type = EQUALS, value = =, position = 36), Token(type = NUMBER, value = 2, position = 38), Token(type = SEMICOLON, value = ;, position = 39)]
2025-05-12 00:42:07,786 - compiler.parser - DEBUG - Initialized parser with 11 tokens
2025-05-12 00:42:07,786 - compiler.statements.update_parser - INFO - Starting UPDATE statement parsing
2025-05-12 00:42:07,786 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-12 00:42:07,786 - compiler.statements.update_parser - DEBUG - Consumed UPDATE keyword
2025-05-12 00:42:07,786 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = aman, position = 7)
2025-05-12 00:42:07,786 - compiler.statements.update_parser - DEBUG - Identified table: aman
2025-05-12 00:42:07,786 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SET, position = 12)
2025-05-12 00:42:07,786 - compiler.statements.update_parser - DEBUG - Found SET keyword
2025-05-12 00:42:07,786 - compiler.parser - DEBUG - Beginning SET clause at token index 3
2025-05-12 00:42:07,786 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = col1, position = 16)
2025-05-12 00:42:07,786 - compiler.parser - DEBUG - Processing column: col1
2025-05-12 00:42:07,786 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 21)
2025-05-12 00:42:07,791 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 1, position = 23)
2025-05-12 00:42:07,791 - compiler.parser - ERROR - SET clause error at position 6: Invalid value type KEYWORD
2025-05-12 00:42:07,791 - compiler.statements.update_parser - ERROR - SET clause parsing failed: Invalid value type KEYWORD
2025-05-12 00:43:46,248 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = aman, position = 7), Token(type = KEYWORD, value = SET, position = 12), Token(type = IDENTIFIER, value = col1, position = 16), Token(type = EQUALS, value = =, position = 21), Token(type = NUMBER, value = 1, position = 23), Token(type = KEYWORD, value = WHERE, position = 25), Token(type = IDENTIFIER, value = col2, position = 31), Token(type = EQUALS, value = =, position = 36), Token(type = NUMBER, value = 2, position = 38), Token(type = SEMICOLON, value = ;, position = 39)]
2025-05-12 00:43:46,258 - compiler.parser - DEBUG - Initialized parser with 11 tokens
2025-05-12 00:43:46,258 - compiler.statements.update_parser - INFO - Starting UPDATE statement parsing
2025-05-12 00:43:46,258 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-12 00:43:46,258 - compiler.statements.update_parser - DEBUG - Consumed UPDATE keyword
2025-05-12 00:43:46,258 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = aman, position = 7)
2025-05-12 00:43:46,258 - compiler.statements.update_parser - DEBUG - Identified table: aman
2025-05-12 00:43:46,258 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SET, position = 12)
2025-05-12 00:43:46,258 - compiler.statements.update_parser - DEBUG - Found SET keyword
2025-05-12 00:43:46,258 - compiler.parser - DEBUG - Beginning SET clause parsing at token index 3
2025-05-12 00:43:46,258 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = col1, position = 16)
2025-05-12 00:43:46,258 - compiler.parser - DEBUG - Processing column: col1
2025-05-12 00:43:46,258 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 21)
2025-05-12 00:43:46,258 - compiler.parser - DEBUG - Found equals sign
2025-05-12 00:43:46,258 - compiler.parser - DEBUG - Found value token: Token(type = NUMBER, value = 1, position = 23)
2025-05-12 00:43:46,258 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 1, position = 23)
2025-05-12 00:43:46,258 - compiler.parser - DEBUG - Assigned col1 = 1
2025-05-12 00:43:46,258 - compiler.parser - DEBUG - Completed SET clause with 1 assignments
2025-05-12 00:43:46,258 - compiler.statements.update_parser - DEBUG - Parsed 1 column assignments
2025-05-12 00:43:46,258 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = WHERE, position = 25)
2025-05-12 00:43:46,258 - compiler.statements.update_parser - DEBUG - Parsing WHERE clause
2025-05-12 00:43:46,258 - compiler.parser - DEBUG - Parsing WHERE condition....
2025-05-12 00:43:46,258 - compiler.parser - DEBUG - Column Found: col2
2025-05-12 00:43:46,258 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = col2, position = 31)
2025-05-12 00:43:46,260 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 36)
2025-05-12 00:43:46,260 - compiler.parser - DEBUG - Value Found: 2
2025-05-12 00:43:46,260 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 2, position = 38)
2025-05-12 00:43:46,260 - compiler.statements.update_parser - DEBUG - Parsed condition: {'column': 'col2', 'value': '2'}
2025-05-12 00:43:46,260 - compiler.statements.update_parser - INFO - Successfully parsed UPDATE statement for table 'aman'
2025-05-12 00:43:46,262 - compiler.code_generator - DEBUG - Generating execution plan for: UpdateTableCommand
2025-05-12 00:43:46,263 - compiler.code_generator - DEBUG - Starting UPDATE plan generation for table aman
2025-05-12 00:43:46,263 - compiler.code_generator - CRITICAL - UPDATE plan generation failed: 'PlanGenerator' object has no attribute 'schema_registry'
2025-05-12 00:45:31,349 - compiler.tokenizer - ERROR - Invalid token at 0: 
2025-05-12 00:45:41,301 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = employees, position = 7), Token(type = KEYWORD, value = SET, position = 17), Token(type = IDENTIFIER, value = salary, position = 21), Token(type = EQUALS, value = =, position = 28), Token(type = NUMBER, value = 75000, position = 30), Token(type = KEYWORD, value = WHERE, position = 36), Token(type = IDENTIFIER, value = id, position = 42), Token(type = EQUALS, value = =, position = 45), Token(type = NUMBER, value = 42, position = 47), Token(type = IDENTIFIER, value = AND, position = 50), Token(type = IDENTIFIER, value = status, position = 54), Token(type = EQUALS, value = =, position = 61), Token(type = QUOTE, value = ', position = 63), Token(type = IDENTIFIER, value = active, position = 64), Token(type = QUOTE, value = ', position = 70), Token(type = SEMICOLON, value = ;, position = 71)]
2025-05-12 00:45:41,315 - compiler.parser - DEBUG - Initialized parser with 17 tokens
2025-05-12 00:45:41,315 - compiler.statements.update_parser - INFO - Starting UPDATE statement parsing
2025-05-12 00:45:41,315 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-12 00:45:41,315 - compiler.statements.update_parser - DEBUG - Consumed UPDATE keyword
2025-05-12 00:45:41,315 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = employees, position = 7)
2025-05-12 00:45:41,315 - compiler.statements.update_parser - DEBUG - Identified table: employees
2025-05-12 00:45:41,315 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SET, position = 17)
2025-05-12 00:45:41,315 - compiler.statements.update_parser - DEBUG - Found SET keyword
2025-05-12 00:45:41,315 - compiler.parser - DEBUG - Beginning SET clause parsing at token index 3
2025-05-12 00:45:41,315 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = salary, position = 21)
2025-05-12 00:45:41,315 - compiler.parser - DEBUG - Processing column: salary
2025-05-12 00:45:41,315 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 28)
2025-05-12 00:45:41,315 - compiler.parser - DEBUG - Found equals sign
2025-05-12 00:45:41,315 - compiler.parser - DEBUG - Found value token: Token(type = NUMBER, value = 75000, position = 30)
2025-05-12 00:45:41,315 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 75000, position = 30)
2025-05-12 00:45:41,315 - compiler.parser - DEBUG - Assigned salary = 75000
2025-05-12 00:45:41,315 - compiler.parser - DEBUG - Completed SET clause with 1 assignments
2025-05-12 00:45:41,315 - compiler.statements.update_parser - DEBUG - Parsed 1 column assignments
2025-05-12 00:45:41,315 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = WHERE, position = 36)
2025-05-12 00:45:41,316 - compiler.statements.update_parser - DEBUG - Parsing WHERE clause
2025-05-12 00:45:41,316 - compiler.parser - DEBUG - Parsing WHERE condition....
2025-05-12 00:45:41,316 - compiler.parser - DEBUG - Column Found: id
2025-05-12 00:45:41,316 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = id, position = 42)
2025-05-12 00:45:41,316 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 45)
2025-05-12 00:45:41,316 - compiler.parser - DEBUG - Value Found: 42
2025-05-12 00:45:41,316 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 42, position = 47)
2025-05-12 00:45:41,316 - compiler.statements.update_parser - DEBUG - Parsed condition: {'column': 'id', 'value': '42'}
2025-05-12 00:45:41,316 - compiler.statements.update_parser - WARNING - Unexpected token at end of UPDATE: AND
2025-05-12 00:45:41,316 - compiler.statements.update_parser - INFO - Successfully parsed UPDATE statement for table 'employees'
2025-05-12 00:45:41,318 - compiler.code_generator - DEBUG - Generating execution plan for: UpdateTableCommand
2025-05-12 00:45:41,318 - compiler.code_generator - DEBUG - Starting UPDATE plan generation for table employees
2025-05-12 00:45:41,318 - compiler.code_generator - CRITICAL - UPDATE plan generation failed: 'PlanGenerator' object has no attribute 'schema_registry'
2025-05-12 00:46:22,417 - compiler.tokenizer - ERROR - Invalid token at 101: <
2025-05-12 00:46:33,876 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = SET, position = 16), Token(type = IDENTIFIER, value = category, position = 20), Token(type = EQUALS, value = =, position = 29), Token(type = QUOTE, value = ', position = 31), Token(type = IDENTIFIER, value = clearance, position = 32), Token(type = QUOTE, value = ', position = 41), Token(type = KEYWORD, value = WHERE, position = 43), Token(type = IDENTIFIER, value = id, position = 49), Token(type = IDENTIFIER, value = IN, position = 52), Token(type = LPAREN, value = (, position = 55), Token(type = KEYWORD, value = SELECT, position = 56), Token(type = IDENTIFIER, value = product_id, position = 63), Token(type = KEYWORD, value = FROM, position = 74), Token(type = IDENTIFIER, value = inventory, position = 79), Token(type = KEYWORD, value = WHERE, position = 89), Token(type = IDENTIFIER, value = stock, position = 95), Token(type = EQUALS, value = =, position = 101), Token(type = EQUALS, value = =, position = 102), Token(type = NUMBER, value = 5, position = 104), Token(type = RPAREN, value = ), position = 105), Token(type = SEMICOLON, value = ;, position = 106)]
2025-05-12 00:46:33,882 - compiler.parser - DEBUG - Initialized parser with 23 tokens
2025-05-12 00:46:33,882 - compiler.statements.update_parser - INFO - Starting UPDATE statement parsing
2025-05-12 00:46:33,882 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-12 00:46:33,882 - compiler.statements.update_parser - DEBUG - Consumed UPDATE keyword
2025-05-12 00:46:33,882 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 7)
2025-05-12 00:46:33,882 - compiler.statements.update_parser - DEBUG - Identified table: products
2025-05-12 00:46:33,882 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SET, position = 16)
2025-05-12 00:46:33,882 - compiler.statements.update_parser - DEBUG - Found SET keyword
2025-05-12 00:46:33,882 - compiler.parser - DEBUG - Beginning SET clause parsing at token index 3
2025-05-12 00:46:33,882 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = category, position = 20)
2025-05-12 00:46:33,882 - compiler.parser - DEBUG - Processing column: category
2025-05-12 00:46:33,882 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 29)
2025-05-12 00:46:33,882 - compiler.parser - DEBUG - Found equals sign
2025-05-12 00:46:33,882 - compiler.parser - DEBUG - Found value token: Token(type = QUOTE, value = ', position = 31)
2025-05-12 00:46:33,882 - compiler.parser - ERROR - SET clause error at token index 5: Invalid value type QUOTE
2025-05-12 00:46:33,882 - compiler.statements.update_parser - ERROR - SET clause parsing failed: Invalid value type QUOTE
2025-05-12 00:46:47,903 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = SET, position = 16), Token(type = IDENTIFIER, value = category, position = 20), Token(type = EQUALS, value = =, position = 29), Token(type = QUOTE, value = ', position = 31), Token(type = IDENTIFIER, value = clearance, position = 32), Token(type = QUOTE, value = ', position = 41), Token(type = KEYWORD, value = WHERE, position = 43), Token(type = IDENTIFIER, value = id, position = 49), Token(type = IDENTIFIER, value = IN, position = 52), Token(type = LPAREN, value = (, position = 55), Token(type = KEYWORD, value = SELECT, position = 56), Token(type = IDENTIFIER, value = product_id, position = 63), Token(type = KEYWORD, value = FROM, position = 74), Token(type = IDENTIFIER, value = inventory, position = 79), Token(type = KEYWORD, value = WHERE, position = 89), Token(type = IDENTIFIER, value = stock, position = 95), Token(type = EQUALS, value = =, position = 101), Token(type = NUMBER, value = 5, position = 103), Token(type = RPAREN, value = ), position = 104), Token(type = SEMICOLON, value = ;, position = 105)]
2025-05-12 00:46:47,908 - compiler.parser - DEBUG - Initialized parser with 22 tokens
2025-05-12 00:46:47,908 - compiler.statements.update_parser - INFO - Starting UPDATE statement parsing
2025-05-12 00:46:47,908 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-12 00:46:47,908 - compiler.statements.update_parser - DEBUG - Consumed UPDATE keyword
2025-05-12 00:46:47,908 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 7)
2025-05-12 00:46:47,908 - compiler.statements.update_parser - DEBUG - Identified table: products
2025-05-12 00:46:47,908 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SET, position = 16)
2025-05-12 00:46:47,908 - compiler.statements.update_parser - DEBUG - Found SET keyword
2025-05-12 00:46:47,908 - compiler.parser - DEBUG - Beginning SET clause parsing at token index 3
2025-05-12 00:46:47,908 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = category, position = 20)
2025-05-12 00:46:47,908 - compiler.parser - DEBUG - Processing column: category
2025-05-12 00:46:47,908 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 29)
2025-05-12 00:46:47,908 - compiler.parser - DEBUG - Found equals sign
2025-05-12 00:46:47,908 - compiler.parser - DEBUG - Found value token: Token(type = QUOTE, value = ', position = 31)
2025-05-12 00:46:47,908 - compiler.parser - ERROR - SET clause error at token index 5: Invalid value type QUOTE
2025-05-12 00:46:47,911 - compiler.statements.update_parser - ERROR - SET clause parsing failed: Invalid value type QUOTE
2025-05-12 00:48:01,776 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = SET, position = 16), Token(type = IDENTIFIER, value = category, position = 20), Token(type = EQUALS, value = =, position = 29), Token(type = QUOTE, value = ', position = 31), Token(type = IDENTIFIER, value = clearance, position = 32), Token(type = QUOTE, value = ', position = 41), Token(type = KEYWORD, value = WHERE, position = 43), Token(type = IDENTIFIER, value = id, position = 49), Token(type = IDENTIFIER, value = IN, position = 52), Token(type = LPAREN, value = (, position = 55), Token(type = KEYWORD, value = SELECT, position = 56), Token(type = IDENTIFIER, value = product_id, position = 63), Token(type = KEYWORD, value = FROM, position = 74), Token(type = IDENTIFIER, value = inventory, position = 79), Token(type = KEYWORD, value = WHERE, position = 89), Token(type = IDENTIFIER, value = stock, position = 95), Token(type = EQUALS, value = =, position = 101), Token(type = NUMBER, value = 5, position = 103), Token(type = RPAREN, value = ), position = 104), Token(type = SEMICOLON, value = ;, position = 105)]
2025-05-12 00:48:01,788 - compiler.parser - DEBUG - Initialized parser with 22 tokens
2025-05-12 00:48:01,788 - compiler.statements.update_parser - INFO - Starting UPDATE statement parsing
2025-05-12 00:48:01,788 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-12 00:48:01,788 - compiler.statements.update_parser - DEBUG - Consumed UPDATE keyword
2025-05-12 00:48:01,788 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 7)
2025-05-12 00:48:01,788 - compiler.statements.update_parser - DEBUG - Identified table: products
2025-05-12 00:48:01,788 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SET, position = 16)
2025-05-12 00:48:01,788 - compiler.statements.update_parser - DEBUG - Found SET keyword
2025-05-12 00:48:01,788 - compiler.parser - DEBUG - Starting SET clause parsing
2025-05-12 00:48:01,788 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = category, position = 20)
2025-05-12 00:48:01,788 - compiler.parser - DEBUG - Processing column: category
2025-05-12 00:48:01,788 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 29)
2025-05-12 00:48:01,788 - compiler.parser - DEBUG - Processed token: Token(type = QUOTE, value = ', position = 31)
2025-05-12 00:48:01,788 - compiler.parser - ERROR - SET clause error at position 6: Expected string after quote
2025-05-12 00:48:01,788 - compiler.statements.update_parser - ERROR - SET clause parsing failed: Expected string after quote
2025-05-12 00:49:01,916 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = SET, position = 16), Token(type = IDENTIFIER, value = category, position = 20), Token(type = EQUALS, value = =, position = 29), Token(type = STRING, value = clearance, position = 31), Token(type = KEYWORD, value = WHERE, position = 43), Token(type = IDENTIFIER, value = id, position = 49), Token(type = IDENTIFIER, value = IN, position = 52), Token(type = LPAREN, value = (, position = 55), Token(type = KEYWORD, value = SELECT, position = 56), Token(type = IDENTIFIER, value = product_id, position = 63), Token(type = KEYWORD, value = FROM, position = 74), Token(type = IDENTIFIER, value = inventory, position = 79), Token(type = KEYWORD, value = WHERE, position = 89), Token(type = IDENTIFIER, value = stock, position = 95), Token(type = EQUALS, value = =, position = 101), Token(type = NUMBER, value = 5, position = 103), Token(type = RPAREN, value = ), position = 104), Token(type = SEMICOLON, value = ;, position = 105)]
2025-05-12 00:49:01,919 - compiler.parser - DEBUG - Initialized parser with 20 tokens
2025-05-12 00:49:01,919 - compiler.statements.update_parser - INFO - Starting UPDATE statement parsing
2025-05-12 00:49:01,919 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-12 00:49:01,919 - compiler.statements.update_parser - DEBUG - Consumed UPDATE keyword
2025-05-12 00:49:01,919 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 7)
2025-05-12 00:49:01,919 - compiler.statements.update_parser - DEBUG - Identified table: products
2025-05-12 00:49:01,919 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SET, position = 16)
2025-05-12 00:49:01,919 - compiler.statements.update_parser - DEBUG - Found SET keyword
2025-05-12 00:49:01,919 - compiler.parser - DEBUG - Starting SET clause parsing
2025-05-12 00:49:01,919 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = category, position = 20)
2025-05-12 00:49:01,919 - compiler.parser - DEBUG - Processing column: category
2025-05-12 00:49:01,919 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 29)
2025-05-12 00:49:01,919 - compiler.parser - DEBUG - Processed token: Token(type = STRING, value = clearance, position = 31)
2025-05-12 00:49:01,919 - compiler.parser - DEBUG - Assigned category = clearance
2025-05-12 00:49:01,919 - compiler.parser - INFO - Parsed SET clause with 1 assignments
2025-05-12 00:49:01,919 - compiler.statements.update_parser - DEBUG - Parsed 1 column assignments
2025-05-12 00:49:01,919 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = WHERE, position = 43)
2025-05-12 00:49:01,919 - compiler.statements.update_parser - DEBUG - Parsing WHERE clause
2025-05-12 00:49:01,924 - compiler.parser - DEBUG - Parsing WHERE condition....
2025-05-12 00:49:01,924 - compiler.parser - DEBUG - Column Found: id
2025-05-12 00:49:01,924 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = id, position = 49)
2025-05-12 00:49:01,924 - compiler.parser - ERROR - Expected '=' after column name in WHERE clause.
2025-05-12 00:49:01,924 - compiler.statements.update_parser - ERROR - WHERE clause error: Expected '=' after column name in WHERE clause.
2025-05-12 00:49:14,826 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = SET, position = 16), Token(type = IDENTIFIER, value = category, position = 20), Token(type = EQUALS, value = =, position = 29), Token(type = STRING, value = clearance, position = 31), Token(type = KEYWORD, value = WHERE, position = 43), Token(type = IDENTIFIER, value = id, position = 49), Token(type = IDENTIFIER, value = IN, position = 52), Token(type = LPAREN, value = (, position = 55), Token(type = KEYWORD, value = SELECT, position = 56), Token(type = IDENTIFIER, value = product_id, position = 63), Token(type = KEYWORD, value = FROM, position = 74), Token(type = IDENTIFIER, value = inventory, position = 79), Token(type = KEYWORD, value = WHERE, position = 89), Token(type = IDENTIFIER, value = stock, position = 95), Token(type = EQUALS, value = =, position = 101), Token(type = EQUALS, value = =, position = 102), Token(type = NUMBER, value = 5, position = 104), Token(type = RPAREN, value = ), position = 105), Token(type = SEMICOLON, value = ;, position = 106)]
2025-05-12 00:49:14,833 - compiler.parser - DEBUG - Initialized parser with 21 tokens
2025-05-12 00:49:14,833 - compiler.statements.update_parser - INFO - Starting UPDATE statement parsing
2025-05-12 00:49:14,833 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-12 00:49:14,833 - compiler.statements.update_parser - DEBUG - Consumed UPDATE keyword
2025-05-12 00:49:14,833 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 7)
2025-05-12 00:49:14,833 - compiler.statements.update_parser - DEBUG - Identified table: products
2025-05-12 00:49:14,833 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SET, position = 16)
2025-05-12 00:49:14,833 - compiler.statements.update_parser - DEBUG - Found SET keyword
2025-05-12 00:49:14,833 - compiler.parser - DEBUG - Starting SET clause parsing
2025-05-12 00:49:14,833 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = category, position = 20)
2025-05-12 00:49:14,833 - compiler.parser - DEBUG - Processing column: category
2025-05-12 00:49:14,833 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 29)
2025-05-12 00:49:14,833 - compiler.parser - DEBUG - Processed token: Token(type = STRING, value = clearance, position = 31)
2025-05-12 00:49:14,833 - compiler.parser - DEBUG - Assigned category = clearance
2025-05-12 00:49:14,833 - compiler.parser - INFO - Parsed SET clause with 1 assignments
2025-05-12 00:49:14,833 - compiler.statements.update_parser - DEBUG - Parsed 1 column assignments
2025-05-12 00:49:14,833 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = WHERE, position = 43)
2025-05-12 00:49:14,834 - compiler.statements.update_parser - DEBUG - Parsing WHERE clause
2025-05-12 00:49:14,834 - compiler.parser - DEBUG - Parsing WHERE condition....
2025-05-12 00:49:14,834 - compiler.parser - DEBUG - Column Found: id
2025-05-12 00:49:14,834 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = id, position = 49)
2025-05-12 00:49:14,834 - compiler.parser - ERROR - Expected '=' after column name in WHERE clause.
2025-05-12 00:49:14,834 - compiler.statements.update_parser - ERROR - WHERE clause error: Expected '=' after column name in WHERE clause.
2025-05-12 00:49:55,853 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = SET, position = 16), Token(type = IDENTIFIER, value = category, position = 20), Token(type = EQUALS, value = =, position = 29), Token(type = STRING, value = clearance, position = 31), Token(type = KEYWORD, value = WHERE, position = 43), Token(type = IDENTIFIER, value = id, position = 49), Token(type = IDENTIFIER, value = IN, position = 52), Token(type = LPAREN, value = (, position = 55), Token(type = KEYWORD, value = SELECT, position = 56), Token(type = IDENTIFIER, value = product_id, position = 63), Token(type = KEYWORD, value = FROM, position = 74), Token(type = IDENTIFIER, value = inventory, position = 79), Token(type = KEYWORD, value = WHERE, position = 89), Token(type = IDENTIFIER, value = stock, position = 95), Token(type = EQUALS, value = =, position = 101), Token(type = EQUALS, value = =, position = 102), Token(type = NUMBER, value = 5, position = 104), Token(type = RPAREN, value = ), position = 105), Token(type = SEMICOLON, value = ;, position = 106)]
2025-05-12 00:49:55,861 - compiler.parser - DEBUG - Initialized parser with 21 tokens
2025-05-12 00:49:55,861 - compiler.statements.update_parser - INFO - Starting UPDATE statement parsing
2025-05-12 00:49:55,861 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-12 00:49:55,861 - compiler.statements.update_parser - DEBUG - Consumed UPDATE keyword
2025-05-12 00:49:55,862 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 7)
2025-05-12 00:49:55,862 - compiler.statements.update_parser - DEBUG - Identified table: products
2025-05-12 00:49:55,862 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SET, position = 16)
2025-05-12 00:49:55,862 - compiler.statements.update_parser - DEBUG - Found SET keyword
2025-05-12 00:49:55,862 - compiler.parser - DEBUG - Starting SET clause parsing at index 3
2025-05-12 00:49:55,862 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = category, position = 20)
2025-05-12 00:49:55,862 - compiler.parser - DEBUG - Processing column assignment: category
2025-05-12 00:49:55,862 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 29)
2025-05-12 00:49:55,862 - compiler.parser - DEBUG - Processing value token: Token(type = STRING, value = clearance, position = 31)
2025-05-12 00:49:55,862 - compiler.parser - DEBUG - Processed token: Token(type = STRING, value = clearance, position = 31)
2025-05-12 00:49:55,862 - compiler.parser - DEBUG - Assigned category = learanc
2025-05-12 00:49:55,862 - compiler.parser - INFO - Successfully parsed SET clause with 1 assignments
2025-05-12 00:49:55,862 - compiler.statements.update_parser - DEBUG - Parsed 1 column assignments
2025-05-12 00:49:55,862 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = WHERE, position = 43)
2025-05-12 00:49:55,862 - compiler.statements.update_parser - DEBUG - Parsing WHERE clause
2025-05-12 00:49:55,862 - compiler.parser - DEBUG - Parsing WHERE condition....
2025-05-12 00:49:55,862 - compiler.parser - DEBUG - Column Found: id
2025-05-12 00:49:55,862 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = id, position = 49)
2025-05-12 00:49:55,862 - compiler.parser - ERROR - Expected '=' after column name in WHERE clause.
2025-05-12 00:49:55,862 - compiler.statements.update_parser - ERROR - WHERE clause error: Expected '=' after column name in WHERE clause.
2025-05-12 00:53:32,930 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = SET, position = 16), Token(type = IDENTIFIER, value = category, position = 20), Token(type = EQUALS, value = =, position = 29), Token(type = STRING, value = clearance, position = 31), Token(type = KEYWORD, value = WHERE, position = 43), Token(type = IDENTIFIER, value = id, position = 49), Token(type = IDENTIFIER, value = IN, position = 52), Token(type = LPAREN, value = (, position = 55), Token(type = KEYWORD, value = SELECT, position = 56), Token(type = IDENTIFIER, value = product_id, position = 63), Token(type = KEYWORD, value = FROM, position = 74), Token(type = IDENTIFIER, value = inventory, position = 79), Token(type = KEYWORD, value = WHERE, position = 89), Token(type = IDENTIFIER, value = stock, position = 95), Token(type = EQUALS, value = =, position = 101), Token(type = EQUALS, value = =, position = 102), Token(type = NUMBER, value = 5, position = 104), Token(type = RPAREN, value = ), position = 105), Token(type = SEMICOLON, value = ;, position = 106)]
2025-05-12 00:53:32,932 - compiler.parser - DEBUG - Initialized parser with 21 tokens
2025-05-12 00:53:32,932 - compiler.statements.update_parser - INFO - Starting UPDATE statement parsing
2025-05-12 00:53:32,932 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-12 00:53:32,932 - compiler.statements.update_parser - DEBUG - Consumed UPDATE keyword
2025-05-12 00:53:32,932 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 7)
2025-05-12 00:53:32,932 - compiler.statements.update_parser - DEBUG - Identified table: products
2025-05-12 00:53:32,932 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SET, position = 16)
2025-05-12 00:53:32,932 - compiler.statements.update_parser - DEBUG - Found SET keyword
2025-05-12 00:53:32,932 - compiler.parser - DEBUG - Starting SET clause parsing at index 3
2025-05-12 00:53:32,932 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = category, position = 20)
2025-05-12 00:53:32,932 - compiler.parser - DEBUG - Processing column assignment: category
2025-05-12 00:53:32,932 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 29)
2025-05-12 00:53:32,932 - compiler.parser - DEBUG - Processing value token: Token(type = STRING, value = clearance, position = 31)
2025-05-12 00:53:32,932 - compiler.parser - DEBUG - Processed token: Token(type = STRING, value = clearance, position = 31)
2025-05-12 00:53:32,932 - compiler.parser - DEBUG - Assigned category = learanc
2025-05-12 00:53:32,932 - compiler.parser - INFO - Successfully parsed SET clause with 1 assignments
2025-05-12 00:53:32,932 - compiler.statements.update_parser - DEBUG - Parsed 1 column assignments
2025-05-12 00:53:32,932 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = WHERE, position = 43)
2025-05-12 00:53:32,932 - compiler.statements.update_parser - DEBUG - Parsing WHERE clause
2025-05-12 00:53:32,932 - compiler.parser - DEBUG - Parsing WHERE condition
2025-05-12 00:53:32,932 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = id, position = 49)
2025-05-12 00:53:32,940 - compiler.parser - DEBUG - Found WHERE column: id
2025-05-12 00:53:32,940 - compiler.parser - ERROR - WHERE clause parsing failed: Expected comparison operator, got IDENTIFIER
2025-05-12 00:53:32,940 - compiler.statements.update_parser - ERROR - WHERE clause error: Invalid WHERE clause: Expected comparison operator, got IDENTIFIER
2025-05-12 00:54:16,668 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = SET, position = 16), Token(type = IDENTIFIER, value = category, position = 20), Token(type = EQUALS, value = =, position = 29), Token(type = STRING, value = clearance, position = 31), Token(type = KEYWORD, value = WHERE, position = 43), Token(type = IDENTIFIER, value = id, position = 49), Token(type = IDENTIFIER, value = IN, position = 52), Token(type = LPAREN, value = (, position = 55), Token(type = KEYWORD, value = SELECT, position = 56), Token(type = IDENTIFIER, value = product_id, position = 63), Token(type = KEYWORD, value = FROM, position = 74), Token(type = IDENTIFIER, value = inventory, position = 79), Token(type = KEYWORD, value = WHERE, position = 89), Token(type = IDENTIFIER, value = stock, position = 95), Token(type = EQUALS, value = =, position = 101), Token(type = NUMBER, value = 5, position = 103), Token(type = RPAREN, value = ), position = 104), Token(type = SEMICOLON, value = ;, position = 105)]
2025-05-12 00:54:16,674 - compiler.parser - DEBUG - Initialized parser with 20 tokens
2025-05-12 00:54:16,674 - compiler.statements.update_parser - INFO - Starting UPDATE statement parsing
2025-05-12 00:54:16,674 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-12 00:54:16,674 - compiler.statements.update_parser - DEBUG - Consumed UPDATE keyword
2025-05-12 00:54:16,674 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 7)
2025-05-12 00:54:16,674 - compiler.statements.update_parser - DEBUG - Identified table: products
2025-05-12 00:54:16,674 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SET, position = 16)
2025-05-12 00:54:16,674 - compiler.statements.update_parser - DEBUG - Found SET keyword
2025-05-12 00:54:16,674 - compiler.parser - DEBUG - Starting SET clause parsing at index 3
2025-05-12 00:54:16,674 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = category, position = 20)
2025-05-12 00:54:16,674 - compiler.parser - DEBUG - Processing column assignment: category
2025-05-12 00:54:16,674 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 29)
2025-05-12 00:54:16,674 - compiler.parser - DEBUG - Processing value token: Token(type = STRING, value = clearance, position = 31)
2025-05-12 00:54:16,674 - compiler.parser - DEBUG - Processed token: Token(type = STRING, value = clearance, position = 31)
2025-05-12 00:54:16,674 - compiler.parser - DEBUG - Assigned category = learanc
2025-05-12 00:54:16,674 - compiler.parser - INFO - Successfully parsed SET clause with 1 assignments
2025-05-12 00:54:16,674 - compiler.statements.update_parser - DEBUG - Parsed 1 column assignments
2025-05-12 00:54:16,674 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = WHERE, position = 43)
2025-05-12 00:54:16,674 - compiler.statements.update_parser - DEBUG - Parsing WHERE clause
2025-05-12 00:54:16,674 - compiler.parser - DEBUG - Parsing WHERE condition
2025-05-12 00:54:16,674 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = id, position = 49)
2025-05-12 00:54:16,674 - compiler.parser - DEBUG - Found WHERE column: id
2025-05-12 00:54:16,674 - compiler.parser - ERROR - WHERE clause parsing failed: Expected comparison operator, got IDENTIFIER
2025-05-12 00:54:16,674 - compiler.statements.update_parser - ERROR - WHERE clause error: Invalid WHERE clause: Expected comparison operator, got IDENTIFIER
2025-05-12 00:55:09,880 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = SET, position = 16), Token(type = IDENTIFIER, value = category, position = 20), Token(type = EQUALS, value = =, position = 29), Token(type = STRING, value = clearance, position = 31), Token(type = KEYWORD, value = WHERE, position = 43), Token(type = IDENTIFIER, value = id, position = 49), Token(type = IDENTIFIER, value = IN, position = 52), Token(type = LPAREN, value = (, position = 55), Token(type = KEYWORD, value = SELECT, position = 56), Token(type = IDENTIFIER, value = product_id, position = 63), Token(type = KEYWORD, value = FROM, position = 74), Token(type = IDENTIFIER, value = inventory, position = 79), Token(type = KEYWORD, value = WHERE, position = 89), Token(type = IDENTIFIER, value = stock, position = 95), Token(type = EQUALS, value = =, position = 101), Token(type = NUMBER, value = 5, position = 103), Token(type = RPAREN, value = ), position = 104), Token(type = SEMICOLON, value = ;, position = 105)]
2025-05-12 00:55:09,885 - compiler.parser - DEBUG - Initialized parser with 20 tokens
2025-05-12 00:55:09,885 - compiler.statements.update_parser - INFO - Starting UPDATE statement parsing
2025-05-12 00:55:09,885 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-12 00:55:09,885 - compiler.statements.update_parser - DEBUG - Consumed UPDATE keyword
2025-05-12 00:55:09,885 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 7)
2025-05-12 00:55:09,885 - compiler.statements.update_parser - DEBUG - Identified table: products
2025-05-12 00:55:09,885 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SET, position = 16)
2025-05-12 00:55:09,885 - compiler.statements.update_parser - DEBUG - Found SET keyword
2025-05-12 00:55:09,885 - compiler.parser - DEBUG - Starting SET clause parsing at index 3
2025-05-12 00:55:09,885 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = category, position = 20)
2025-05-12 00:55:09,885 - compiler.parser - DEBUG - Processing column assignment: category
2025-05-12 00:55:09,885 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 29)
2025-05-12 00:55:09,885 - compiler.parser - DEBUG - Processing value token: Token(type = STRING, value = clearance, position = 31)
2025-05-12 00:55:09,885 - compiler.parser - DEBUG - Processed token: Token(type = STRING, value = clearance, position = 31)
2025-05-12 00:55:09,885 - compiler.parser - DEBUG - Assigned category = learanc
2025-05-12 00:55:09,885 - compiler.parser - INFO - Successfully parsed SET clause with 1 assignments
2025-05-12 00:55:09,889 - compiler.statements.update_parser - DEBUG - Parsed 1 column assignments
2025-05-12 00:55:09,889 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = WHERE, position = 43)
2025-05-12 00:55:09,889 - compiler.statements.update_parser - DEBUG - Parsing WHERE clause
2025-05-12 00:55:09,889 - compiler.parser - DEBUG - Parsing WHERE condition
2025-05-12 00:55:09,889 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = id, position = 49)
2025-05-12 00:55:09,889 - compiler.parser - DEBUG - Found WHERE column: id
2025-05-12 00:55:09,889 - compiler.parser - ERROR - WHERE clause parsing failed at position 8: Expected comparison operator (=, !=, <, >, <=, >=), got IDENTIFIER
2025-05-12 00:55:09,889 - compiler.statements.update_parser - ERROR - WHERE clause error: Invalid WHERE clause: Expected comparison operator (=, !=, <, >, <=, >=), got IDENTIFIER
2025-05-12 00:57:23,946 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = SET, position = 16), Token(type = IDENTIFIER, value = category, position = 20), Token(type = EQUALS, value = =, position = 29), Token(type = STRING, value = clearance, position = 31), Token(type = KEYWORD, value = WHERE, position = 43), Token(type = IDENTIFIER, value = id, position = 49), Token(type = IDENTIFIER, value = IN, position = 52), Token(type = LPAREN, value = (, position = 55), Token(type = KEYWORD, value = SELECT, position = 56), Token(type = IDENTIFIER, value = product_id, position = 63), Token(type = KEYWORD, value = FROM, position = 74), Token(type = IDENTIFIER, value = inventory, position = 79), Token(type = KEYWORD, value = WHERE, position = 89), Token(type = IDENTIFIER, value = stock, position = 95), Token(type = EQUALS, value = =, position = 101), Token(type = NUMBER, value = 5, position = 103), Token(type = RPAREN, value = ), position = 104), Token(type = SEMICOLON, value = ;, position = 105)]
2025-05-12 00:57:23,954 - compiler.parser - DEBUG - Initialized parser with 20 tokens
2025-05-12 00:57:23,954 - compiler.statements.update_parser - INFO - Starting UPDATE statement parsing
2025-05-12 00:57:23,954 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-12 00:57:23,954 - compiler.statements.update_parser - DEBUG - Consumed UPDATE keyword
2025-05-12 00:57:23,954 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 7)
2025-05-12 00:57:23,954 - compiler.statements.update_parser - DEBUG - Identified table: products
2025-05-12 00:57:23,954 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SET, position = 16)
2025-05-12 00:57:23,954 - compiler.statements.update_parser - DEBUG - Found SET keyword
2025-05-12 00:57:23,954 - compiler.parser - DEBUG - Starting SET clause parsing at index 3
2025-05-12 00:57:23,954 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = category, position = 20)
2025-05-12 00:57:23,954 - compiler.parser - DEBUG - Processing column assignment: category
2025-05-12 00:57:23,954 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 29)
2025-05-12 00:57:23,954 - compiler.parser - DEBUG - Processing value token: Token(type = STRING, value = clearance, position = 31)
2025-05-12 00:57:23,954 - compiler.parser - DEBUG - Processed token: Token(type = STRING, value = clearance, position = 31)
2025-05-12 00:57:23,954 - compiler.parser - DEBUG - Assigned category = learanc
2025-05-12 00:57:23,954 - compiler.parser - INFO - Successfully parsed SET clause with 1 assignments
2025-05-12 00:57:23,955 - compiler.statements.update_parser - DEBUG - Parsed 1 column assignments
2025-05-12 00:57:23,955 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = WHERE, position = 43)
2025-05-12 00:57:23,955 - compiler.statements.update_parser - DEBUG - Parsing WHERE clause
2025-05-12 00:57:23,955 - compiler.parser - DEBUG - Parsing WHERE condition
2025-05-12 00:57:23,955 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = id, position = 49)
2025-05-12 00:57:23,955 - compiler.parser - DEBUG - Found WHERE column: id
2025-05-12 00:57:23,955 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = IN, position = 52)
2025-05-12 00:57:23,955 - compiler.statements.update_parser - DEBUG - Parsed condition: {'type': 'column_compare', 'left_column': 'id', 'right_column': 'IN'}
2025-05-12 00:57:23,955 - compiler.statements.update_parser - WARNING - Unexpected token at end of UPDATE: (
2025-05-12 00:57:23,955 - compiler.statements.update_parser - INFO - Successfully parsed UPDATE statement for table 'products'
2025-05-12 00:57:23,958 - compiler.code_generator - DEBUG - Generating execution plan for: UpdateTableCommand
2025-05-12 00:57:23,958 - compiler.code_generator - DEBUG - Starting UPDATE plan generation for table products
2025-05-12 00:57:23,958 - compiler.code_generator - CRITICAL - UPDATE plan generation failed: 'PlanGenerator' object has no attribute 'schema_registry'
2025-05-12 00:58:46,000 - compiler.tokenizer - ERROR - Invalid token at 110: >
2025-05-12 00:58:53,905 - compiler.tokenizer - ERROR - Invalid token at 110: >
2025-05-12 00:59:15,206 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = CREATE, position = 0), Token(type = KEYWORD, value = TABLE, position = 7), Token(type = IDENTIFIER, value = products, position = 13), Token(type = LPAREN, value = (, position = 22), Token(type = IDENTIFIER, value = product_id, position = 24), Token(type = KEYWORD, value = INT, position = 35), Token(type = IDENTIFIER, value = PRIMARY, position = 39), Token(type = IDENTIFIER, value = KEY, position = 47), Token(type = IDENTIFIER, value = AUTOINCREMENT, position = 51), Token(type = COMMA, value = ,, position = 64), Token(type = IDENTIFIER, value = name, position = 66), Token(type = KEYWORD, value = TEXT, position = 71), Token(type = IDENTIFIER, value = NOT, position = 76), Token(type = IDENTIFIER, value = NULL, position = 80), Token(type = COMMA, value = ,, position = 84), Token(type = IDENTIFIER, value = price, position = 86), Token(type = KEYWORD, value = REAL, position = 92), Token(type = IDENTIFIER, value = CHECK, position = 97), Token(type = LPAREN, value = (, position = 103), Token(type = IDENTIFIER, value = price, position = 104), Token(type = EQUALS, value = =, position = 110), Token(type = EQUALS, value = =, position = 111), Token(type = NUMBER, value = 0, position = 113), Token(type = RPAREN, value = ), position = 114), Token(type = COMMA, value = ,, position = 115), Token(type = IDENTIFIER, value = category, position = 117), Token(type = KEYWORD, value = TEXT, position = 126), Token(type = IDENTIFIER, value = DEFAULT, position = 131), Token(type = STRING, value = general, position = 139), Token(type = COMMA, value = ,, position = 148), Token(type = IDENTIFIER, value = stock, position = 150), Token(type = KEYWORD, value = INT, position = 156), Token(type = IDENTIFIER, value = DEFAULT, position = 160), Token(type = NUMBER, value = 0, position = 168), Token(type = IDENTIFIER, value = CHECK, position = 170), Token(type = LPAREN, value = (, position = 176), Token(type = IDENTIFIER, value = stock, position = 177), Token(type = EQUALS, value = =, position = 183), Token(type = EQUALS, value = =, position = 184), Token(type = NUMBER, value = 0, position = 186), Token(type = RPAREN, value = ), position = 187), Token(type = RPAREN, value = ), position = 189), Token(type = SEMICOLON, value = ;, position = 190)]
2025-05-12 00:59:15,219 - compiler.parser - DEBUG - Initialized parser with 43 tokens
2025-05-12 00:59:15,219 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = CREATE, position = 0)
2025-05-12 00:59:15,219 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = TABLE, position = 7)
2025-05-12 00:59:15,221 - compiler.parser - DEBUG - Parsing table name....
2025-05-12 00:59:15,221 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = products, position = 13)
2025-05-12 00:59:15,221 - compiler.parser - DEBUG - Table Name Found: products
2025-05-12 00:59:15,221 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 13)
2025-05-12 00:59:15,221 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 22)
2025-05-12 00:59:15,221 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = product_id, position = 24)
2025-05-12 00:59:15,221 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INT, position = 35)
2025-05-12 00:59:15,221 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = PRIMARY, position = 39)
2025-05-12 00:59:15,221 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = KEY, position = 47)
2025-05-12 00:59:15,221 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = AUTOINCREMENT, position = 51)
2025-05-12 00:59:15,221 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 64)
2025-05-12 00:59:15,221 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = name, position = 66)
2025-05-12 00:59:15,221 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = TEXT, position = 71)
2025-05-12 00:59:15,221 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = NOT, position = 76)
2025-05-12 00:59:15,221 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = NULL, position = 80)
2025-05-12 00:59:15,221 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 84)
2025-05-12 00:59:15,221 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = price, position = 86)
2025-05-12 00:59:15,221 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = REAL, position = 92)
2025-05-12 00:59:15,221 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = CHECK, position = 97)
2025-05-12 00:59:15,221 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 103)
2025-05-12 00:59:15,221 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = price, position = 104)
2025-05-12 00:59:15,221 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 110)
2025-05-12 00:59:15,221 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 111)
2025-05-12 00:59:15,221 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 0, position = 113)
2025-05-12 00:59:15,221 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 114)
2025-05-12 00:59:15,224 - compiler.code_generator - DEBUG - Creating Table: products with columns: [('product_id', 'INT', ['PRIMARY KEY', 'AUTOINCREMENT']), ('name', 'TEXT', ['NOT NULL']), ('price', 'REAL', ['CHECK', 'PRICE'])]
2025-05-12 00:59:15,225 - compiler.code_generator - INFO - Table products creation with columns finished.
2025-05-12 00:59:15,225 - compiler.code_generator - DEBUG - Generating execution plan for: CreateTableCommand
2025-05-12 00:59:15,225 - compiler.code_generator - DEBUG - Generating plan for CREATE TABLE command on table products
2025-05-12 00:59:52,035 - compiler.tokenizer - ERROR - Invalid token at 92: <
2025-05-12 01:00:00,595 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = IDENTIFIER, value = name, position = 7), Token(type = KEYWORD, value = FROM, position = 12), Token(type = IDENTIFIER, value = products, position = 17), Token(type = KEYWORD, value = WHERE, position = 26), Token(type = IDENTIFIER, value = product_id, position = 32), Token(type = IDENTIFIER, value = IN, position = 43), Token(type = LPAREN, value = (, position = 46), Token(type = KEYWORD, value = SELECT, position = 47), Token(type = IDENTIFIER, value = product_id, position = 54), Token(type = KEYWORD, value = FROM, position = 65), Token(type = IDENTIFIER, value = inventory, position = 70), Token(type = KEYWORD, value = WHERE, position = 80), Token(type = IDENTIFIER, value = stock, position = 86), Token(type = EQUALS, value = =, position = 92), Token(type = EQUALS, value = =, position = 93), Token(type = NUMBER, value = 10, position = 95), Token(type = RPAREN, value = ), position = 97), Token(type = SEMICOLON, value = ;, position = 98)]
2025-05-12 01:00:00,602 - compiler.parser - DEBUG - Initialized parser with 19 tokens
2025-05-12 01:00:00,602 - compiler.statements.select_parser - DEBUG - Parsing SELECT statement...
2025-05-12 01:00:00,602 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-12 01:00:00,602 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 12)
2025-05-12 01:00:00,602 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 17)
2025-05-12 01:00:00,602 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = WHERE, position = 26)
2025-05-12 01:00:00,602 - compiler.parser - DEBUG - Parsing WHERE condition
2025-05-12 01:00:00,602 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = product_id, position = 32)
2025-05-12 01:00:00,602 - compiler.parser - DEBUG - Found WHERE column: product_id
2025-05-12 01:00:00,605 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = IN, position = 43)
2025-05-12 01:00:00,609 - compiler.code_generator - DEBUG - Generating execution plan for: SelectTableCommand
2025-05-12 01:00:00,609 - compiler.code_generator - DEBUG - Generating plan for SELECT command on table products
2025-05-12 01:01:15,524 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = IDENTIFIER, value = name, position = 7), Token(type = KEYWORD, value = FROM, position = 12), Token(type = IDENTIFIER, value = products, position = 17), Token(type = KEYWORD, value = WHERE, position = 26), Token(type = IDENTIFIER, value = product_id, position = 32), Token(type = IDENTIFIER, value = IN, position = 43), Token(type = LPAREN, value = (, position = 46), Token(type = KEYWORD, value = SELECT, position = 47), Token(type = IDENTIFIER, value = product_id, position = 54), Token(type = KEYWORD, value = FROM, position = 65), Token(type = IDENTIFIER, value = inventory, position = 70), Token(type = KEYWORD, value = WHERE, position = 80), Token(type = IDENTIFIER, value = stock, position = 86), Token(type = LESSTHAN, value = <, position = 92), Token(type = NUMBER, value = 10, position = 94), Token(type = RPAREN, value = ), position = 96), Token(type = SEMICOLON, value = ;, position = 97)]
2025-05-12 01:01:15,528 - compiler.parser - DEBUG - Initialized parser with 18 tokens
2025-05-12 01:01:15,528 - compiler.statements.select_parser - DEBUG - Parsing SELECT statement...
2025-05-12 01:01:15,528 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-12 01:01:15,528 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 12)
2025-05-12 01:01:15,528 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 17)
2025-05-12 01:01:15,528 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = WHERE, position = 26)
2025-05-12 01:01:15,528 - compiler.parser - DEBUG - Parsing WHERE condition
2025-05-12 01:01:15,528 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = product_id, position = 32)
2025-05-12 01:01:15,528 - compiler.parser - DEBUG - Found WHERE column: product_id
2025-05-12 01:01:15,528 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = IN, position = 43)
2025-05-12 01:01:15,534 - compiler.code_generator - DEBUG - Generating execution plan for: SelectTableCommand
2025-05-12 01:01:15,534 - compiler.code_generator - DEBUG - Generating plan for SELECT command on table products
2025-05-12 01:03:55,328 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = DELETE, position = 0), Token(type = KEYWORD, value = FROM, position = 7), Token(type = IDENTIFIER, value = orders, position = 12), Token(type = KEYWORD, value = WHERE, position = 19), Token(type = IDENTIFIER, value = status, position = 25), Token(type = EQUALS, value = =, position = 32), Token(type = STRING, value = cancelled, position = 34), Token(type = IDENTIFIER, value = AND, position = 46), Token(type = IDENTIFIER, value = created_at, position = 50), Token(type = LESSTHAN, value = <, position = 61), Token(type = STRING, value = 2023-01-01, position = 63), Token(type = SEMICOLON, value = ;, position = 75)]
2025-05-12 01:03:55,328 - compiler.parser - DEBUG - Initialized parser with 12 tokens
2025-05-12 01:03:55,328 - compiler.statements.delete_parser - INFO - Parsing DELETE statement....
2025-05-12 01:03:55,328 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = DELETE, position = 0)
2025-05-12 01:03:55,328 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 7)
2025-05-12 01:03:55,328 - compiler.statements.delete_parser - DEBUG - Token before table_name: Token(type = IDENTIFIER, value = orders, position = 12)
2025-05-12 01:03:55,328 - compiler.parser - DEBUG - Parsing table name....
2025-05-12 01:03:55,328 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = orders, position = 12)
2025-05-12 01:03:55,328 - compiler.parser - DEBUG - Table Name Found: orders
2025-05-12 01:03:55,328 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = orders, position = 12)
2025-05-12 01:03:55,328 - compiler.statements.delete_parser - DEBUG - DELETE FROM: orders
2025-05-12 01:03:55,328 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = WHERE, position = 19)
2025-05-12 01:03:55,328 - compiler.parser - DEBUG - Parsing WHERE condition
2025-05-12 01:03:55,336 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = status, position = 25)
2025-05-12 01:03:55,336 - compiler.parser - DEBUG - Found WHERE column: status
2025-05-12 01:03:55,336 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 32)
2025-05-12 01:03:55,336 - compiler.parser - DEBUG - Found operator: =
2025-05-12 01:03:55,336 - compiler.parser - DEBUG - Processed token: Token(type = STRING, value = cancelled, position = 34)
2025-05-12 01:03:55,336 - compiler.statements.delete_parser - DEBUG - WHERE condition: {'type': 'value_compare', 'column': 'status', 'operator': '=', 'value': 'cancelled'}
2025-05-12 01:03:55,336 - compiler.statements.delete_parser - INFO - DELETE parsed: table = orders, WHERE condition = {'type': 'value_compare', 'column': 'status', 'operator': '=', 'value': 'cancelled'}
2025-05-12 01:03:55,339 - compiler.code_generator - DEBUG - Generating execution plan for: DeleteCommand
2025-05-12 01:03:55,339 - compiler.code_generator - DEBUG - Generating plan for DELETE command on table orders
2025-05-12 01:04:22,385 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = DELETE, position = 0), Token(type = IDENTIFIER, value = users, position = 7), Token(type = KEYWORD, value = WHERE, position = 13), Token(type = IDENTIFIER, value = id, position = 19), Token(type = EQUALS, value = =, position = 22), Token(type = NUMBER, value = 1, position = 24), Token(type = SEMICOLON, value = ;, position = 25)]
2025-05-12 01:04:22,389 - compiler.parser - DEBUG - Initialized parser with 7 tokens
2025-05-12 01:04:22,389 - compiler.statements.delete_parser - INFO - Parsing DELETE statement....
2025-05-12 01:04:22,389 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = DELETE, position = 0)
2025-05-12 01:04:22,389 - compiler.statements.delete_parser - ERROR - Expected 'FROM' after DELETE...
2025-05-12 01:05:26,500 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = messages, position = 12), Token(type = LPAREN, value = (, position = 21), Token(type = IDENTIFIER, value = content, position = 22), Token(type = RPAREN, value = ), position = 29), Token(type = KEYWORD, value = VALUES, position = 31), Token(type = LPAREN, value = (, position = 38), Token(type = STRING, value = Don, position = 39), Token(type = STRING, value = t forget the meeting!, position = 44), Token(type = RPAREN, value = ), position = 67), Token(type = SEMICOLON, value = ;, position = 68)]
2025-05-12 01:05:26,500 - compiler.parser - DEBUG - Initialized parser with 12 tokens
2025-05-12 01:05:26,500 - compiler.statements.insert_parser - DEBUG - Parsing INSERT statement...
2025-05-12 01:05:26,500 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-12 01:05:26,500 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-12 01:05:26,500 - compiler.parser - DEBUG - Parsing table name....
2025-05-12 01:05:26,500 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = messages, position = 12)
2025-05-12 01:05:26,500 - compiler.parser - DEBUG - Table Name Found: messages
2025-05-12 01:05:26,500 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = messages, position = 12)
2025-05-12 01:05:26,500 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 21)
2025-05-12 01:05:26,500 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 29)
2025-05-12 01:05:26,500 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = VALUES, position = 31)
2025-05-12 01:05:26,500 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 38)
2025-05-12 01:05:26,500 - compiler.parser - DEBUG - Processed token: Token(type = STRING, value = Don, position = 39)
2025-05-12 01:05:26,500 - compiler.parser - DEBUG - Processed token: Token(type = STRING, value = t forget the meeting!, position = 44)
2025-05-12 01:05:26,500 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 67)
2025-05-12 01:05:26,500 - compiler.parser - DEBUG - Processed token: Token(type = SEMICOLON, value = ;, position = 68)
2025-05-12 01:05:26,509 - compiler.code_generator - DEBUG - Generating execution plan for: InsertCommand
2025-05-12 01:05:26,510 - compiler.code_generator - DEBUG - Generating plan for INSERT command on table messages
2025-05-12 01:05:39,891 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = users, position = 12), Token(type = LPAREN, value = (, position = 18), Token(type = IDENTIFIER, value = id, position = 19), Token(type = COMMA, value = ,, position = 21), Token(type = IDENTIFIER, value = name, position = 23), Token(type = COMMA, value = ,, position = 27), Token(type = IDENTIFIER, value = email, position = 29), Token(type = RPAREN, value = ), position = 34), Token(type = KEYWORD, value = VALUES, position = 36), Token(type = LPAREN, value = (, position = 43), Token(type = NUMBER, value = 1, position = 44), Token(type = COMMA, value = ,, position = 45), Token(type = STRING, value = John Doe, position = 47), Token(type = COMMA, value = ,, position = 57), Token(type = STRING, value = john@example.com, position = 59), Token(type = RPAREN, value = ), position = 77), Token(type = SEMICOLON, value = ;, position = 78)]
2025-05-12 01:05:39,901 - compiler.parser - DEBUG - Initialized parser with 19 tokens
2025-05-12 01:05:39,901 - compiler.statements.insert_parser - DEBUG - Parsing INSERT statement...
2025-05-12 01:05:39,901 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-12 01:05:39,901 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-12 01:05:39,901 - compiler.parser - DEBUG - Parsing table name....
2025-05-12 01:05:39,901 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = users, position = 12)
2025-05-12 01:05:39,901 - compiler.parser - DEBUG - Table Name Found: users
2025-05-12 01:05:39,901 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = users, position = 12)
2025-05-12 01:05:39,901 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 18)
2025-05-12 01:05:39,901 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 34)
2025-05-12 01:05:39,901 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = VALUES, position = 36)
2025-05-12 01:05:39,901 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 43)
2025-05-12 01:05:39,901 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 1, position = 44)
2025-05-12 01:05:39,901 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 45)
2025-05-12 01:05:39,901 - compiler.parser - DEBUG - Processed token: Token(type = STRING, value = John Doe, position = 47)
2025-05-12 01:05:39,901 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 57)
2025-05-12 01:05:39,901 - compiler.parser - DEBUG - Processed token: Token(type = STRING, value = john@example.com, position = 59)
2025-05-12 01:05:39,901 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 77)
2025-05-12 01:05:39,901 - compiler.parser - DEBUG - Processed token: Token(type = SEMICOLON, value = ;, position = 78)
2025-05-12 01:05:39,904 - compiler.code_generator - DEBUG - Generating execution plan for: InsertCommand
2025-05-12 01:05:39,904 - compiler.code_generator - DEBUG - Generating plan for INSERT command on table users
2025-05-12 01:05:54,428 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = orders, position = 12), Token(type = LPAREN, value = (, position = 19), Token(type = IDENTIFIER, value = product_id, position = 20), Token(type = COMMA, value = ,, position = 30), Token(type = IDENTIFIER, value = quantity, position = 32), Token(type = RPAREN, value = ), position = 40)]
2025-05-12 01:05:54,432 - compiler.parser - DEBUG - Initialized parser with 8 tokens
2025-05-12 01:05:54,433 - compiler.statements.insert_parser - DEBUG - Parsing INSERT statement...
2025-05-12 01:05:54,433 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-12 01:05:54,433 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-12 01:05:54,433 - compiler.parser - DEBUG - Parsing table name....
2025-05-12 01:05:54,433 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = orders, position = 12)
2025-05-12 01:05:54,433 - compiler.parser - DEBUG - Table Name Found: orders
2025-05-12 01:05:54,433 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = orders, position = 12)
2025-05-12 01:05:54,433 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 19)
2025-05-12 01:05:54,433 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 40)
2025-05-12 01:06:09,202 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = orders, position = 12), Token(type = LPAREN, value = (, position = 19), Token(type = IDENTIFIER, value = product_id, position = 20), Token(type = COMMA, value = ,, position = 30), Token(type = IDENTIFIER, value = quantity, position = 32), Token(type = RPAREN, value = ), position = 40), Token(type = KEYWORD, value = VALUES, position = 42), Token(type = LPAREN, value = (, position = 49), Token(type = NUMBER, value = 101, position = 50), Token(type = COMMA, value = ,, position = 53), Token(type = NUMBER, value = 2, position = 55), Token(type = RPAREN, value = ), position = 56), Token(type = COMMA, value = ,, position = 57), Token(type = LPAREN, value = (, position = 59), Token(type = NUMBER, value = 205, position = 60), Token(type = COMMA, value = ,, position = 63), Token(type = NUMBER, value = 1, position = 65), Token(type = RPAREN, value = ), position = 66), Token(type = COMMA, value = ,, position = 67), Token(type = LPAREN, value = (, position = 69), Token(type = NUMBER, value = 307, position = 70), Token(type = COMMA, value = ,, position = 73), Token(type = NUMBER, value = 5, position = 75), Token(type = RPAREN, value = ), position = 76), Token(type = SEMICOLON, value = ;, position = 77)]
2025-05-12 01:06:09,211 - compiler.parser - DEBUG - Initialized parser with 27 tokens
2025-05-12 01:06:09,211 - compiler.statements.insert_parser - DEBUG - Parsing INSERT statement...
2025-05-12 01:06:09,211 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-12 01:06:09,211 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-12 01:06:09,211 - compiler.parser - DEBUG - Parsing table name....
2025-05-12 01:06:09,211 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = orders, position = 12)
2025-05-12 01:06:09,211 - compiler.parser - DEBUG - Table Name Found: orders
2025-05-12 01:06:09,211 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = orders, position = 12)
2025-05-12 01:06:09,211 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 19)
2025-05-12 01:06:09,211 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 40)
2025-05-12 01:06:09,211 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = VALUES, position = 42)
2025-05-12 01:06:09,211 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 49)
2025-05-12 01:06:09,211 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 101, position = 50)
2025-05-12 01:06:09,211 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 53)
2025-05-12 01:06:09,211 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 2, position = 55)
2025-05-12 01:06:09,211 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 56)
2025-05-12 01:06:34,538 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = employees, position = 12), Token(type = LPAREN, value = (, position = 22), Token(type = IDENTIFIER, value = id, position = 23), Token(type = COMMA, value = ,, position = 25), Token(type = IDENTIFIER, value = name, position = 27), Token(type = COMMA, value = ,, position = 31), Token(type = IDENTIFIER, value = manager_id, position = 33), Token(type = RPAREN, value = ), position = 43), Token(type = KEYWORD, value = VALUES, position = 45), Token(type = LPAREN, value = (, position = 52), Token(type = NUMBER, value = 501, position = 53), Token(type = COMMA, value = ,, position = 56), Token(type = STRING, value = Jane Smith, position = 58), Token(type = COMMA, value = ,, position = 70), Token(type = IDENTIFIER, value = NULL, position = 72), Token(type = RPAREN, value = ), position = 76), Token(type = SEMICOLON, value = ;, position = 77)]
2025-05-12 01:06:34,542 - compiler.parser - DEBUG - Initialized parser with 19 tokens
2025-05-12 01:06:34,542 - compiler.statements.insert_parser - DEBUG - Parsing INSERT statement...
2025-05-12 01:06:34,542 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-12 01:06:34,542 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-12 01:06:34,542 - compiler.parser - DEBUG - Parsing table name....
2025-05-12 01:06:34,542 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = employees, position = 12)
2025-05-12 01:06:34,542 - compiler.parser - DEBUG - Table Name Found: employees
2025-05-12 01:06:34,542 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = employees, position = 12)
2025-05-12 01:06:34,542 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 22)
2025-05-12 01:06:34,542 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 43)
2025-05-12 01:06:34,542 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = VALUES, position = 45)
2025-05-12 01:06:34,542 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 52)
2025-05-12 01:06:34,542 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 501, position = 53)
2025-05-12 01:06:34,542 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 56)
2025-05-12 01:06:34,542 - compiler.parser - DEBUG - Processed token: Token(type = STRING, value = Jane Smith, position = 58)
2025-05-12 01:06:34,542 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 70)
2025-05-12 01:08:41,747 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = orders, position = 12), Token(type = LPAREN, value = (, position = 19), Token(type = IDENTIFIER, value = product_id, position = 20), Token(type = COMMA, value = ,, position = 30), Token(type = IDENTIFIER, value = quantity, position = 32), Token(type = RPAREN, value = ), position = 40), Token(type = KEYWORD, value = VALUES, position = 42), Token(type = LPAREN, value = (, position = 49), Token(type = NUMBER, value = 101, position = 50), Token(type = COMMA, value = ,, position = 53), Token(type = NUMBER, value = 2, position = 55), Token(type = RPAREN, value = ), position = 56), Token(type = COMMA, value = ,, position = 57), Token(type = LPAREN, value = (, position = 59), Token(type = NUMBER, value = 205, position = 60), Token(type = COMMA, value = ,, position = 63), Token(type = NUMBER, value = 1, position = 65), Token(type = RPAREN, value = ), position = 66), Token(type = COMMA, value = ,, position = 67), Token(type = LPAREN, value = (, position = 69), Token(type = NUMBER, value = 307, position = 70), Token(type = COMMA, value = ,, position = 73), Token(type = NUMBER, value = 5, position = 75), Token(type = RPAREN, value = ), position = 76), Token(type = SEMICOLON, value = ;, position = 77)]
2025-05-12 01:08:41,765 - compiler.parser - DEBUG - Initialized parser with 27 tokens
2025-05-12 01:08:41,765 - compiler.statements.insert_parser - DEBUG - Parsing INSERT statement...
2025-05-12 01:08:41,765 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-12 01:08:41,765 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-12 01:08:41,765 - compiler.parser - DEBUG - Parsing table name....
2025-05-12 01:08:41,765 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = orders, position = 12)
2025-05-12 01:08:41,765 - compiler.parser - DEBUG - Table Name Found: orders
2025-05-12 01:08:41,765 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = orders, position = 12)
2025-05-12 01:08:41,765 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 19)
2025-05-12 01:08:41,765 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 40)
2025-05-12 01:08:41,765 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = VALUES, position = 42)
2025-05-12 01:08:41,765 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 49)
2025-05-12 01:08:41,765 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 101, position = 50)
2025-05-12 01:08:41,765 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 53)
2025-05-12 01:08:41,765 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 2, position = 55)
2025-05-12 01:08:41,765 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 56)
2025-05-12 01:08:41,765 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 57)
2025-05-12 01:08:41,765 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 59)
2025-05-12 01:08:41,765 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 205, position = 60)
2025-05-12 01:08:41,765 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 63)
2025-05-12 01:08:41,765 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 1, position = 65)
2025-05-12 01:08:41,765 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 66)
2025-05-12 01:08:41,765 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 67)
2025-05-12 01:08:41,765 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 69)
2025-05-12 01:08:41,765 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 307, position = 70)
2025-05-12 01:08:41,765 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 73)
2025-05-12 01:08:41,765 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 5, position = 75)
2025-05-12 01:08:41,765 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 76)
2025-05-12 01:08:41,765 - compiler.parser - DEBUG - Processed token: Token(type = SEMICOLON, value = ;, position = 77)
2025-05-12 01:08:41,765 - compiler.statements.insert_parser - WARNING - Multi-row INSERT detected - only first row will be processed
2025-05-12 01:08:41,769 - compiler.code_generator - DEBUG - Generating execution plan for: InsertCommand
2025-05-12 01:08:41,769 - compiler.code_generator - DEBUG - Generating plan for INSERT command on table orders
2025-05-12 01:13:13,589 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = IDENTIFIER, value = name, position = 7), Token(type = KEYWORD, value = FROM, position = 12), Token(type = IDENTIFIER, value = users, position = 17), Token(type = KEYWORD, value = WHERE, position = 23), Token(type = IDENTIFIER, value = age, position = 29), Token(type = GREATERTHAN, value = >, position = 33), Token(type = NUMBER, value = 21, position = 35), Token(type = SEMICOLON, value = ;, position = 37)]
2025-05-12 01:13:13,593 - compiler.parser - DEBUG - Initialized parser with 9 tokens
2025-05-12 01:13:13,593 - compiler.statements.select_parser - DEBUG - Parsing SELECT statement...
2025-05-12 01:13:13,593 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-12 01:13:13,593 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 12)
2025-05-12 01:13:13,593 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = users, position = 17)
2025-05-12 01:13:13,593 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = WHERE, position = 23)
2025-05-12 01:13:13,593 - compiler.parser - DEBUG - Parsing WHERE condition
2025-05-12 01:13:13,593 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = age, position = 29)
2025-05-12 01:13:13,593 - compiler.parser - DEBUG - Found WHERE column: age
2025-05-12 01:13:13,593 - compiler.parser - DEBUG - Processed token: Token(type = GREATERTHAN, value = >, position = 33)
2025-05-12 01:13:13,593 - compiler.parser - DEBUG - Found operator: >
2025-05-12 01:13:13,593 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 21, position = 35)
2025-05-12 01:13:13,597 - compiler.code_generator - INFO - Generating execution plan for SelectTableCommand
2025-05-12 01:13:13,597 - compiler.code_generator - DEBUG - Generating SELECT plan for users
2025-05-12 01:13:13,597 - compiler.code_generator - DEBUG - Generated SELECT plan: [('OPEN_TABLE', 'users'), 'SCAN_START', ('LOAD_COLUMN', 'age'), ('LOAD_CONST', '21'), 'COMPARE_EQ', ('JUMP_IF_FALSE', 'label_1'), ('EMIT_ROW', ['name']), ('LABEL', 'label_1'), 'SCAN_END']
2025-05-12 01:13:26,444 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = SET, position = 16), Token(type = IDENTIFIER, value = price, position = 20), Token(type = EQUALS, value = =, position = 25), Token(type = NUMBER, value = 19.99, position = 26), Token(type = KEYWORD, value = WHERE, position = 32), Token(type = IDENTIFIER, value = id, position = 38), Token(type = EQUALS, value = =, position = 40), Token(type = NUMBER, value = 1001, position = 41), Token(type = SEMICOLON, value = ;, position = 45)]
2025-05-12 01:13:26,450 - compiler.parser - DEBUG - Initialized parser with 11 tokens
2025-05-12 01:13:26,450 - compiler.statements.update_parser - INFO - Starting UPDATE statement parsing
2025-05-12 01:13:26,450 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-12 01:13:26,450 - compiler.statements.update_parser - DEBUG - Consumed UPDATE keyword
2025-05-12 01:13:26,450 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 7)
2025-05-12 01:13:26,450 - compiler.statements.update_parser - DEBUG - Identified table: products
2025-05-12 01:13:26,450 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SET, position = 16)
2025-05-12 01:13:26,450 - compiler.statements.update_parser - DEBUG - Found SET keyword
2025-05-12 01:13:26,450 - compiler.parser - DEBUG - Starting SET clause parsing at index 3
2025-05-12 01:13:26,450 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = price, position = 20)
2025-05-12 01:13:26,450 - compiler.parser - DEBUG - Processing column assignment: price
2025-05-12 01:13:26,450 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 25)
2025-05-12 01:13:26,450 - compiler.parser - DEBUG - Processing value token: Token(type = NUMBER, value = 19.99, position = 26)
2025-05-12 01:13:26,450 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 19.99, position = 26)
2025-05-12 01:13:26,450 - compiler.parser - DEBUG - Assigned price = 19.99
2025-05-12 01:13:26,450 - compiler.parser - INFO - Successfully parsed SET clause with 1 assignments
2025-05-12 01:13:26,450 - compiler.statements.update_parser - DEBUG - Parsed 1 column assignments
2025-05-12 01:13:26,450 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = WHERE, position = 32)
2025-05-12 01:13:26,450 - compiler.statements.update_parser - DEBUG - Parsing WHERE clause
2025-05-12 01:13:26,450 - compiler.parser - DEBUG - Parsing WHERE condition
2025-05-12 01:13:26,450 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = id, position = 38)
2025-05-12 01:13:26,452 - compiler.parser - DEBUG - Found WHERE column: id
2025-05-12 01:13:26,452 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 40)
2025-05-12 01:13:26,452 - compiler.parser - DEBUG - Found operator: =
2025-05-12 01:13:26,452 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 1001, position = 41)
2025-05-12 01:13:26,452 - compiler.statements.update_parser - DEBUG - Parsed condition: {'type': 'value_compare', 'column': 'id', 'operator': '=', 'value': '1001'}
2025-05-12 01:13:26,452 - compiler.statements.update_parser - INFO - Successfully parsed UPDATE statement for table 'products'
2025-05-12 01:13:26,455 - compiler.code_generator - INFO - Generating execution plan for UpdateTableCommand
2025-05-12 01:13:26,455 - compiler.code_generator - DEBUG - Generating UPDATE plan for products
2025-05-12 01:13:26,455 - compiler.code_generator - ERROR - Plan generation failed: Code Generation Error: Table 'products' not found
2025-05-12 01:15:15,103 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = SET, position = 16), Token(type = IDENTIFIER, value = price, position = 20), Token(type = EQUALS, value = =, position = 25), Token(type = NUMBER, value = 19.99, position = 26), Token(type = KEYWORD, value = WHERE, position = 32), Token(type = IDENTIFIER, value = id, position = 38), Token(type = EQUALS, value = =, position = 40), Token(type = NUMBER, value = 1001, position = 41)]
2025-05-12 01:15:15,104 - compiler.parser - DEBUG - Initialized parser with 10 tokens
2025-05-12 01:15:15,104 - compiler.statements.update_parser - INFO - Starting UPDATE statement parsing
2025-05-12 01:15:15,104 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-12 01:15:15,104 - compiler.statements.update_parser - DEBUG - Consumed UPDATE keyword
2025-05-12 01:15:15,104 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 7)
2025-05-12 01:15:15,104 - compiler.statements.update_parser - DEBUG - Identified table: products
2025-05-12 01:15:15,104 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SET, position = 16)
2025-05-12 01:15:15,104 - compiler.statements.update_parser - DEBUG - Found SET keyword
2025-05-12 01:15:15,104 - compiler.parser - DEBUG - Starting SET clause parsing at index 3
2025-05-12 01:15:15,104 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = price, position = 20)
2025-05-12 01:15:15,104 - compiler.parser - DEBUG - Processing column assignment: price
2025-05-12 01:15:15,104 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 25)
2025-05-12 01:15:15,104 - compiler.parser - DEBUG - Processing value token: Token(type = NUMBER, value = 19.99, position = 26)
2025-05-12 01:15:15,104 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 19.99, position = 26)
2025-05-12 01:15:15,104 - compiler.parser - DEBUG - Assigned price = 19.99
2025-05-12 01:15:15,104 - compiler.parser - INFO - Successfully parsed SET clause with 1 assignments
2025-05-12 01:15:15,104 - compiler.statements.update_parser - DEBUG - Parsed 1 column assignments
2025-05-12 01:15:15,104 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = WHERE, position = 32)
2025-05-12 01:15:15,104 - compiler.statements.update_parser - DEBUG - Parsing WHERE clause
2025-05-12 01:15:15,104 - compiler.parser - DEBUG - Parsing WHERE condition
2025-05-12 01:15:15,104 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = id, position = 38)
2025-05-12 01:15:15,104 - compiler.parser - DEBUG - Found WHERE column: id
2025-05-12 01:15:15,104 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 40)
2025-05-12 01:15:15,104 - compiler.parser - DEBUG - Found operator: =
2025-05-12 01:15:15,104 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 1001, position = 41)
2025-05-12 01:15:15,104 - compiler.statements.update_parser - DEBUG - Parsed condition: {'type': 'value_compare', 'column': 'id', 'operator': '=', 'value': '1001'}
2025-05-12 01:15:15,104 - compiler.statements.update_parser - INFO - Successfully parsed UPDATE statement for table 'products'
2025-05-12 01:15:15,110 - compiler.code_generator - INFO - Generating execution plan for UpdateTableCommand
2025-05-12 01:15:15,110 - compiler.code_generator - DEBUG - Generating UPDATE plan for products
2025-05-12 01:15:15,110 - compiler.code_generator - ERROR - Plan generation failed: Code Generation Error: Table 'products' not found
2025-05-12 01:21:22,557 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = SET, position = 16), Token(type = IDENTIFIER, value = price, position = 20), Token(type = EQUALS, value = =, position = 25), Token(type = NUMBER, value = 19.99, position = 26), Token(type = KEYWORD, value = WHERE, position = 32), Token(type = IDENTIFIER, value = id, position = 38), Token(type = EQUALS, value = =, position = 40), Token(type = NUMBER, value = 1001, position = 41)]
2025-05-12 01:21:22,565 - compiler.parser - DEBUG - Initialized parser with 10 tokens
2025-05-12 01:21:22,565 - compiler.statements.update_parser - INFO - Starting UPDATE statement parsing
2025-05-12 01:21:22,565 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-12 01:21:22,565 - compiler.statements.update_parser - DEBUG - Consumed UPDATE keyword
2025-05-12 01:21:22,565 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 7)
2025-05-12 01:21:22,565 - compiler.statements.update_parser - DEBUG - Identified table: products
2025-05-12 01:21:22,565 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SET, position = 16)
2025-05-12 01:21:22,565 - compiler.statements.update_parser - DEBUG - Found SET keyword
2025-05-12 01:21:22,565 - compiler.parser - DEBUG - Starting SET clause parsing at index 3
2025-05-12 01:21:22,565 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = price, position = 20)
2025-05-12 01:21:22,565 - compiler.parser - DEBUG - Processing column assignment: price
2025-05-12 01:21:22,565 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 25)
2025-05-12 01:21:22,565 - compiler.parser - DEBUG - Processing value token: Token(type = NUMBER, value = 19.99, position = 26)
2025-05-12 01:21:22,565 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 19.99, position = 26)
2025-05-12 01:21:22,565 - compiler.parser - DEBUG - Assigned price = 19.99
2025-05-12 01:21:22,565 - compiler.parser - INFO - Successfully parsed SET clause with 1 assignments
2025-05-12 01:21:22,565 - compiler.statements.update_parser - DEBUG - Parsed 1 column assignments
2025-05-12 01:21:22,565 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = WHERE, position = 32)
2025-05-12 01:21:22,565 - compiler.statements.update_parser - DEBUG - Parsing WHERE clause
2025-05-12 01:21:22,565 - compiler.parser - DEBUG - Parsing WHERE condition
2025-05-12 01:21:22,567 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = id, position = 38)
2025-05-12 01:21:22,567 - compiler.parser - DEBUG - Found WHERE column: id
2025-05-12 01:21:22,567 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 40)
2025-05-12 01:21:22,567 - compiler.parser - DEBUG - Found operator: =
2025-05-12 01:21:22,567 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 1001, position = 41)
2025-05-12 01:21:22,567 - compiler.statements.update_parser - DEBUG - Parsed condition: {'type': 'value_compare', 'column': 'id', 'operator': '=', 'value': '1001'}
2025-05-12 01:21:22,567 - compiler.statements.update_parser - INFO - Successfully parsed UPDATE statement for table 'products'
2025-05-12 01:21:22,569 - compiler.code_generator - INFO - Generating execution plan for UpdateTableCommand
2025-05-12 01:21:22,569 - compiler.code_generator - DEBUG - Generating UPDATE plan for products
2025-05-12 01:21:22,569 - compiler.code_generator - ERROR - Plan generation failed: Code Generation Error: Table 'products' not found
2025-05-12 01:23:08,176 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = SET, position = 16), Token(type = IDENTIFIER, value = price, position = 20), Token(type = EQUALS, value = =, position = 25), Token(type = NUMBER, value = 19.99, position = 26), Token(type = KEYWORD, value = WHERE, position = 32), Token(type = IDENTIFIER, value = id, position = 38), Token(type = EQUALS, value = =, position = 40), Token(type = NUMBER, value = 1001, position = 41)]
2025-05-12 01:23:08,181 - compiler.parser - DEBUG - Initialized parser with 10 tokens
2025-05-12 01:23:08,181 - compiler.statements.update_parser - INFO - Starting UPDATE statement parsing
2025-05-12 01:23:08,181 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-12 01:23:08,181 - compiler.statements.update_parser - DEBUG - Consumed UPDATE keyword
2025-05-12 01:23:08,181 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 7)
2025-05-12 01:23:08,181 - compiler.statements.update_parser - DEBUG - Identified table: products
2025-05-12 01:23:08,181 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SET, position = 16)
2025-05-12 01:23:08,181 - compiler.statements.update_parser - DEBUG - Found SET keyword
2025-05-12 01:23:08,181 - compiler.parser - DEBUG - Starting SET clause parsing at index 3
2025-05-12 01:23:08,181 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = price, position = 20)
2025-05-12 01:23:08,181 - compiler.parser - DEBUG - Processing column assignment: price
2025-05-12 01:23:08,181 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 25)
2025-05-12 01:23:08,181 - compiler.parser - DEBUG - Processing value token: Token(type = NUMBER, value = 19.99, position = 26)
2025-05-12 01:23:08,181 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 19.99, position = 26)
2025-05-12 01:23:08,181 - compiler.parser - DEBUG - Assigned price = 19.99
2025-05-12 01:23:08,182 - compiler.parser - INFO - Successfully parsed SET clause with 1 assignments
2025-05-12 01:23:08,182 - compiler.statements.update_parser - DEBUG - Parsed 1 column assignments
2025-05-12 01:23:08,182 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = WHERE, position = 32)
2025-05-12 01:23:08,182 - compiler.statements.update_parser - DEBUG - Parsing WHERE clause
2025-05-12 01:23:08,182 - compiler.parser - DEBUG - Parsing WHERE condition
2025-05-12 01:23:08,182 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = id, position = 38)
2025-05-12 01:23:08,182 - compiler.parser - DEBUG - Found WHERE column: id
2025-05-12 01:23:08,182 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 40)
2025-05-12 01:23:08,182 - compiler.parser - DEBUG - Found operator: =
2025-05-12 01:23:08,182 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 1001, position = 41)
2025-05-12 01:23:08,182 - compiler.statements.update_parser - DEBUG - Parsed condition: {'type': 'value_compare', 'column': 'id', 'operator': '=', 'value': '1001'}
2025-05-12 01:23:08,182 - compiler.statements.update_parser - INFO - Successfully parsed UPDATE statement for table 'products'
2025-05-12 01:23:08,186 - compiler.code_generator - INFO - Generating execution plan for UpdateTableCommand
2025-05-12 01:23:08,186 - compiler.code_generator - DEBUG - Generating UPDATE plan for products
2025-05-12 01:23:08,186 - compiler.code_generator - ERROR - Plan generation failed: Code Generation Error: Table 'products' not found
2025-05-12 01:23:12,000 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = SET, position = 16), Token(type = IDENTIFIER, value = price, position = 20), Token(type = EQUALS, value = =, position = 25), Token(type = NUMBER, value = 19.99, position = 26), Token(type = KEYWORD, value = WHERE, position = 32), Token(type = IDENTIFIER, value = id, position = 38), Token(type = EQUALS, value = =, position = 40), Token(type = NUMBER, value = 1001, position = 41)]
2025-05-12 01:23:12,004 - compiler.parser - DEBUG - Initialized parser with 10 tokens
2025-05-12 01:23:12,004 - compiler.statements.update_parser - INFO - Starting UPDATE statement parsing
2025-05-12 01:23:12,004 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-12 01:23:12,004 - compiler.statements.update_parser - DEBUG - Consumed UPDATE keyword
2025-05-12 01:23:12,004 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 7)
2025-05-12 01:23:12,004 - compiler.statements.update_parser - DEBUG - Identified table: products
2025-05-12 01:23:12,004 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SET, position = 16)
2025-05-12 01:23:12,004 - compiler.statements.update_parser - DEBUG - Found SET keyword
2025-05-12 01:23:12,004 - compiler.parser - DEBUG - Starting SET clause parsing at index 3
2025-05-12 01:23:12,004 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = price, position = 20)
2025-05-12 01:23:12,004 - compiler.parser - DEBUG - Processing column assignment: price
2025-05-12 01:23:12,004 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 25)
2025-05-12 01:23:12,004 - compiler.parser - DEBUG - Processing value token: Token(type = NUMBER, value = 19.99, position = 26)
2025-05-12 01:23:12,004 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 19.99, position = 26)
2025-05-12 01:23:12,004 - compiler.parser - DEBUG - Assigned price = 19.99
2025-05-12 01:23:12,004 - compiler.parser - INFO - Successfully parsed SET clause with 1 assignments
2025-05-12 01:23:12,004 - compiler.statements.update_parser - DEBUG - Parsed 1 column assignments
2025-05-12 01:23:12,004 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = WHERE, position = 32)
2025-05-12 01:23:12,004 - compiler.statements.update_parser - DEBUG - Parsing WHERE clause
2025-05-12 01:23:12,004 - compiler.parser - DEBUG - Parsing WHERE condition
2025-05-12 01:23:12,004 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = id, position = 38)
2025-05-12 01:23:12,004 - compiler.parser - DEBUG - Found WHERE column: id
2025-05-12 01:23:12,004 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 40)
2025-05-12 01:23:12,004 - compiler.parser - DEBUG - Found operator: =
2025-05-12 01:23:12,004 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 1001, position = 41)
2025-05-12 01:23:12,004 - compiler.statements.update_parser - DEBUG - Parsed condition: {'type': 'value_compare', 'column': 'id', 'operator': '=', 'value': '1001'}
2025-05-12 01:23:12,004 - compiler.statements.update_parser - INFO - Successfully parsed UPDATE statement for table 'products'
2025-05-12 01:23:12,009 - compiler.code_generator - INFO - Generating execution plan for UpdateTableCommand
2025-05-12 01:23:12,009 - compiler.code_generator - DEBUG - Generating UPDATE plan for products
2025-05-12 01:23:12,009 - compiler.code_generator - ERROR - Plan generation failed: Code Generation Error: Table 'products' not found
2025-05-12 01:26:32,905 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = ASTERISK, value = *, position = 7), Token(type = KEYWORD, value = FROM, position = 9), Token(type = IDENTIFIER, value = productsINSERT, position = 14), Token(type = KEYWORD, value = INTO, position = 29), Token(type = IDENTIFIER, value = products, position = 34), Token(type = KEYWORD, value = VALUES, position = 43), Token(type = LPAREN, value = (, position = 50), Token(type = NUMBER, value = 1, position = 51), Token(type = COMMA, value = ,, position = 52), Token(type = STRING, value = Laptop, position = 54), Token(type = COMMA, value = ,, position = 62), Token(type = NUMBER, value = 999.99, position = 64), Token(type = COMMA, value = ,, position = 70), Token(type = NUMBER, value = 10, position = 72), Token(type = RPAREN, value = ), position = 74), Token(type = KEYWORD, value = UPDATE, position = 75), Token(type = IDENTIFIER, value = products, position = 82), Token(type = KEYWORD, value = SET, position = 91), Token(type = IDENTIFIER, value = price, position = 95), Token(type = EQUALS, value = =, position = 101), Token(type = NUMBER, value = 899.99, position = 103), Token(type = KEYWORD, value = WHERE, position = 110), Token(type = IDENTIFIER, value = product_id, position = 116), Token(type = EQUALS, value = =, position = 127), Token(type = NUMBER, value = 1, position = 129)]
2025-05-12 01:26:32,913 - compiler.parser - DEBUG - Initialized parser with 26 tokens
2025-05-12 01:26:32,913 - compiler.statements.select_parser - DEBUG - Parsing SELECT statement...
2025-05-12 01:26:32,913 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-12 01:26:32,913 - compiler.parser - DEBUG - Processed token: Token(type = ASTERISK, value = *, position = 7)
2025-05-12 01:26:32,913 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 9)
2025-05-12 01:26:32,913 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = productsINSERT, position = 14)
2025-05-12 01:26:32,913 - compiler.code_generator - INFO - Generating execution plan for SelectTableCommand
2025-05-12 01:26:32,913 - compiler.code_generator - DEBUG - Generating SELECT plan for productsINSERT
2025-05-12 01:26:32,913 - compiler.code_generator - DEBUG - Generated SELECT plan: [('OPEN_TABLE', 'productsINSERT'), 'SCAN_START', ('EMIT_ROW', ['*']), 'SCAN_END']
2025-05-12 01:27:27,425 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = categories, position = 12), Token(type = KEYWORD, value = VALUES, position = 23), Token(type = LPAREN, value = (, position = 30), Token(type = NUMBER, value = 1, position = 31), Token(type = COMMA, value = ,, position = 32), Token(type = STRING, value = Electronics, position = 34), Token(type = COMMA, value = ,, position = 47), Token(type = NUMBER, value = 1, position = 49), Token(type = RPAREN, value = ), position = 50), Token(type = SEMICOLON, value = ;, position = 51)]
2025-05-12 01:27:27,434 - compiler.parser - DEBUG - Initialized parser with 12 tokens
2025-05-12 01:27:27,434 - compiler.statements.insert_parser - DEBUG - Parsing INSERT statement...
2025-05-12 01:27:27,434 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-12 01:27:27,434 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-12 01:27:27,434 - compiler.parser - DEBUG - Parsing table name....
2025-05-12 01:27:27,434 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = categories, position = 12)
2025-05-12 01:27:27,434 - compiler.parser - DEBUG - Table Name Found: categories
2025-05-12 01:27:27,434 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = categories, position = 12)
2025-05-12 01:27:27,435 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = IDENTIFIER, value = p, position = 7), Token(type = DOT, value = ., position = 8), Token(type = IDENTIFIER, value = name, position = 9), Token(type = COMMA, value = ,, position = 13), Token(type = IDENTIFIER, value = c, position = 15), Token(type = DOT, value = ., position = 16), Token(type = IDENTIFIER, value = name, position = 17)]
2025-05-12 01:27:27,439 - compiler.parser - DEBUG - Initialized parser with 8 tokens
2025-05-12 01:27:27,439 - compiler.statements.select_parser - DEBUG - Parsing SELECT statement...
2025-05-12 01:27:27,439 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-12 01:28:19,068 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = categories, position = 12), Token(type = KEYWORD, value = VALUES, position = 23), Token(type = LPAREN, value = (, position = 30), Token(type = NUMBER, value = 1, position = 31), Token(type = COMMA, value = ,, position = 32), Token(type = STRING, value = Electronics, position = 34), Token(type = COMMA, value = ,, position = 47), Token(type = NUMBER, value = 1, position = 49), Token(type = RPAREN, value = ), position = 50), Token(type = SEMICOLON, value = ;, position = 51), Token(type = KEYWORD, value = SELECT, position = 53), Token(type = IDENTIFIER, value = p, position = 60), Token(type = DOT, value = ., position = 61), Token(type = IDENTIFIER, value = name, position = 62), Token(type = COMMA, value = ,, position = 66), Token(type = IDENTIFIER, value = c, position = 68), Token(type = DOT, value = ., position = 69), Token(type = IDENTIFIER, value = name, position = 70), Token(type = KEYWORD, value = FROM, position = 75), Token(type = IDENTIFIER, value = products, position = 80), Token(type = IDENTIFIER, value = p, position = 89), Token(type = IDENTIFIER, value = JOIN, position = 91), Token(type = IDENTIFIER, value = categories, position = 96), Token(type = IDENTIFIER, value = c, position = 107), Token(type = IDENTIFIER, value = ON, position = 109), Token(type = IDENTIFIER, value = p, position = 112), Token(type = DOT, value = ., position = 113), Token(type = IDENTIFIER, value = product_id, position = 114), Token(type = EQUALS, value = =, position = 125), Token(type = IDENTIFIER, value = c, position = 127), Token(type = DOT, value = ., position = 128), Token(type = IDENTIFIER, value = product_id, position = 129), Token(type = SEMICOLON, value = ;, position = 139)]
2025-05-12 01:28:19,079 - compiler.parser - DEBUG - Initialized parser with 35 tokens
2025-05-12 01:28:19,079 - compiler.statements.insert_parser - DEBUG - Parsing INSERT statement...
2025-05-12 01:28:19,079 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-12 01:28:19,079 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-12 01:28:19,080 - compiler.parser - DEBUG - Parsing table name....
2025-05-12 01:28:19,080 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = categories, position = 12)
2025-05-12 01:28:19,080 - compiler.parser - DEBUG - Table Name Found: categories
2025-05-12 01:28:19,080 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = categories, position = 12)
2025-05-12 01:28:26,387 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = categories, position = 12), Token(type = KEYWORD, value = VALUES, position = 23), Token(type = LPAREN, value = (, position = 30), Token(type = NUMBER, value = 1, position = 31), Token(type = COMMA, value = ,, position = 32), Token(type = STRING, value = Electronics, position = 34), Token(type = COMMA, value = ,, position = 47), Token(type = NUMBER, value = 1, position = 49), Token(type = RPAREN, value = ), position = 50), Token(type = SEMICOLON, value = ;, position = 51), Token(type = KEYWORD, value = SELECT, position = 53), Token(type = IDENTIFIER, value = p, position = 60), Token(type = DOT, value = ., position = 61), Token(type = IDENTIFIER, value = name, position = 62), Token(type = COMMA, value = ,, position = 66), Token(type = IDENTIFIER, value = c, position = 68), Token(type = DOT, value = ., position = 69), Token(type = IDENTIFIER, value = name, position = 70), Token(type = KEYWORD, value = FROM, position = 75), Token(type = IDENTIFIER, value = products, position = 80), Token(type = IDENTIFIER, value = p, position = 89), Token(type = IDENTIFIER, value = JOIN, position = 91), Token(type = IDENTIFIER, value = categories, position = 96), Token(type = IDENTIFIER, value = c, position = 107), Token(type = IDENTIFIER, value = ON, position = 109), Token(type = IDENTIFIER, value = p, position = 112), Token(type = DOT, value = ., position = 113), Token(type = IDENTIFIER, value = product_id, position = 114), Token(type = EQUALS, value = =, position = 125), Token(type = IDENTIFIER, value = c, position = 127), Token(type = DOT, value = ., position = 128), Token(type = IDENTIFIER, value = product_id, position = 129), Token(type = SEMICOLON, value = ;, position = 139)]
2025-05-12 01:28:26,404 - compiler.parser - DEBUG - Initialized parser with 35 tokens
2025-05-12 01:28:26,406 - compiler.statements.insert_parser - DEBUG - Parsing INSERT statement...
2025-05-12 01:28:26,406 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-12 01:28:26,406 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-12 01:28:26,406 - compiler.parser - DEBUG - Parsing table name....
2025-05-12 01:28:26,406 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = categories, position = 12)
2025-05-12 01:28:26,406 - compiler.parser - DEBUG - Table Name Found: categories
2025-05-12 01:28:26,406 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = categories, position = 12)
2025-05-12 01:28:29,823 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = categories, position = 12), Token(type = KEYWORD, value = VALUES, position = 23), Token(type = LPAREN, value = (, position = 30), Token(type = NUMBER, value = 1, position = 31), Token(type = COMMA, value = ,, position = 32), Token(type = STRING, value = Electronics, position = 34), Token(type = COMMA, value = ,, position = 47), Token(type = NUMBER, value = 1, position = 49), Token(type = RPAREN, value = ), position = 50), Token(type = SEMICOLON, value = ;, position = 51), Token(type = KEYWORD, value = SELECT, position = 53), Token(type = IDENTIFIER, value = p, position = 60), Token(type = DOT, value = ., position = 61), Token(type = IDENTIFIER, value = name, position = 62), Token(type = COMMA, value = ,, position = 66), Token(type = IDENTIFIER, value = c, position = 68), Token(type = DOT, value = ., position = 69), Token(type = IDENTIFIER, value = name, position = 70), Token(type = KEYWORD, value = FROM, position = 75), Token(type = IDENTIFIER, value = products, position = 80), Token(type = IDENTIFIER, value = p, position = 89), Token(type = IDENTIFIER, value = JOIN, position = 91), Token(type = IDENTIFIER, value = categories, position = 96), Token(type = IDENTIFIER, value = c, position = 107), Token(type = IDENTIFIER, value = ON, position = 109), Token(type = IDENTIFIER, value = p, position = 112), Token(type = DOT, value = ., position = 113), Token(type = IDENTIFIER, value = product_id, position = 114), Token(type = EQUALS, value = =, position = 125), Token(type = IDENTIFIER, value = c, position = 127), Token(type = DOT, value = ., position = 128), Token(type = IDENTIFIER, value = product_id, position = 129), Token(type = SEMICOLON, value = ;, position = 139)]
2025-05-12 01:28:29,836 - compiler.parser - DEBUG - Initialized parser with 35 tokens
2025-05-12 01:28:29,836 - compiler.statements.insert_parser - DEBUG - Parsing INSERT statement...
2025-05-12 01:28:29,836 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-12 01:28:29,836 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-12 01:28:29,836 - compiler.parser - DEBUG - Parsing table name....
2025-05-12 01:28:29,836 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = categories, position = 12)
2025-05-12 01:28:29,836 - compiler.parser - DEBUG - Table Name Found: categories
2025-05-12 01:28:29,836 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = categories, position = 12)
2025-05-12 01:33:15,202 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = IDENTIFIER, value = name, position = 7), Token(type = COMMA, value = ,, position = 11), Token(type = IDENTIFIER, value = price, position = 13), Token(type = KEYWORD, value = FROM, position = 19), Token(type = IDENTIFIER, value = products, position = 24), Token(type = KEYWORD, value = WHERE, position = 33), Token(type = IDENTIFIER, value = stock, position = 39), Token(type = GREATERTHAN, value = >, position = 45), Token(type = NUMBER, value = 5, position = 47), Token(type = SEMICOLON, value = ;, position = 48)]
2025-05-12 01:33:15,202 - compiler.parser - DEBUG - Initialized parser with 11 tokens
2025-05-12 01:33:15,202 - compiler.statements.select_parser - DEBUG - Parsing SELECT statement...
2025-05-12 01:33:15,207 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-12 01:33:15,207 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 19)
2025-05-12 01:33:15,207 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 24)
2025-05-12 01:33:15,207 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = WHERE, position = 33)
2025-05-12 01:33:15,207 - compiler.parser - DEBUG - Parsing WHERE condition
2025-05-12 01:33:15,207 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = stock, position = 39)
2025-05-12 01:33:15,207 - compiler.parser - DEBUG - Found WHERE column: stock
2025-05-12 01:33:15,207 - compiler.parser - DEBUG - Processed token: Token(type = GREATERTHAN, value = >, position = 45)
2025-05-12 01:33:15,207 - compiler.parser - DEBUG - Found operator: >
2025-05-12 01:33:15,208 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 5, position = 47)
2025-05-12 01:33:15,212 - compiler.code_generator - INFO - Generating execution plan for SelectTableCommand
2025-05-12 01:33:15,212 - compiler.code_generator - DEBUG - Generating SELECT plan for products
2025-05-12 01:33:15,212 - compiler.code_generator - DEBUG - Generated SELECT plan: [('OPEN_TABLE', 'products'), 'SCAN_START', ('LOAD_COLUMN', 'stock'), ('LOAD_CONST', '5'), 'COMPARE_EQ', ('JUMP_IF_FALSE', 'label_1'), ('EMIT_ROW', ['name', 'price']), ('LABEL', 'label_1'), 'SCAN_END']
2025-05-12 01:33:30,534 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = products, position = 12), Token(type = KEYWORD, value = VALUES, position = 21), Token(type = LPAREN, value = (, position = 28), Token(type = NUMBER, value = 1, position = 29), Token(type = COMMA, value = ,, position = 30), Token(type = STRING, value = Laptop, position = 32), Token(type = COMMA, value = ,, position = 40), Token(type = NUMBER, value = 999.99, position = 42), Token(type = COMMA, value = ,, position = 48), Token(type = NUMBER, value = 10, position = 50), Token(type = RPAREN, value = ), position = 52)]
2025-05-12 01:33:30,550 - compiler.parser - DEBUG - Initialized parser with 13 tokens
2025-05-12 01:33:30,550 - compiler.statements.insert_parser - DEBUG - Parsing INSERT statement...
2025-05-12 01:33:30,550 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-12 01:33:30,550 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-12 01:33:30,550 - compiler.parser - DEBUG - Parsing table name....
2025-05-12 01:33:30,550 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = products, position = 12)
2025-05-12 01:33:30,550 - compiler.parser - DEBUG - Table Name Found: products
2025-05-12 01:33:30,550 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 12)
2025-05-12 01:33:43,091 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = UPDATE, position = 0), Token(type = IDENTIFIER, value = products, position = 7), Token(type = KEYWORD, value = SET, position = 16), Token(type = IDENTIFIER, value = price, position = 20), Token(type = EQUALS, value = =, position = 26), Token(type = NUMBER, value = 899.99, position = 28), Token(type = KEYWORD, value = WHERE, position = 35), Token(type = IDENTIFIER, value = product_id, position = 41), Token(type = EQUALS, value = =, position = 52), Token(type = NUMBER, value = 1, position = 54)]
2025-05-12 01:33:43,091 - compiler.parser - DEBUG - Initialized parser with 10 tokens
2025-05-12 01:33:43,091 - compiler.statements.update_parser - INFO - Starting UPDATE statement parsing
2025-05-12 01:33:43,091 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = UPDATE, position = 0)
2025-05-12 01:33:43,091 - compiler.statements.update_parser - DEBUG - Consumed UPDATE keyword
2025-05-12 01:33:43,091 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 7)
2025-05-12 01:33:43,091 - compiler.statements.update_parser - DEBUG - Identified table: products
2025-05-12 01:33:43,091 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SET, position = 16)
2025-05-12 01:33:43,091 - compiler.statements.update_parser - DEBUG - Found SET keyword
2025-05-12 01:33:43,091 - compiler.parser - DEBUG - Starting SET clause parsing at index 3
2025-05-12 01:33:43,091 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = price, position = 20)
2025-05-12 01:33:43,091 - compiler.parser - DEBUG - Processing column assignment: price
2025-05-12 01:33:43,091 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 26)
2025-05-12 01:33:43,091 - compiler.parser - DEBUG - Processing value token: Token(type = NUMBER, value = 899.99, position = 28)
2025-05-12 01:33:43,091 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 899.99, position = 28)
2025-05-12 01:33:43,091 - compiler.parser - DEBUG - Assigned price = 899.99
2025-05-12 01:33:43,091 - compiler.parser - INFO - Successfully parsed SET clause with 1 assignments
2025-05-12 01:33:43,091 - compiler.statements.update_parser - DEBUG - Parsed 1 column assignments
2025-05-12 01:33:43,091 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = WHERE, position = 35)
2025-05-12 01:33:43,091 - compiler.statements.update_parser - DEBUG - Parsing WHERE clause
2025-05-12 01:33:43,091 - compiler.parser - DEBUG - Parsing WHERE condition
2025-05-12 01:33:43,091 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = product_id, position = 41)
2025-05-12 01:33:43,091 - compiler.parser - DEBUG - Found WHERE column: product_id
2025-05-12 01:33:43,091 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 52)
2025-05-12 01:33:43,091 - compiler.parser - DEBUG - Found operator: =
2025-05-12 01:33:43,091 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 1, position = 54)
2025-05-12 01:33:43,091 - compiler.statements.update_parser - DEBUG - Parsed condition: {'type': 'value_compare', 'column': 'product_id', 'operator': '=', 'value': '1'}
2025-05-12 01:33:43,091 - compiler.statements.update_parser - INFO - Successfully parsed UPDATE statement for table 'products'
2025-05-12 01:33:43,107 - compiler.code_generator - INFO - Generating execution plan for UpdateTableCommand
2025-05-12 01:33:43,107 - compiler.code_generator - DEBUG - Generating UPDATE plan for products
2025-05-12 01:33:43,107 - compiler.code_generator - DEBUG - Generated UPDATE plan: [('OPEN_TABLE', 'products'), 'SCAN_START', ('LOAD_COLUMN', 'product_id'), ('LOAD_CONST', '1'), 'COMPARE_EQ', ('JUMP_IF_FALSE', 'label_2'), ('LOAD_CONST', '899.99'), ('UPDATE_COLUMN', 'price'), ('LABEL', 'label_2'), 'SCAN_END']
2025-05-12 01:35:40,378 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = products, position = 12), Token(type = KEYWORD, value = VALUES, position = 21)]
2025-05-12 01:35:40,378 - compiler.parser - DEBUG - Initialized parser with 4 tokens
2025-05-12 01:35:40,378 - compiler.statements.insert_parser - DEBUG - Parsing INSERT statement...
2025-05-12 01:35:40,378 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-12 01:35:40,378 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-12 01:35:40,378 - compiler.parser - DEBUG - Parsing table name....
2025-05-12 01:35:40,378 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = products, position = 12)
2025-05-12 01:35:40,378 - compiler.parser - DEBUG - Table Name Found: products
2025-05-12 01:35:40,378 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 12)
2025-05-12 01:35:40,387 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = LPAREN, value = (, position = 0), Token(type = NUMBER, value = 5, position = 1), Token(type = COMMA, value = ,, position = 2), Token(type = STRING, value = Keyboard, position = 4), Token(type = COMMA, value = ,, position = 14), Token(type = NUMBER, value = 49.99, position = 16), Token(type = COMMA, value = ,, position = 21), Token(type = NUMBER, value = 30, position = 23), Token(type = RPAREN, value = ), position = 25), Token(type = COMMA, value = ,, position = 26)]
2025-05-12 01:35:40,391 - compiler.parser - DEBUG - Initialized parser with 10 tokens
2025-05-12 01:35:40,391 - compiler.parser - ERROR - Invalid SQL statement: Token(type = LPAREN, value = (, position = 0)
2025-05-12 01:35:40,393 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = LPAREN, value = (, position = 0), Token(type = NUMBER, value = 6, position = 1), Token(type = COMMA, value = ,, position = 2), Token(type = STRING, value = Mouse, position = 4), Token(type = COMMA, value = ,, position = 11), Token(type = NUMBER, value = 29.99, position = 13), Token(type = COMMA, value = ,, position = 18), Token(type = NUMBER, value = 40, position = 20), Token(type = RPAREN, value = ), position = 22), Token(type = COMMA, value = ,, position = 23)]
2025-05-12 01:35:40,397 - compiler.parser - DEBUG - Initialized parser with 10 tokens
2025-05-12 01:35:40,397 - compiler.parser - ERROR - Invalid SQL statement: Token(type = LPAREN, value = (, position = 0)
2025-05-12 01:35:40,398 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = LPAREN, value = (, position = 0), Token(type = NUMBER, value = 7, position = 1), Token(type = COMMA, value = ,, position = 2), Token(type = STRING, value = Monitor, position = 4), Token(type = COMMA, value = ,, position = 13), Token(type = NUMBER, value = 199.99, position = 15), Token(type = COMMA, value = ,, position = 21), Token(type = NUMBER, value = 8, position = 23), Token(type = RPAREN, value = ), position = 24), Token(type = SEMICOLON, value = ;, position = 25)]
2025-05-12 01:35:40,401 - compiler.parser - DEBUG - Initialized parser with 10 tokens
2025-05-12 01:35:40,402 - compiler.parser - ERROR - Invalid SQL statement: Token(type = LPAREN, value = (, position = 0)
2025-05-12 01:35:48,932 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = products, position = 12), Token(type = KEYWORD, value = VALUES, position = 21), Token(type = LPAREN, value = (, position = 28), Token(type = NUMBER, value = 5, position = 29), Token(type = COMMA, value = ,, position = 30), Token(type = STRING, value = Keyboard, position = 32), Token(type = COMMA, value = ,, position = 42), Token(type = NUMBER, value = 49.99, position = 44), Token(type = COMMA, value = ,, position = 49), Token(type = NUMBER, value = 30, position = 51), Token(type = RPAREN, value = ), position = 53), Token(type = COMMA, value = ,, position = 54), Token(type = LPAREN, value = (, position = 56), Token(type = NUMBER, value = 6, position = 57), Token(type = COMMA, value = ,, position = 58), Token(type = STRING, value = Mouse, position = 60), Token(type = COMMA, value = ,, position = 67), Token(type = NUMBER, value = 29.99, position = 69), Token(type = COMMA, value = ,, position = 74), Token(type = NUMBER, value = 40, position = 76), Token(type = RPAREN, value = ), position = 78), Token(type = COMMA, value = ,, position = 79), Token(type = LPAREN, value = (, position = 81), Token(type = NUMBER, value = 7, position = 82), Token(type = COMMA, value = ,, position = 83), Token(type = STRING, value = Monitor, position = 85), Token(type = COMMA, value = ,, position = 94), Token(type = NUMBER, value = 199.99, position = 96), Token(type = COMMA, value = ,, position = 102), Token(type = NUMBER, value = 8, position = 104), Token(type = RPAREN, value = ), position = 105), Token(type = SEMICOLON, value = ;, position = 106)]
2025-05-12 01:35:48,941 - compiler.parser - DEBUG - Initialized parser with 34 tokens
2025-05-12 01:35:48,941 - compiler.statements.insert_parser - DEBUG - Parsing INSERT statement...
2025-05-12 01:35:48,941 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-12 01:35:48,941 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-12 01:35:48,941 - compiler.parser - DEBUG - Parsing table name....
2025-05-12 01:35:48,941 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = products, position = 12)
2025-05-12 01:35:48,941 - compiler.parser - DEBUG - Table Name Found: products
2025-05-12 01:35:48,941 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 12)
2025-05-12 01:37:32,483 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = IDENTIFIER, value = p, position = 7), Token(type = DOT, value = ., position = 8), Token(type = IDENTIFIER, value = name, position = 9), Token(type = COMMA, value = ,, position = 13), Token(type = IDENTIFIER, value = p, position = 15), Token(type = DOT, value = ., position = 16), Token(type = IDENTIFIER, value = price, position = 17), Token(type = COMMA, value = ,, position = 22), Token(type = IDENTIFIER, value = c, position = 24), Token(type = DOT, value = ., position = 25), Token(type = IDENTIFIER, value = name, position = 26), Token(type = IDENTIFIER, value = as, position = 31), Token(type = IDENTIFIER, value = category, position = 34), Token(type = KEYWORD, value = FROM, position = 43), Token(type = IDENTIFIER, value = products, position = 48), Token(type = IDENTIFIER, value = p, position = 57), Token(type = IDENTIFIER, value = LEFT, position = 59), Token(type = IDENTIFIER, value = JOIN, position = 64), Token(type = IDENTIFIER, value = categories, position = 69), Token(type = IDENTIFIER, value = c, position = 80), Token(type = IDENTIFIER, value = ON, position = 82), Token(type = IDENTIFIER, value = p, position = 85), Token(type = DOT, value = ., position = 86), Token(type = IDENTIFIER, value = product_id, position = 87), Token(type = EQUALS, value = =, position = 98), Token(type = IDENTIFIER, value = c, position = 100), Token(type = DOT, value = ., position = 101), Token(type = IDENTIFIER, value = product_id, position = 102), Token(type = KEYWORD, value = WHERE, position = 113), Token(type = IDENTIFIER, value = p, position = 119), Token(type = DOT, value = ., position = 120), Token(type = IDENTIFIER, value = price, position = 121), Token(type = GREATERTHAN, value = >, position = 127), Token(type = NUMBER, value = 50, position = 129), Token(type = IDENTIFIER, value = ORDER, position = 132), Token(type = IDENTIFIER, value = BY, position = 138), Token(type = IDENTIFIER, value = p, position = 141), Token(type = DOT, value = ., position = 142), Token(type = IDENTIFIER, value = stock, position = 143), Token(type = SEMICOLON, value = ;, position = 148)]
2025-05-12 01:37:32,495 - compiler.parser - DEBUG - Initialized parser with 41 tokens
2025-05-12 01:37:32,496 - compiler.statements.select_parser - DEBUG - Parsing SELECT statement...
2025-05-12 01:37:32,496 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-12 01:38:02,720 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = IDENTIFIER, value = p, position = 7), Token(type = DOT, value = ., position = 8), Token(type = IDENTIFIER, value = name, position = 9), Token(type = COMMA, value = ,, position = 13), Token(type = IDENTIFIER, value = p, position = 15), Token(type = DOT, value = ., position = 16), Token(type = IDENTIFIER, value = price, position = 17), Token(type = COMMA, value = ,, position = 22), Token(type = IDENTIFIER, value = c, position = 24), Token(type = DOT, value = ., position = 25), Token(type = IDENTIFIER, value = name, position = 26), Token(type = IDENTIFIER, value = as, position = 31), Token(type = IDENTIFIER, value = category, position = 34), Token(type = KEYWORD, value = FROM, position = 43), Token(type = IDENTIFIER, value = products, position = 48), Token(type = IDENTIFIER, value = p, position = 57), Token(type = IDENTIFIER, value = LEFT, position = 59), Token(type = IDENTIFIER, value = JOIN, position = 64), Token(type = IDENTIFIER, value = categories, position = 69), Token(type = IDENTIFIER, value = c, position = 80), Token(type = IDENTIFIER, value = ON, position = 82), Token(type = IDENTIFIER, value = p, position = 85), Token(type = KEYWORD, value = FROM, position = 87), Token(type = IDENTIFIER, value = product_id, position = 92), Token(type = EQUALS, value = =, position = 103), Token(type = IDENTIFIER, value = c, position = 105), Token(type = KEYWORD, value = FROM, position = 107), Token(type = IDENTIFIER, value = product_id, position = 112), Token(type = KEYWORD, value = WHERE, position = 123), Token(type = IDENTIFIER, value = p, position = 129), Token(type = KEYWORD, value = FROM, position = 131), Token(type = IDENTIFIER, value = price, position = 136), Token(type = GREATERTHAN, value = >, position = 142), Token(type = NUMBER, value = 50, position = 144), Token(type = IDENTIFIER, value = ORDER, position = 147), Token(type = IDENTIFIER, value = BY, position = 153), Token(type = IDENTIFIER, value = p, position = 156), Token(type = KEYWORD, value = FROM, position = 158), Token(type = IDENTIFIER, value = stock, position = 163), Token(type = SEMICOLON, value = ;, position = 168)]
2025-05-12 01:38:02,732 - compiler.parser - DEBUG - Initialized parser with 41 tokens
2025-05-12 01:38:02,732 - compiler.statements.select_parser - DEBUG - Parsing SELECT statement...
2025-05-12 01:38:02,732 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-12 01:38:21,630 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = IDENTIFIER, value = p, position = 7), Token(type = KEYWORD, value = FROM, position = 9), Token(type = IDENTIFIER, value = name, position = 14), Token(type = COMMA, value = ,, position = 18), Token(type = IDENTIFIER, value = p, position = 20), Token(type = KEYWORD, value = FROM, position = 22), Token(type = IDENTIFIER, value = price, position = 27), Token(type = COMMA, value = ,, position = 32), Token(type = IDENTIFIER, value = c, position = 34), Token(type = KEYWORD, value = FROM, position = 36), Token(type = IDENTIFIER, value = name, position = 41), Token(type = IDENTIFIER, value = as, position = 46), Token(type = IDENTIFIER, value = category, position = 49), Token(type = KEYWORD, value = FROM, position = 58), Token(type = IDENTIFIER, value = products, position = 63), Token(type = IDENTIFIER, value = p, position = 72), Token(type = IDENTIFIER, value = LEFT, position = 74), Token(type = IDENTIFIER, value = JOIN, position = 79), Token(type = IDENTIFIER, value = categories, position = 84), Token(type = IDENTIFIER, value = c, position = 95), Token(type = IDENTIFIER, value = ON, position = 97), Token(type = IDENTIFIER, value = p, position = 100), Token(type = KEYWORD, value = FROM, position = 102), Token(type = IDENTIFIER, value = product_id, position = 107), Token(type = EQUALS, value = =, position = 118), Token(type = IDENTIFIER, value = c, position = 120), Token(type = KEYWORD, value = FROM, position = 122), Token(type = IDENTIFIER, value = product_id, position = 127), Token(type = KEYWORD, value = WHERE, position = 138), Token(type = IDENTIFIER, value = p, position = 144), Token(type = KEYWORD, value = FROM, position = 146), Token(type = IDENTIFIER, value = price, position = 151), Token(type = GREATERTHAN, value = >, position = 157), Token(type = NUMBER, value = 50, position = 159), Token(type = IDENTIFIER, value = ORDER, position = 162), Token(type = IDENTIFIER, value = BY, position = 168), Token(type = IDENTIFIER, value = p, position = 171), Token(type = KEYWORD, value = FROM, position = 173), Token(type = IDENTIFIER, value = stock, position = 178), Token(type = SEMICOLON, value = ;, position = 183)]
2025-05-12 01:38:21,641 - compiler.parser - DEBUG - Initialized parser with 41 tokens
2025-05-12 01:38:21,641 - compiler.statements.select_parser - DEBUG - Parsing SELECT statement...
2025-05-12 01:38:21,641 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-12 01:38:21,641 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 9)
2025-05-12 01:38:21,641 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = name, position = 14)
2025-05-12 01:38:21,641 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 18)
2025-05-12 01:38:21,641 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = p, position = 20)
2025-05-12 01:39:01,592 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = IDENTIFIER, value = p, position = 7), Token(type = DOT, value = ., position = 8), Token(type = IDENTIFIER, value = name, position = 9), Token(type = COMMA, value = ,, position = 13), Token(type = IDENTIFIER, value = p, position = 15), Token(type = DOT, value = ., position = 16), Token(type = IDENTIFIER, value = price, position = 17), Token(type = COMMA, value = ,, position = 22), Token(type = IDENTIFIER, value = c, position = 24), Token(type = DOT, value = ., position = 25), Token(type = IDENTIFIER, value = name, position = 26), Token(type = IDENTIFIER, value = as, position = 31), Token(type = IDENTIFIER, value = category, position = 34), Token(type = KEYWORD, value = FROM, position = 43), Token(type = IDENTIFIER, value = products, position = 48), Token(type = IDENTIFIER, value = p, position = 57), Token(type = IDENTIFIER, value = LEFT, position = 59), Token(type = IDENTIFIER, value = JOIN, position = 64), Token(type = IDENTIFIER, value = categories, position = 69), Token(type = IDENTIFIER, value = c, position = 80), Token(type = IDENTIFIER, value = ON, position = 82), Token(type = IDENTIFIER, value = p, position = 85), Token(type = DOT, value = ., position = 86), Token(type = IDENTIFIER, value = product_id, position = 87), Token(type = EQUALS, value = =, position = 98), Token(type = IDENTIFIER, value = c, position = 100), Token(type = DOT, value = ., position = 101), Token(type = IDENTIFIER, value = product_id, position = 102), Token(type = KEYWORD, value = WHERE, position = 113), Token(type = IDENTIFIER, value = p, position = 119), Token(type = DOT, value = ., position = 120), Token(type = IDENTIFIER, value = price, position = 121), Token(type = GREATERTHAN, value = >, position = 127), Token(type = NUMBER, value = 50, position = 129), Token(type = IDENTIFIER, value = ORDER, position = 132), Token(type = IDENTIFIER, value = BY, position = 138), Token(type = IDENTIFIER, value = p, position = 141), Token(type = DOT, value = ., position = 142), Token(type = IDENTIFIER, value = stock, position = 143), Token(type = SEMICOLON, value = ;, position = 148)]
2025-05-12 01:39:01,611 - compiler.parser - DEBUG - Initialized parser with 41 tokens
2025-05-12 01:39:01,611 - compiler.statements.select_parser - DEBUG - Parsing SELECT statement...
2025-05-12 01:39:01,611 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-12 01:39:08,085 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = ASTERISK, value = *, position = 7), Token(type = KEYWORD, value = FROM, position = 9), Token(type = IDENTIFIER, value = me, position = 14)]
2025-05-12 01:39:08,087 - compiler.parser - DEBUG - Initialized parser with 4 tokens
2025-05-12 01:39:08,087 - compiler.statements.select_parser - DEBUG - Parsing SELECT statement...
2025-05-12 01:39:08,087 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-12 01:39:08,087 - compiler.parser - DEBUG - Processed token: Token(type = ASTERISK, value = *, position = 7)
2025-05-12 01:39:08,087 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 9)
2025-05-12 01:39:08,087 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = me, position = 14)
2025-05-12 01:39:08,090 - compiler.code_generator - INFO - Generating execution plan for SelectTableCommand
2025-05-12 01:39:08,090 - compiler.code_generator - DEBUG - Generating SELECT plan for me
2025-05-12 01:39:08,090 - compiler.code_generator - DEBUG - Generated SELECT plan: [('OPEN_TABLE', 'me'), 'SCAN_START', ('EMIT_ROW', ['*']), 'SCAN_END']
2025-05-12 01:40:05,852 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = ASTERISK, value = *, position = 7), Token(type = KEYWORD, value = FROM, position = 9), Token(type = IDENTIFIER, value = me, position = 14)]
2025-05-12 01:40:05,853 - compiler.parser - DEBUG - Initialized parser with 4 tokens
2025-05-12 01:40:05,853 - compiler.statements.select_parser - DEBUG - Parsing SELECT statement...
2025-05-12 01:40:05,853 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-12 01:40:05,853 - compiler.parser - DEBUG - Processed token: Token(type = ASTERISK, value = *, position = 7)
2025-05-12 01:40:05,853 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 9)
2025-05-12 01:40:05,853 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = me, position = 14)
2025-05-12 01:40:05,853 - compiler.code_generator - INFO - Generating execution plan for SelectTableCommand
2025-05-12 01:40:05,853 - compiler.code_generator - DEBUG - Generating SELECT plan for me
2025-05-12 01:40:05,853 - compiler.code_generator - DEBUG - Generated SELECT plan: [('OPEN_TABLE', 'me'), 'SCAN_START', ('EMIT_ROW', ['*']), 'SCAN_END']
2025-05-12 01:40:08,256 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = ASTERISK, value = *, position = 7), Token(type = KEYWORD, value = FROM, position = 9), Token(type = IDENTIFIER, value = me, position = 14), Token(type = SEMICOLON, value = ;, position = 16)]
2025-05-12 01:40:08,261 - compiler.parser - DEBUG - Initialized parser with 5 tokens
2025-05-12 01:40:08,261 - compiler.statements.select_parser - DEBUG - Parsing SELECT statement...
2025-05-12 01:40:08,261 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-12 01:40:08,261 - compiler.parser - DEBUG - Processed token: Token(type = ASTERISK, value = *, position = 7)
2025-05-12 01:40:08,261 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 9)
2025-05-12 01:40:08,261 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = me, position = 14)
2025-05-12 01:40:08,261 - compiler.code_generator - INFO - Generating execution plan for SelectTableCommand
2025-05-12 01:40:08,261 - compiler.code_generator - DEBUG - Generating SELECT plan for me
2025-05-12 01:40:08,261 - compiler.code_generator - DEBUG - Generated SELECT plan: [('OPEN_TABLE', 'me'), 'SCAN_START', ('EMIT_ROW', ['*']), 'SCAN_END']
2025-05-13 12:50:18,243 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = IDENTIFIER, value = col1, position = 7), Token(type = COMMA, value = ,, position = 11), Token(type = IDENTIFIER, value = col2, position = 12), Token(type = KEYWORD, value = FROM, position = 17), Token(type = IDENTIFIER, value = products, position = 22)]
2025-05-13 12:50:18,246 - compiler.parser - DEBUG - Initialized parser with 6 tokens
2025-05-13 12:50:18,248 - compiler.statements.select_parser - DEBUG - Parsing SELECT statement...
2025-05-13 12:50:18,248 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-13 12:50:18,248 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 17)
2025-05-13 12:50:18,248 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = products, position = 22)
2025-05-13 12:50:18,250 - compiler.code_generator - INFO - Generating execution plan for SelectTableCommand
2025-05-13 12:50:18,250 - compiler.code_generator - DEBUG - Generating SELECT plan for products
2025-05-13 12:50:18,250 - compiler.code_generator - DEBUG - Generated SELECT plan: [('OPEN_TABLE', 'products'), 'SCAN_START', ('EMIT_ROW', ['col1', 'col2']), 'SCAN_END']
2025-05-13 12:50:38,745 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = NUMBER, value = 78, position = 7), Token(type = KEYWORD, value = FROM, position = 10)]
2025-05-13 12:50:38,748 - compiler.parser - DEBUG - Initialized parser with 3 tokens
2025-05-13 12:50:38,748 - compiler.statements.select_parser - DEBUG - Parsing SELECT statement...
2025-05-13 12:50:38,748 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-15 16:05:52,935 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = ASTERISK, value = *, position = 7), Token(type = KEYWORD, value = FROM, position = 9), Token(type = IDENTIFIER, value = child, position = 14)]
2025-05-15 16:05:52,938 - compiler.parser - DEBUG - Initialized parser with 4 tokens
2025-05-15 16:05:52,938 - compiler.statements.select_parser - DEBUG - Parsing SELECT statement...
2025-05-15 16:05:52,938 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-15 16:05:52,938 - compiler.parser - DEBUG - Processed token: Token(type = ASTERISK, value = *, position = 7)
2025-05-15 16:05:52,938 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 9)
2025-05-15 16:05:52,938 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = child, position = 14)
2025-05-15 16:05:52,939 - compiler.code_generator - INFO - Generating execution plan for SelectTableCommand
2025-05-15 16:05:52,939 - compiler.code_generator - DEBUG - Generating SELECT plan for child
2025-05-15 16:05:52,941 - compiler.code_generator - DEBUG - Generated SELECT plan: [('OPEN_TABLE', 'child'), 'SCAN_START', ('EMIT_ROW', ['*']), 'SCAN_END']
2025-05-15 16:06:37,461 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = CREATE, position = 0), Token(type = KEYWORD, value = TABLE, position = 7), Token(type = IDENTIFIER, value = yo, position = 13), Token(type = LPAREN, value = (, position = 15), Token(type = KEYWORD, value = INT, position = 16), Token(type = IDENTIFIER, value = age, position = 20), Token(type = RPAREN, value = ), position = 23), Token(type = SEMICOLON, value = ;, position = 24)]
2025-05-15 16:06:37,466 - compiler.parser - DEBUG - Initialized parser with 8 tokens
2025-05-15 16:06:37,466 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = CREATE, position = 0)
2025-05-15 16:06:37,466 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = TABLE, position = 7)
2025-05-15 16:06:37,466 - compiler.parser - DEBUG - Parsing table name....
2025-05-15 16:06:37,466 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = yo, position = 13)
2025-05-15 16:06:37,466 - compiler.parser - DEBUG - Table Name Found: yo
2025-05-15 16:06:37,466 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = yo, position = 13)
2025-05-15 16:06:37,466 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 15)
2025-05-15 16:07:32,653 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = CREATE, position = 0), Token(type = KEYWORD, value = TABLE, position = 7), Token(type = IDENTIFIER, value = Persons, position = 13), Token(type = LPAREN, value = (, position = 21), Token(type = IDENTIFIER, value = PersonID, position = 23), Token(type = KEYWORD, value = INT, position = 32), Token(type = COMMA, value = ,, position = 35), Token(type = IDENTIFIER, value = LastName, position = 37), Token(type = IDENTIFIER, value = varchar, position = 46), Token(type = LPAREN, value = (, position = 53), Token(type = NUMBER, value = 255, position = 54), Token(type = RPAREN, value = ), position = 57), Token(type = COMMA, value = ,, position = 58), Token(type = IDENTIFIER, value = FirstName, position = 60), Token(type = IDENTIFIER, value = varchar, position = 70), Token(type = LPAREN, value = (, position = 77), Token(type = NUMBER, value = 255, position = 78), Token(type = RPAREN, value = ), position = 81), Token(type = COMMA, value = ,, position = 82), Token(type = IDENTIFIER, value = Address, position = 84), Token(type = IDENTIFIER, value = varchar, position = 92), Token(type = LPAREN, value = (, position = 99), Token(type = NUMBER, value = 255, position = 100), Token(type = RPAREN, value = ), position = 103), Token(type = COMMA, value = ,, position = 104), Token(type = IDENTIFIER, value = City, position = 106), Token(type = IDENTIFIER, value = varchar, position = 111), Token(type = LPAREN, value = (, position = 118), Token(type = NUMBER, value = 255, position = 119), Token(type = RPAREN, value = ), position = 122), Token(type = RPAREN, value = ), position = 124), Token(type = SEMICOLON, value = ;, position = 125)]
2025-05-15 16:07:32,662 - compiler.parser - DEBUG - Initialized parser with 32 tokens
2025-05-15 16:07:32,662 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = CREATE, position = 0)
2025-05-15 16:07:32,662 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = TABLE, position = 7)
2025-05-15 16:07:32,662 - compiler.parser - DEBUG - Parsing table name....
2025-05-15 16:07:32,662 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = Persons, position = 13)
2025-05-15 16:07:32,662 - compiler.parser - DEBUG - Table Name Found: Persons
2025-05-15 16:07:32,662 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = Persons, position = 13)
2025-05-15 16:07:32,662 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 21)
2025-05-15 16:07:32,662 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = PersonID, position = 23)
2025-05-15 16:07:32,662 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INT, position = 32)
2025-05-15 16:07:32,662 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 35)
2025-05-15 16:07:32,662 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = LastName, position = 37)
2025-05-15 16:08:04,803 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = CREATE, position = 0), Token(type = KEYWORD, value = TABLE, position = 7), Token(type = IDENTIFIER, value = Persons, position = 13), Token(type = LPAREN, value = (, position = 21), Token(type = IDENTIFIER, value = PersonID, position = 23), Token(type = KEYWORD, value = INT, position = 32), Token(type = COMMA, value = ,, position = 35), Token(type = IDENTIFIER, value = LastName, position = 37), Token(type = KEYWORD, value = INT, position = 46), Token(type = LPAREN, value = (, position = 49), Token(type = NUMBER, value = 255, position = 50), Token(type = RPAREN, value = ), position = 53), Token(type = COMMA, value = ,, position = 54), Token(type = IDENTIFIER, value = FirstName, position = 56), Token(type = KEYWORD, value = INT, position = 66), Token(type = LPAREN, value = (, position = 69), Token(type = NUMBER, value = 255, position = 70), Token(type = RPAREN, value = ), position = 73), Token(type = COMMA, value = ,, position = 74), Token(type = IDENTIFIER, value = Address, position = 76), Token(type = KEYWORD, value = INT, position = 84), Token(type = LPAREN, value = (, position = 87), Token(type = NUMBER, value = 255, position = 88), Token(type = RPAREN, value = ), position = 91), Token(type = COMMA, value = ,, position = 92), Token(type = IDENTIFIER, value = City, position = 94), Token(type = KEYWORD, value = INT, position = 99), Token(type = LPAREN, value = (, position = 102), Token(type = NUMBER, value = 255, position = 103), Token(type = RPAREN, value = ), position = 106), Token(type = RPAREN, value = ), position = 108), Token(type = SEMICOLON, value = ;, position = 109)]
2025-05-15 16:08:04,814 - compiler.parser - DEBUG - Initialized parser with 32 tokens
2025-05-15 16:08:04,814 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = CREATE, position = 0)
2025-05-15 16:08:04,814 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = TABLE, position = 7)
2025-05-15 16:08:04,814 - compiler.parser - DEBUG - Parsing table name....
2025-05-15 16:08:04,814 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = Persons, position = 13)
2025-05-15 16:08:04,814 - compiler.parser - DEBUG - Table Name Found: Persons
2025-05-15 16:08:04,814 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = Persons, position = 13)
2025-05-15 16:08:04,814 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 21)
2025-05-15 16:08:04,814 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = PersonID, position = 23)
2025-05-15 16:08:04,814 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INT, position = 32)
2025-05-15 16:08:04,814 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 35)
2025-05-15 16:08:04,814 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = LastName, position = 37)
2025-05-15 16:08:04,814 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INT, position = 46)
2025-05-15 16:08:04,814 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 49)
2025-05-15 16:08:04,814 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 255, position = 50)
2025-05-15 16:08:04,814 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 53)
2025-05-15 16:10:10,910 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = CREATE, position = 0), Token(type = KEYWORD, value = TABLE, position = 7), Token(type = IDENTIFIER, value = Persons, position = 13), Token(type = LPAREN, value = (, position = 21), Token(type = IDENTIFIER, value = PersonID, position = 23), Token(type = KEYWORD, value = INT, position = 32), Token(type = COMMA, value = ,, position = 35), Token(type = IDENTIFIER, value = LastName, position = 37), Token(type = IDENTIFIER, value = varchar, position = 46), Token(type = LPAREN, value = (, position = 53), Token(type = NUMBER, value = 255, position = 54), Token(type = RPAREN, value = ), position = 57), Token(type = COMMA, value = ,, position = 58), Token(type = IDENTIFIER, value = FirstName, position = 60), Token(type = IDENTIFIER, value = varchar, position = 70), Token(type = LPAREN, value = (, position = 77), Token(type = NUMBER, value = 255, position = 78), Token(type = RPAREN, value = ), position = 81), Token(type = COMMA, value = ,, position = 82), Token(type = IDENTIFIER, value = Address, position = 84), Token(type = IDENTIFIER, value = varchar, position = 92), Token(type = LPAREN, value = (, position = 99), Token(type = NUMBER, value = 255, position = 100), Token(type = RPAREN, value = ), position = 103), Token(type = COMMA, value = ,, position = 104), Token(type = IDENTIFIER, value = City, position = 106), Token(type = IDENTIFIER, value = varchar, position = 111), Token(type = LPAREN, value = (, position = 118), Token(type = NUMBER, value = 255, position = 119), Token(type = RPAREN, value = ), position = 122), Token(type = RPAREN, value = ), position = 123), Token(type = SEMICOLON, value = ;, position = 124)]
2025-05-15 16:10:10,919 - compiler.parser - DEBUG - Initialized parser with 32 tokens
2025-05-15 16:10:10,919 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = CREATE, position = 0)
2025-05-15 16:10:10,919 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = TABLE, position = 7)
2025-05-15 16:10:10,919 - compiler.parser - DEBUG - Parsing table name....
2025-05-15 16:10:10,919 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = Persons, position = 13)
2025-05-15 16:10:10,919 - compiler.parser - DEBUG - Table Name Found: Persons
2025-05-15 16:10:10,919 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = Persons, position = 13)
2025-05-15 16:10:10,919 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 21)
2025-05-15 16:10:10,919 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = PersonID, position = 23)
2025-05-15 16:10:10,919 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INT, position = 32)
2025-05-15 16:10:10,919 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 35)
2025-05-15 16:10:10,919 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = LastName, position = 37)
2025-05-15 16:18:07,419 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = CREATE, position = 0), Token(type = KEYWORD, value = TABLE, position = 7), Token(type = IDENTIFIER, value = Persons, position = 13), Token(type = LPAREN, value = (, position = 21)]
2025-05-15 16:18:07,421 - compiler.parser - DEBUG - Initialized parser with 4 tokens
2025-05-15 16:18:07,421 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = CREATE, position = 0)
2025-05-15 16:18:07,421 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = TABLE, position = 7)
2025-05-15 16:18:07,421 - compiler.parser - DEBUG - Parsing table name....
2025-05-15 16:18:07,421 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = Persons, position = 13)
2025-05-15 16:18:07,421 - compiler.parser - DEBUG - Table Name Found: Persons
2025-05-15 16:18:07,421 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = Persons, position = 13)
2025-05-15 16:18:07,421 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 21)
2025-05-15 16:18:07,423 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = IDENTIFIER, value = PersonID, position = 0), Token(type = KEYWORD, value = INT, position = 9), Token(type = COMMA, value = ,, position = 12)]
2025-05-15 16:18:07,425 - compiler.parser - DEBUG - Initialized parser with 3 tokens
2025-05-15 16:18:07,425 - compiler.parser - ERROR - Invalid SQL statement: Token(type = IDENTIFIER, value = PersonID, position = 0)
2025-05-15 16:18:07,426 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = IDENTIFIER, value = LastName, position = 0), Token(type = IDENTIFIER, value = varchar, position = 9), Token(type = LPAREN, value = (, position = 16), Token(type = NUMBER, value = 255, position = 17), Token(type = RPAREN, value = ), position = 20), Token(type = COMMA, value = ,, position = 21)]
2025-05-15 16:18:07,430 - compiler.parser - DEBUG - Initialized parser with 6 tokens
2025-05-15 16:18:07,430 - compiler.parser - ERROR - Invalid SQL statement: Token(type = IDENTIFIER, value = LastName, position = 0)
2025-05-15 16:18:07,431 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = IDENTIFIER, value = FirstName, position = 0), Token(type = IDENTIFIER, value = varchar, position = 10), Token(type = LPAREN, value = (, position = 17), Token(type = NUMBER, value = 255, position = 18), Token(type = RPAREN, value = ), position = 21), Token(type = COMMA, value = ,, position = 22)]
2025-05-15 16:18:07,433 - compiler.parser - DEBUG - Initialized parser with 6 tokens
2025-05-15 16:18:07,433 - compiler.parser - ERROR - Invalid SQL statement: Token(type = IDENTIFIER, value = FirstName, position = 0)
2025-05-15 16:18:07,434 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = IDENTIFIER, value = Address, position = 0), Token(type = IDENTIFIER, value = varchar, position = 8), Token(type = LPAREN, value = (, position = 15), Token(type = NUMBER, value = 255, position = 16), Token(type = RPAREN, value = ), position = 19), Token(type = COMMA, value = ,, position = 20)]
2025-05-15 16:18:07,436 - compiler.parser - DEBUG - Initialized parser with 6 tokens
2025-05-15 16:18:07,436 - compiler.parser - ERROR - Invalid SQL statement: Token(type = IDENTIFIER, value = Address, position = 0)
2025-05-15 16:18:07,437 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = IDENTIFIER, value = City, position = 0), Token(type = IDENTIFIER, value = varchar, position = 5), Token(type = LPAREN, value = (, position = 12), Token(type = NUMBER, value = 255, position = 13), Token(type = RPAREN, value = ), position = 16)]
2025-05-15 16:18:07,439 - compiler.parser - DEBUG - Initialized parser with 5 tokens
2025-05-15 16:18:07,439 - compiler.parser - ERROR - Invalid SQL statement: Token(type = IDENTIFIER, value = City, position = 0)
2025-05-15 16:18:07,440 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = RPAREN, value = ), position = 0), Token(type = SEMICOLON, value = ;, position = 1)]
2025-05-15 16:18:07,441 - compiler.parser - DEBUG - Initialized parser with 2 tokens
2025-05-15 16:18:07,441 - compiler.parser - ERROR - Invalid SQL statement: Token(type = RPAREN, value = ), position = 0)
2025-05-15 16:18:14,609 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = CREATE, position = 0), Token(type = KEYWORD, value = TABLE, position = 7), Token(type = IDENTIFIER, value = Persons, position = 13), Token(type = LPAREN, value = (, position = 21), Token(type = IDENTIFIER, value = PersonID, position = 23), Token(type = KEYWORD, value = INT, position = 32), Token(type = COMMA, value = ,, position = 35), Token(type = IDENTIFIER, value = LastName, position = 37), Token(type = IDENTIFIER, value = varchar, position = 46), Token(type = LPAREN, value = (, position = 53), Token(type = NUMBER, value = 255, position = 54), Token(type = RPAREN, value = ), position = 57), Token(type = COMMA, value = ,, position = 58), Token(type = IDENTIFIER, value = FirstName, position = 60), Token(type = IDENTIFIER, value = varchar, position = 70), Token(type = LPAREN, value = (, position = 77), Token(type = NUMBER, value = 255, position = 78), Token(type = RPAREN, value = ), position = 81), Token(type = COMMA, value = ,, position = 82), Token(type = IDENTIFIER, value = Address, position = 84), Token(type = IDENTIFIER, value = varchar, position = 92), Token(type = LPAREN, value = (, position = 99), Token(type = NUMBER, value = 255, position = 100), Token(type = RPAREN, value = ), position = 103), Token(type = COMMA, value = ,, position = 104), Token(type = IDENTIFIER, value = City, position = 106), Token(type = IDENTIFIER, value = varchar, position = 111), Token(type = LPAREN, value = (, position = 118), Token(type = NUMBER, value = 255, position = 119), Token(type = RPAREN, value = ), position = 122), Token(type = RPAREN, value = ), position = 124), Token(type = SEMICOLON, value = ;, position = 125)]
2025-05-15 16:18:14,618 - compiler.parser - DEBUG - Initialized parser with 32 tokens
2025-05-15 16:18:14,618 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = CREATE, position = 0)
2025-05-15 16:18:14,618 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = TABLE, position = 7)
2025-05-15 16:18:14,618 - compiler.parser - DEBUG - Parsing table name....
2025-05-15 16:18:14,618 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = Persons, position = 13)
2025-05-15 16:18:14,618 - compiler.parser - DEBUG - Table Name Found: Persons
2025-05-15 16:18:14,618 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = Persons, position = 13)
2025-05-15 16:18:14,618 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 21)
2025-05-15 16:18:14,618 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = PersonID, position = 23)
2025-05-15 16:18:14,618 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INT, position = 32)
2025-05-15 16:18:14,618 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 35)
2025-05-15 16:18:14,618 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = LastName, position = 37)
2025-05-15 16:24:19,958 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = CREATE, position = 0), Token(type = KEYWORD, value = TABLE, position = 7), Token(type = IDENTIFIER, value = Persons, position = 13), Token(type = LPAREN, value = (, position = 21), Token(type = IDENTIFIER, value = PersonID, position = 23), Token(type = KEYWORD, value = INT, position = 32), Token(type = COMMA, value = ,, position = 35), Token(type = IDENTIFIER, value = LastName, position = 37), Token(type = IDENTIFIER, value = varchar, position = 46), Token(type = LPAREN, value = (, position = 53), Token(type = NUMBER, value = 255, position = 54), Token(type = RPAREN, value = ), position = 57), Token(type = COMMA, value = ,, position = 58), Token(type = IDENTIFIER, value = FirstName, position = 60), Token(type = IDENTIFIER, value = varchar, position = 70), Token(type = LPAREN, value = (, position = 77), Token(type = NUMBER, value = 255, position = 78), Token(type = RPAREN, value = ), position = 81), Token(type = COMMA, value = ,, position = 82), Token(type = IDENTIFIER, value = Address, position = 84), Token(type = IDENTIFIER, value = varchar, position = 92), Token(type = LPAREN, value = (, position = 99), Token(type = NUMBER, value = 255, position = 100), Token(type = RPAREN, value = ), position = 103), Token(type = COMMA, value = ,, position = 104), Token(type = IDENTIFIER, value = City, position = 106), Token(type = IDENTIFIER, value = varchar, position = 111), Token(type = LPAREN, value = (, position = 118), Token(type = NUMBER, value = 255, position = 119), Token(type = RPAREN, value = ), position = 122), Token(type = RPAREN, value = ), position = 124), Token(type = SEMICOLON, value = ;, position = 125)]
2025-05-15 16:24:19,966 - compiler.parser - DEBUG - Initialized parser with 32 tokens
2025-05-15 16:24:19,967 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = CREATE, position = 0)
2025-05-15 16:24:19,967 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = TABLE, position = 7)
2025-05-15 16:24:19,967 - compiler.parser - DEBUG - Parsing table name....
2025-05-15 16:24:19,967 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = Persons, position = 13)
2025-05-15 16:24:19,967 - compiler.parser - DEBUG - Table Name Found: Persons
2025-05-15 16:24:19,967 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = Persons, position = 13)
2025-05-15 16:24:19,967 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 21)
2025-05-15 16:24:19,967 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = PersonID, position = 23)
2025-05-15 16:24:19,967 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INT, position = 32)
2025-05-15 16:24:19,967 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 35)
2025-05-15 16:24:19,967 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = LastName, position = 37)
2025-05-15 16:24:58,611 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = CREATE, position = 0), Token(type = KEYWORD, value = TABLE, position = 7), Token(type = IDENTIFIER, value = Persons, position = 13), Token(type = LPAREN, value = (, position = 21), Token(type = IDENTIFIER, value = PersonID, position = 23), Token(type = KEYWORD, value = INT, position = 32), Token(type = COMMA, value = ,, position = 35), Token(type = IDENTIFIER, value = LastName, position = 37), Token(type = IDENTIFIER, value = varchar, position = 46), Token(type = LPAREN, value = (, position = 53), Token(type = NUMBER, value = 255, position = 54), Token(type = RPAREN, value = ), position = 57), Token(type = COMMA, value = ,, position = 58), Token(type = IDENTIFIER, value = FirstName, position = 60), Token(type = IDENTIFIER, value = varchar, position = 70), Token(type = LPAREN, value = (, position = 77), Token(type = NUMBER, value = 255, position = 78), Token(type = RPAREN, value = ), position = 81), Token(type = COMMA, value = ,, position = 82), Token(type = IDENTIFIER, value = Address, position = 84), Token(type = IDENTIFIER, value = varchar, position = 92), Token(type = LPAREN, value = (, position = 99), Token(type = NUMBER, value = 255, position = 100), Token(type = RPAREN, value = ), position = 103), Token(type = COMMA, value = ,, position = 104), Token(type = IDENTIFIER, value = City, position = 106), Token(type = IDENTIFIER, value = varchar, position = 111), Token(type = LPAREN, value = (, position = 118), Token(type = NUMBER, value = 255, position = 119), Token(type = RPAREN, value = ), position = 122), Token(type = RPAREN, value = ), position = 123), Token(type = SEMICOLON, value = ;, position = 124)]
2025-05-15 16:24:58,621 - compiler.parser - DEBUG - Initialized parser with 32 tokens
2025-05-15 16:24:58,621 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = CREATE, position = 0)
2025-05-15 16:24:58,621 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = TABLE, position = 7)
2025-05-15 16:24:58,621 - compiler.parser - DEBUG - Parsing table name....
2025-05-15 16:24:58,621 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = Persons, position = 13)
2025-05-15 16:24:58,621 - compiler.parser - DEBUG - Table Name Found: Persons
2025-05-15 16:24:58,621 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = Persons, position = 13)
2025-05-15 16:24:58,621 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 21)
2025-05-15 16:24:58,621 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = PersonID, position = 23)
2025-05-15 16:24:58,621 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INT, position = 32)
2025-05-15 16:24:58,621 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 35)
2025-05-15 16:24:58,622 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = LastName, position = 37)
2025-05-15 16:27:27,669 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = CREATE, position = 0), Token(type = KEYWORD, value = TABLE, position = 7), Token(type = IDENTIFIER, value = Persons, position = 13), Token(type = LPAREN, value = (, position = 21), Token(type = IDENTIFIER, value = PersonID, position = 23), Token(type = KEYWORD, value = INT, position = 32), Token(type = COMMA, value = ,, position = 35), Token(type = IDENTIFIER, value = LastName, position = 37), Token(type = IDENTIFIER, value = VARCHAR, position = 46), Token(type = LPAREN, value = (, position = 53), Token(type = NUMBER, value = 255, position = 54), Token(type = RPAREN, value = ), position = 57), Token(type = COMMA, value = ,, position = 58), Token(type = IDENTIFIER, value = FirstName, position = 60), Token(type = IDENTIFIER, value = VARCHAR, position = 70), Token(type = LPAREN, value = (, position = 77), Token(type = NUMBER, value = 255, position = 78), Token(type = RPAREN, value = ), position = 81), Token(type = COMMA, value = ,, position = 82), Token(type = IDENTIFIER, value = Address, position = 84), Token(type = IDENTIFIER, value = VARCHAR, position = 92), Token(type = LPAREN, value = (, position = 99), Token(type = NUMBER, value = 255, position = 100), Token(type = RPAREN, value = ), position = 103), Token(type = COMMA, value = ,, position = 104), Token(type = IDENTIFIER, value = City, position = 106), Token(type = IDENTIFIER, value = VARCHAR, position = 111), Token(type = LPAREN, value = (, position = 118), Token(type = NUMBER, value = 255, position = 119), Token(type = RPAREN, value = ), position = 122), Token(type = RPAREN, value = ), position = 124), Token(type = SEMICOLON, value = ;, position = 125)]
2025-05-15 16:27:27,680 - compiler.parser - DEBUG - Initialized parser with 32 tokens
2025-05-15 16:27:27,680 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = CREATE, position = 0)
2025-05-15 16:27:27,680 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = TABLE, position = 7)
2025-05-15 16:27:27,681 - compiler.parser - DEBUG - Parsing table name....
2025-05-15 16:27:27,681 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = Persons, position = 13)
2025-05-15 16:27:27,681 - compiler.parser - DEBUG - Table Name Found: Persons
2025-05-15 16:27:27,681 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = Persons, position = 13)
2025-05-15 16:27:27,681 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 21)
2025-05-15 16:27:27,681 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = PersonID, position = 23)
2025-05-15 16:27:27,681 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INT, position = 32)
2025-05-15 16:27:27,681 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 35)
2025-05-15 16:27:27,681 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = LastName, position = 37)
2025-05-15 16:31:37,076 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = CREATE, position = 0), Token(type = KEYWORD, value = TABLE, position = 7), Token(type = IDENTIFIER, value = Persons, position = 13), Token(type = LPAREN, value = (, position = 21), Token(type = IDENTIFIER, value = PersonID, position = 23), Token(type = KEYWORD, value = INT, position = 32), Token(type = COMMA, value = ,, position = 35), Token(type = IDENTIFIER, value = LastName, position = 37), Token(type = KEYWORD, value = VARCHAR, position = 46), Token(type = LPAREN, value = (, position = 53), Token(type = NUMBER, value = 255, position = 54), Token(type = RPAREN, value = ), position = 57), Token(type = COMMA, value = ,, position = 58), Token(type = IDENTIFIER, value = FirstName, position = 60), Token(type = KEYWORD, value = VARCHAR, position = 70), Token(type = LPAREN, value = (, position = 77), Token(type = NUMBER, value = 255, position = 78), Token(type = RPAREN, value = ), position = 81), Token(type = COMMA, value = ,, position = 82), Token(type = IDENTIFIER, value = Address, position = 84), Token(type = KEYWORD, value = VARCHAR, position = 92), Token(type = LPAREN, value = (, position = 99), Token(type = NUMBER, value = 255, position = 100), Token(type = RPAREN, value = ), position = 103), Token(type = COMMA, value = ,, position = 104), Token(type = IDENTIFIER, value = City, position = 106), Token(type = KEYWORD, value = VARCHAR, position = 111), Token(type = LPAREN, value = (, position = 118), Token(type = NUMBER, value = 255, position = 119), Token(type = RPAREN, value = ), position = 122), Token(type = RPAREN, value = ), position = 123), Token(type = SEMICOLON, value = ;, position = 124)]
2025-05-15 16:31:37,087 - compiler.parser - DEBUG - Initialized parser with 32 tokens
2025-05-15 16:31:37,087 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = CREATE, position = 0)
2025-05-15 16:31:37,087 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = TABLE, position = 7)
2025-05-15 16:31:37,087 - compiler.parser - DEBUG - Parsing table name....
2025-05-15 16:31:37,087 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = Persons, position = 13)
2025-05-15 16:31:37,087 - compiler.parser - DEBUG - Table Name Found: Persons
2025-05-15 16:31:37,087 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = Persons, position = 13)
2025-05-15 16:31:37,088 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 21)
2025-05-15 16:31:37,088 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = PersonID, position = 23)
2025-05-15 16:31:37,088 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INT, position = 32)
2025-05-15 16:31:37,088 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 35)
2025-05-15 16:31:37,088 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = LastName, position = 37)
2025-05-15 16:31:37,088 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = VARCHAR, position = 46)
2025-05-15 16:31:37,088 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 53)
2025-05-15 16:31:37,088 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 255, position = 54)
2025-05-15 16:31:37,088 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 57)
2025-05-15 16:31:37,088 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 58)
2025-05-15 16:31:37,088 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = FirstName, position = 60)
2025-05-15 16:31:37,088 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = VARCHAR, position = 70)
2025-05-15 16:31:37,088 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 77)
2025-05-15 16:31:37,088 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 255, position = 78)
2025-05-15 16:31:37,088 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 81)
2025-05-15 16:31:37,088 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 82)
2025-05-15 16:31:37,088 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = Address, position = 84)
2025-05-15 16:31:37,088 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = VARCHAR, position = 92)
2025-05-15 16:31:37,088 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 99)
2025-05-15 16:31:37,088 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 255, position = 100)
2025-05-15 16:31:37,088 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 103)
2025-05-15 16:31:37,088 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 104)
2025-05-15 16:31:37,088 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = City, position = 106)
2025-05-15 16:31:37,088 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = VARCHAR, position = 111)
2025-05-15 16:31:37,088 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 118)
2025-05-15 16:31:37,088 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 255, position = 119)
2025-05-15 16:31:37,089 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 122)
2025-05-15 16:31:37,089 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 123)
2025-05-15 16:40:34,324 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = CREATE, position = 0), Token(type = KEYWORD, value = TABLE, position = 7), Token(type = IDENTIFIER, value = Persons, position = 13), Token(type = LPAREN, value = (, position = 21), Token(type = IDENTIFIER, value = PersonID, position = 23), Token(type = KEYWORD, value = INT, position = 32), Token(type = COMMA, value = ,, position = 35), Token(type = IDENTIFIER, value = LastName, position = 37), Token(type = KEYWORD, value = VARCHAR, position = 46), Token(type = LPAREN, value = (, position = 53), Token(type = NUMBER, value = 255, position = 54), Token(type = RPAREN, value = ), position = 57), Token(type = COMMA, value = ,, position = 58), Token(type = IDENTIFIER, value = FirstName, position = 60), Token(type = KEYWORD, value = VARCHAR, position = 70), Token(type = LPAREN, value = (, position = 77), Token(type = NUMBER, value = 255, position = 78), Token(type = RPAREN, value = ), position = 81), Token(type = COMMA, value = ,, position = 82), Token(type = IDENTIFIER, value = Address, position = 84), Token(type = KEYWORD, value = VARCHAR, position = 92), Token(type = LPAREN, value = (, position = 99), Token(type = NUMBER, value = 255, position = 100), Token(type = RPAREN, value = ), position = 103), Token(type = COMMA, value = ,, position = 104), Token(type = IDENTIFIER, value = City, position = 106), Token(type = KEYWORD, value = VARCHAR, position = 111), Token(type = LPAREN, value = (, position = 118), Token(type = NUMBER, value = 255, position = 119), Token(type = RPAREN, value = ), position = 122), Token(type = RPAREN, value = ), position = 123), Token(type = SEMICOLON, value = ;, position = 124)]
2025-05-15 16:40:34,334 - compiler.parser - DEBUG - Initialized parser with 32 tokens
2025-05-15 16:40:34,334 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = CREATE, position = 0)
2025-05-15 16:40:34,334 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = TABLE, position = 7)
2025-05-15 16:40:34,334 - compiler.parser - DEBUG - Parsing table name....
2025-05-15 16:40:34,334 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = Persons, position = 13)
2025-05-15 16:40:34,334 - compiler.parser - DEBUG - Table Name Found: Persons
2025-05-15 16:40:34,335 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = Persons, position = 13)
2025-05-15 16:40:34,335 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 21)
2025-05-15 16:40:34,335 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = PersonID, position = 23)
2025-05-15 16:40:34,335 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INT, position = 32)
2025-05-15 16:40:34,335 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 35)
2025-05-15 16:40:34,335 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = LastName, position = 37)
2025-05-15 16:40:34,335 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = VARCHAR, position = 46)
2025-05-15 16:40:34,335 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 53)
2025-05-15 16:40:34,335 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 255, position = 54)
2025-05-15 16:40:34,335 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 57)
2025-05-15 16:40:34,335 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 58)
2025-05-15 16:40:34,335 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = FirstName, position = 60)
2025-05-15 16:40:34,335 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = VARCHAR, position = 70)
2025-05-15 16:40:34,335 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 77)
2025-05-15 16:40:34,335 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 255, position = 78)
2025-05-15 16:40:34,335 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 81)
2025-05-15 16:40:34,335 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 82)
2025-05-15 16:40:34,335 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = Address, position = 84)
2025-05-15 16:40:34,335 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = VARCHAR, position = 92)
2025-05-15 16:40:34,335 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 99)
2025-05-15 16:40:34,335 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 255, position = 100)
2025-05-15 16:40:34,335 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 103)
2025-05-15 16:40:34,335 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 104)
2025-05-15 16:40:34,335 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = City, position = 106)
2025-05-15 16:40:34,335 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = VARCHAR, position = 111)
2025-05-15 16:40:34,335 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 118)
2025-05-15 16:40:34,335 - compiler.parser - DEBUG - Processed token: Token(type = NUMBER, value = 255, position = 119)
2025-05-15 16:40:34,335 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 122)
2025-05-15 16:40:34,335 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 123)
2025-05-15 16:40:34,335 - compiler.statements.create_parser - INFO - Updated schema registry with table Persons
2025-05-15 16:40:34,343 - compiler.code_generator - DEBUG - Creating Table: Persons with columns: [{'name': 'PersonID', 'type': 'INT', 'size': None, 'constraints': []}, {'name': 'LastName', 'type': 'VARCHAR', 'size': 255, 'constraints': []}, {'name': 'FirstName', 'type': 'VARCHAR', 'size': 255, 'constraints': []}, {'name': 'Address', 'type': 'VARCHAR', 'size': 255, 'constraints': []}, {'name': 'City', 'type': 'VARCHAR', 'size': 255, 'constraints': []}]
2025-05-15 16:40:34,343 - compiler.code_generator - INFO - Table Persons creation with columns finished.
2025-05-15 16:40:34,343 - compiler.code_generator - INFO - Generating execution plan for CreateTableCommand
2025-05-15 16:40:34,343 - compiler.code_generator - DEBUG - Generating CREATE TABLE plan for Persons
2025-05-15 16:40:34,343 - compiler.code_generator - DEBUG - Generated CREATE plan: [('CREATE_TABLE', 'Persons', [{'name': 'PersonID', 'type': 'INT', 'size': None, 'constraints': []}, {'name': 'LastName', 'type': 'VARCHAR', 'size': 255, 'constraints': []}, {'name': 'FirstName', 'type': 'VARCHAR', 'size': 255, 'constraints': []}, {'name': 'Address', 'type': 'VARCHAR', 'size': 255, 'constraints': []}, {'name': 'City', 'type': 'VARCHAR', 'size': 255, 'constraints': []}])]
2025-05-15 16:40:59,884 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = CREATE, position = 0), Token(type = KEYWORD, value = TABLE, position = 7), Token(type = NUMBER, value = 888, position = 13), Token(type = LPAREN, value = (, position = 17), Token(type = IDENTIFIER, value = PersonID, position = 19), Token(type = KEYWORD, value = INT, position = 28), Token(type = COMMA, value = ,, position = 31), Token(type = IDENTIFIER, value = LastName, position = 33), Token(type = KEYWORD, value = VARCHAR, position = 42), Token(type = LPAREN, value = (, position = 49), Token(type = NUMBER, value = 255, position = 50), Token(type = RPAREN, value = ), position = 53), Token(type = COMMA, value = ,, position = 54), Token(type = IDENTIFIER, value = FirstName, position = 56), Token(type = KEYWORD, value = VARCHAR, position = 66), Token(type = LPAREN, value = (, position = 73), Token(type = NUMBER, value = 255, position = 74), Token(type = RPAREN, value = ), position = 77), Token(type = COMMA, value = ,, position = 78), Token(type = IDENTIFIER, value = Address, position = 80), Token(type = KEYWORD, value = VARCHAR, position = 88), Token(type = LPAREN, value = (, position = 95), Token(type = NUMBER, value = 255, position = 96), Token(type = RPAREN, value = ), position = 99), Token(type = COMMA, value = ,, position = 100), Token(type = IDENTIFIER, value = City, position = 102), Token(type = KEYWORD, value = VARCHAR, position = 107), Token(type = LPAREN, value = (, position = 114), Token(type = NUMBER, value = 255, position = 115), Token(type = RPAREN, value = ), position = 118), Token(type = RPAREN, value = ), position = 119), Token(type = SEMICOLON, value = ;, position = 120)]
2025-05-15 16:40:59,894 - compiler.parser - DEBUG - Initialized parser with 32 tokens
2025-05-15 16:40:59,894 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = CREATE, position = 0)
2025-05-15 16:40:59,894 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = TABLE, position = 7)
2025-05-15 16:40:59,894 - compiler.parser - DEBUG - Parsing table name....
2025-05-15 16:40:59,894 - compiler.parser - DEBUG - Current token in table_name: Token(type = NUMBER, value = 888, position = 13)
2025-05-15 16:40:59,894 - compiler.parser - ERROR - Expected table name, but got 888
2025-05-17 03:55:21,515 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = SELECT, position = 0), Token(type = IDENTIFIER, value = Name, position = 7), Token(type = KEYWORD, value = FROM, position = 12), Token(type = IDENTIFIER, value = Persons, position = 17), Token(type = KEYWORD, value = WHERE, position = 25), Token(type = IDENTIFIER, value = City, position = 31), Token(type = EQUALS, value = =, position = 36), Token(type = STRING, value = Delhi, position = 38)]
2025-05-17 03:55:21,515 - compiler.parser - DEBUG - Initialized parser with 8 tokens
2025-05-17 03:55:21,515 - compiler.statements.select_parser - DEBUG - Parsing SELECT statement...
2025-05-17 03:55:21,515 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = SELECT, position = 0)
2025-05-17 03:55:21,515 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = FROM, position = 12)
2025-05-17 03:55:21,515 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = Persons, position = 17)
2025-05-17 03:55:21,515 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = WHERE, position = 25)
2025-05-17 03:55:21,515 - compiler.parser - DEBUG - Parsing WHERE condition
2025-05-17 03:55:21,515 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = City, position = 31)
2025-05-17 03:55:21,515 - compiler.parser - DEBUG - Found WHERE column: City
2025-05-17 03:55:21,515 - compiler.parser - DEBUG - Processed token: Token(type = EQUALS, value = =, position = 36)
2025-05-17 03:55:21,515 - compiler.parser - DEBUG - Found operator: =
2025-05-17 03:55:21,515 - compiler.parser - DEBUG - Processed token: Token(type = STRING, value = Delhi, position = 38)
2025-05-17 03:55:21,523 - compiler.code_generator - INFO - Generating execution plan for SelectTableCommand
2025-05-17 03:55:21,523 - compiler.code_generator - DEBUG - Generating SELECT plan for Persons
2025-05-17 03:55:21,523 - compiler.code_generator - DEBUG - Generated SELECT plan: [('OPEN_TABLE', 'Persons'), 'SCAN_START', ('LOAD_COLUMN', 'City'), ('LOAD_CONST', 'Delhi'), 'COMPARE_EQ', ('JUMP_IF_FALSE', 'label_1'), ('EMIT_ROW', ['Name']), ('LABEL', 'label_1'), 'SCAN_END']
2025-05-17 03:58:22,942 - compiler.tokenizer - INFO - Tokenized successfully: [Token(type = KEYWORD, value = INSERT, position = 0), Token(type = KEYWORD, value = INTO, position = 7), Token(type = IDENTIFIER, value = Persons, position = 12), Token(type = LPAREN, value = (, position = 20), Token(type = IDENTIFIER, value = Name, position = 21), Token(type = COMMA, value = ,, position = 25), Token(type = IDENTIFIER, value = City, position = 27), Token(type = RPAREN, value = ), position = 31), Token(type = KEYWORD, value = VALUES, position = 33), Token(type = LPAREN, value = (, position = 40), Token(type = STRING, value = Lakshay, position = 41), Token(type = COMMA, value = ,, position = 50), Token(type = STRING, value = Delhi, position = 52), Token(type = RPAREN, value = ), position = 59), Token(type = SEMICOLON, value = ;, position = 60)]
2025-05-17 03:58:22,955 - compiler.parser - DEBUG - Initialized parser with 15 tokens
2025-05-17 03:58:22,955 - compiler.statements.insert_parser - DEBUG - Parsing INSERT statement...
2025-05-17 03:58:22,955 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INSERT, position = 0)
2025-05-17 03:58:22,955 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = INTO, position = 7)
2025-05-17 03:58:22,955 - compiler.parser - DEBUG - Parsing table name....
2025-05-17 03:58:22,955 - compiler.parser - DEBUG - Current token in table_name: Token(type = IDENTIFIER, value = Persons, position = 12)
2025-05-17 03:58:22,955 - compiler.parser - DEBUG - Table Name Found: Persons
2025-05-17 03:58:22,955 - compiler.parser - DEBUG - Processed token: Token(type = IDENTIFIER, value = Persons, position = 12)
2025-05-17 03:58:22,955 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 20)
2025-05-17 03:58:22,955 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 31)
2025-05-17 03:58:22,955 - compiler.parser - DEBUG - Processed token: Token(type = KEYWORD, value = VALUES, position = 33)
2025-05-17 03:58:22,955 - compiler.parser - DEBUG - Processed token: Token(type = LPAREN, value = (, position = 40)
2025-05-17 03:58:22,955 - compiler.parser - DEBUG - Processed token: Token(type = STRING, value = Lakshay, position = 41)
2025-05-17 03:58:22,955 - compiler.parser - DEBUG - Processed token: Token(type = COMMA, value = ,, position = 50)
2025-05-17 03:58:22,955 - compiler.parser - DEBUG - Processed token: Token(type = STRING, value = Delhi, position = 52)
2025-05-17 03:58:22,955 - compiler.parser - DEBUG - Processed token: Token(type = RPAREN, value = ), position = 59)
2025-05-17 03:58:22,955 - compiler.parser - DEBUG - Processed token: Token(type = SEMICOLON, value = ;, position = 60)
2025-05-17 03:58:22,960 - compiler.code_generator - INFO - Generating execution plan for InsertCommand
2025-05-17 03:58:22,960 - compiler.code_generator - DEBUG - Generating INSERT plan for Persons
2025-05-17 03:58:22,960 - compiler.code_generator - DEBUG - Generated INSERT plan: [('LOAD_CONST', 'Lakshay'), ('LOAD_CONST', 'Delhi'), ('INSERT_ROW', 'Persons')]
